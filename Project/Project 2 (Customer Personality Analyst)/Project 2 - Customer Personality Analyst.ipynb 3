{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "a80647c5",
   "metadata": {},
   "source": [
    "<div>\n",
    "<img src=https://www.institutedata.com/wp-content/uploads/2019/10/iod_h_tp_primary_c.svg width=\"300\">\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "72a17150",
   "metadata": {},
   "source": [
    "# Project 2: Customer Personality Analysis "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c19a385b",
   "metadata": {},
   "source": [
    "Customer Personality Analysis is a detailed analysis of a company’s ideal customers. It helps a business to better understand its customers and makes it easier for them to modify products according to the specific needs, behaviors and concerns of different types of customers.\n",
    "\n",
    "Customer personality analysis helps a business to modify its product based on its target customers from different types of customer segments. For example, instead of spending money to market a new product to every customer in the company’s database, a company can analyze which customer segment is most likely to buy the product and then market the product only on that particular segment."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "261eec1e",
   "metadata": {},
   "source": [
    "Understand the data, predict if the customer will get the product. \n",
    "\n",
    "Use Logistic Regression to make our prediction. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6a8448ac",
   "metadata": {},
   "source": [
    "- predict ['Response']\n",
    "\n",
    "SVM/LogReg/\n",
    "\n",
    "- Which feature is impt. \n",
    "- which X is most impt, find one solution/action for stakeholders. \n",
    "- rbf ... "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b581a553",
   "metadata": {},
   "source": [
    "Z-cost contact, Z-revenue have same value in all data points. so these two columns are not relevant and can be dropped. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f35c0e18",
   "metadata": {},
   "source": [
    "## Import Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "8fc849f6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Populating the interactive namespace from numpy and matplotlib\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/anna_hj/opt/anaconda3/lib/python3.8/site-packages/IPython/core/magics/pylab.py:159: UserWarning: pylab import has clobbered these variables: ['indices']\n",
      "`%matplotlib` prevents importing * from pylab and numpy\n",
      "  warn(\"pylab import has clobbered these variables: %s\"  % clobbered +\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import math\n",
    "import seaborn as sns\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.pylab as pylab\n",
    "from scipy import stats\n",
    "\n",
    "# Cause plots to be displayed in the notebook:\n",
    "%pylab inline\n",
    "%matplotlib inline\n",
    "\n",
    "\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.datasets import make_blobs\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.datasets import make_classification\n",
    "from sklearn import svm, datasets\n",
    "from sklearn.model_selection import train_test_split, GridSearchCV\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn import metrics\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "81347fa2",
   "metadata": {},
   "source": [
    "## Taking a glance at the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "32e55437",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Year_Birth</th>\n",
       "      <th>Education</th>\n",
       "      <th>Marital_Status</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Dt_Customer</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>...</th>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Z_CostContact</th>\n",
       "      <th>Z_Revenue</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5524</td>\n",
       "      <td>1957</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Single</td>\n",
       "      <td>58138.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>04-09-2012</td>\n",
       "      <td>58</td>\n",
       "      <td>635</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2174</td>\n",
       "      <td>1954</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Single</td>\n",
       "      <td>46344.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>08-03-2014</td>\n",
       "      <td>38</td>\n",
       "      <td>11</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4141</td>\n",
       "      <td>1965</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Together</td>\n",
       "      <td>71613.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>21-08-2013</td>\n",
       "      <td>26</td>\n",
       "      <td>426</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6182</td>\n",
       "      <td>1984</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Together</td>\n",
       "      <td>26646.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>10-02-2014</td>\n",
       "      <td>26</td>\n",
       "      <td>11</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5324</td>\n",
       "      <td>1981</td>\n",
       "      <td>PhD</td>\n",
       "      <td>Married</td>\n",
       "      <td>58293.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>19-01-2014</td>\n",
       "      <td>94</td>\n",
       "      <td>173</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 29 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     ID  Year_Birth   Education Marital_Status   Income  Kidhome  Teenhome  \\\n",
       "0  5524        1957  Graduation         Single  58138.0        0         0   \n",
       "1  2174        1954  Graduation         Single  46344.0        1         1   \n",
       "2  4141        1965  Graduation       Together  71613.0        0         0   \n",
       "3  6182        1984  Graduation       Together  26646.0        1         0   \n",
       "4  5324        1981         PhD        Married  58293.0        1         0   \n",
       "\n",
       "  Dt_Customer  Recency  MntWines  ...  NumWebVisitsMonth  AcceptedCmp3  \\\n",
       "0  04-09-2012       58       635  ...                  7             0   \n",
       "1  08-03-2014       38        11  ...                  5             0   \n",
       "2  21-08-2013       26       426  ...                  4             0   \n",
       "3  10-02-2014       26        11  ...                  6             0   \n",
       "4  19-01-2014       94       173  ...                  5             0   \n",
       "\n",
       "   AcceptedCmp4  AcceptedCmp5  AcceptedCmp1  AcceptedCmp2  Complain  \\\n",
       "0             0             0             0             0         0   \n",
       "1             0             0             0             0         0   \n",
       "2             0             0             0             0         0   \n",
       "3             0             0             0             0         0   \n",
       "4             0             0             0             0         0   \n",
       "\n",
       "   Z_CostContact  Z_Revenue  Response  \n",
       "0              3         11         1  \n",
       "1              3         11         0  \n",
       "2              3         11         0  \n",
       "3              3         11         0  \n",
       "4              3         11         0  \n",
       "\n",
       "[5 rows x 29 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Reading the file\n",
    "#First 5 rows of data\n",
    "data = pd.read_csv(\"marketing_campaign.csv\", sep=\"\\t\")\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5124bfbc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of rows: 2240\n",
      "Number of columns: 29\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(2240, 29)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"Number of rows:\", len(data))\n",
    "print(\"Number of columns:\", data.shape[1])\n",
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6bc99c42",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['ID', 'Year_Birth', 'Education', 'Marital_Status', 'Income', 'Kidhome',\n",
       "       'Teenhome', 'Dt_Customer', 'Recency', 'MntWines', 'MntFruits',\n",
       "       'MntMeatProducts', 'MntFishProducts', 'MntSweetProducts',\n",
       "       'MntGoldProds', 'NumDealsPurchases', 'NumWebPurchases',\n",
       "       'NumCatalogPurchases', 'NumStorePurchases', 'NumWebVisitsMonth',\n",
       "       'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5', 'AcceptedCmp1',\n",
       "       'AcceptedCmp2', 'Complain', 'Z_CostContact', 'Z_Revenue', 'Response'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7d66bd5c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Year_Birth</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>MntFruits</th>\n",
       "      <th>MntMeatProducts</th>\n",
       "      <th>MntFishProducts</th>\n",
       "      <th>...</th>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Z_CostContact</th>\n",
       "      <th>Z_Revenue</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>ID</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000028</td>\n",
       "      <td>0.013095</td>\n",
       "      <td>0.002406</td>\n",
       "      <td>-0.002580</td>\n",
       "      <td>-0.046524</td>\n",
       "      <td>-0.022878</td>\n",
       "      <td>0.004600</td>\n",
       "      <td>-0.004437</td>\n",
       "      <td>-0.024475</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.007446</td>\n",
       "      <td>-0.036040</td>\n",
       "      <td>-0.025387</td>\n",
       "      <td>-0.007517</td>\n",
       "      <td>-0.021614</td>\n",
       "      <td>-0.015061</td>\n",
       "      <td>0.033883</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.021968</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Year_Birth</th>\n",
       "      <td>0.000028</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.161791</td>\n",
       "      <td>0.230176</td>\n",
       "      <td>-0.352111</td>\n",
       "      <td>-0.019871</td>\n",
       "      <td>-0.157773</td>\n",
       "      <td>-0.017917</td>\n",
       "      <td>-0.030872</td>\n",
       "      <td>-0.041625</td>\n",
       "      <td>...</td>\n",
       "      <td>0.121139</td>\n",
       "      <td>0.061774</td>\n",
       "      <td>-0.060510</td>\n",
       "      <td>0.007123</td>\n",
       "      <td>-0.005930</td>\n",
       "      <td>-0.006539</td>\n",
       "      <td>-0.030128</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.021325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Income</th>\n",
       "      <td>0.013095</td>\n",
       "      <td>-0.161791</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.428669</td>\n",
       "      <td>0.019133</td>\n",
       "      <td>-0.003970</td>\n",
       "      <td>0.578650</td>\n",
       "      <td>0.430842</td>\n",
       "      <td>0.584633</td>\n",
       "      <td>0.438871</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.553088</td>\n",
       "      <td>-0.016174</td>\n",
       "      <td>0.184400</td>\n",
       "      <td>0.335943</td>\n",
       "      <td>0.276820</td>\n",
       "      <td>0.087545</td>\n",
       "      <td>-0.027225</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.133047</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kidhome</th>\n",
       "      <td>0.002406</td>\n",
       "      <td>0.230176</td>\n",
       "      <td>-0.428669</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.036133</td>\n",
       "      <td>0.008827</td>\n",
       "      <td>-0.496297</td>\n",
       "      <td>-0.372581</td>\n",
       "      <td>-0.437129</td>\n",
       "      <td>-0.387644</td>\n",
       "      <td>...</td>\n",
       "      <td>0.447846</td>\n",
       "      <td>0.014674</td>\n",
       "      <td>-0.161600</td>\n",
       "      <td>-0.205634</td>\n",
       "      <td>-0.172339</td>\n",
       "      <td>-0.081716</td>\n",
       "      <td>0.040207</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.080008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Teenhome</th>\n",
       "      <td>-0.002580</td>\n",
       "      <td>-0.352111</td>\n",
       "      <td>0.019133</td>\n",
       "      <td>-0.036133</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.016198</td>\n",
       "      <td>0.004846</td>\n",
       "      <td>-0.176764</td>\n",
       "      <td>-0.261160</td>\n",
       "      <td>-0.204187</td>\n",
       "      <td>...</td>\n",
       "      <td>0.134884</td>\n",
       "      <td>-0.042677</td>\n",
       "      <td>0.038886</td>\n",
       "      <td>-0.191050</td>\n",
       "      <td>-0.140090</td>\n",
       "      <td>-0.015605</td>\n",
       "      <td>0.003138</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.154446</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Recency</th>\n",
       "      <td>-0.046524</td>\n",
       "      <td>-0.019871</td>\n",
       "      <td>-0.003970</td>\n",
       "      <td>0.008827</td>\n",
       "      <td>0.016198</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.016064</td>\n",
       "      <td>-0.004306</td>\n",
       "      <td>0.023056</td>\n",
       "      <td>0.001079</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.021445</td>\n",
       "      <td>-0.032991</td>\n",
       "      <td>0.018826</td>\n",
       "      <td>0.000129</td>\n",
       "      <td>-0.019283</td>\n",
       "      <td>-0.001781</td>\n",
       "      <td>0.013231</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.198437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MntWines</th>\n",
       "      <td>-0.022878</td>\n",
       "      <td>-0.157773</td>\n",
       "      <td>0.578650</td>\n",
       "      <td>-0.496297</td>\n",
       "      <td>0.004846</td>\n",
       "      <td>0.016064</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.389637</td>\n",
       "      <td>0.562667</td>\n",
       "      <td>0.399753</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.320653</td>\n",
       "      <td>0.062202</td>\n",
       "      <td>0.373286</td>\n",
       "      <td>0.472613</td>\n",
       "      <td>0.354133</td>\n",
       "      <td>0.205907</td>\n",
       "      <td>-0.039007</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.247254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MntFruits</th>\n",
       "      <td>0.004600</td>\n",
       "      <td>-0.017917</td>\n",
       "      <td>0.430842</td>\n",
       "      <td>-0.372581</td>\n",
       "      <td>-0.176764</td>\n",
       "      <td>-0.004306</td>\n",
       "      <td>0.389637</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.543105</td>\n",
       "      <td>0.594804</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.418383</td>\n",
       "      <td>0.014727</td>\n",
       "      <td>0.010152</td>\n",
       "      <td>0.215833</td>\n",
       "      <td>0.194748</td>\n",
       "      <td>-0.009773</td>\n",
       "      <td>-0.005166</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.125289</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MntMeatProducts</th>\n",
       "      <td>-0.004437</td>\n",
       "      <td>-0.030872</td>\n",
       "      <td>0.584633</td>\n",
       "      <td>-0.437129</td>\n",
       "      <td>-0.261160</td>\n",
       "      <td>0.023056</td>\n",
       "      <td>0.562667</td>\n",
       "      <td>0.543105</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.568402</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.539470</td>\n",
       "      <td>0.018272</td>\n",
       "      <td>0.102912</td>\n",
       "      <td>0.373769</td>\n",
       "      <td>0.309761</td>\n",
       "      <td>0.043033</td>\n",
       "      <td>-0.023483</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.236335</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MntFishProducts</th>\n",
       "      <td>-0.024475</td>\n",
       "      <td>-0.041625</td>\n",
       "      <td>0.438871</td>\n",
       "      <td>-0.387644</td>\n",
       "      <td>-0.204187</td>\n",
       "      <td>0.001079</td>\n",
       "      <td>0.399753</td>\n",
       "      <td>0.594804</td>\n",
       "      <td>0.568402</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.446003</td>\n",
       "      <td>0.000357</td>\n",
       "      <td>0.016843</td>\n",
       "      <td>0.199578</td>\n",
       "      <td>0.260762</td>\n",
       "      <td>0.002577</td>\n",
       "      <td>-0.020953</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.111331</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MntSweetProducts</th>\n",
       "      <td>-0.007642</td>\n",
       "      <td>-0.018133</td>\n",
       "      <td>0.440744</td>\n",
       "      <td>-0.370673</td>\n",
       "      <td>-0.162475</td>\n",
       "      <td>0.022670</td>\n",
       "      <td>0.386581</td>\n",
       "      <td>0.567164</td>\n",
       "      <td>0.523846</td>\n",
       "      <td>0.579870</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.423294</td>\n",
       "      <td>0.001530</td>\n",
       "      <td>0.028641</td>\n",
       "      <td>0.259590</td>\n",
       "      <td>0.241818</td>\n",
       "      <td>0.009985</td>\n",
       "      <td>-0.022485</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.117372</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MntGoldProds</th>\n",
       "      <td>-0.013438</td>\n",
       "      <td>-0.061818</td>\n",
       "      <td>0.325916</td>\n",
       "      <td>-0.349595</td>\n",
       "      <td>-0.021725</td>\n",
       "      <td>0.016693</td>\n",
       "      <td>0.387516</td>\n",
       "      <td>0.392995</td>\n",
       "      <td>0.350609</td>\n",
       "      <td>0.422875</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.250719</td>\n",
       "      <td>0.123091</td>\n",
       "      <td>0.022268</td>\n",
       "      <td>0.181021</td>\n",
       "      <td>0.166396</td>\n",
       "      <td>0.049990</td>\n",
       "      <td>-0.030861</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.139850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NumDealsPurchases</th>\n",
       "      <td>-0.037166</td>\n",
       "      <td>-0.060846</td>\n",
       "      <td>-0.083101</td>\n",
       "      <td>0.221798</td>\n",
       "      <td>0.387741</td>\n",
       "      <td>-0.001098</td>\n",
       "      <td>0.010940</td>\n",
       "      <td>-0.132114</td>\n",
       "      <td>-0.122415</td>\n",
       "      <td>-0.139361</td>\n",
       "      <td>...</td>\n",
       "      <td>0.347633</td>\n",
       "      <td>-0.023109</td>\n",
       "      <td>0.015594</td>\n",
       "      <td>-0.183248</td>\n",
       "      <td>-0.123244</td>\n",
       "      <td>-0.037695</td>\n",
       "      <td>0.000420</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.002238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NumWebPurchases</th>\n",
       "      <td>-0.018924</td>\n",
       "      <td>-0.145040</td>\n",
       "      <td>0.387878</td>\n",
       "      <td>-0.361647</td>\n",
       "      <td>0.155500</td>\n",
       "      <td>-0.010726</td>\n",
       "      <td>0.542265</td>\n",
       "      <td>0.296735</td>\n",
       "      <td>0.293761</td>\n",
       "      <td>0.293681</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.055846</td>\n",
       "      <td>0.042176</td>\n",
       "      <td>0.155903</td>\n",
       "      <td>0.138684</td>\n",
       "      <td>0.155143</td>\n",
       "      <td>0.034188</td>\n",
       "      <td>-0.016310</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.148730</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NumCatalogPurchases</th>\n",
       "      <td>-0.003440</td>\n",
       "      <td>-0.121275</td>\n",
       "      <td>0.589162</td>\n",
       "      <td>-0.502237</td>\n",
       "      <td>-0.110769</td>\n",
       "      <td>0.025110</td>\n",
       "      <td>0.635226</td>\n",
       "      <td>0.487917</td>\n",
       "      <td>0.723827</td>\n",
       "      <td>0.534478</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.520364</td>\n",
       "      <td>0.104730</td>\n",
       "      <td>0.139247</td>\n",
       "      <td>0.322321</td>\n",
       "      <td>0.308097</td>\n",
       "      <td>0.099852</td>\n",
       "      <td>-0.020453</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.220810</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NumStorePurchases</th>\n",
       "      <td>-0.014927</td>\n",
       "      <td>-0.128272</td>\n",
       "      <td>0.529362</td>\n",
       "      <td>-0.499683</td>\n",
       "      <td>0.050695</td>\n",
       "      <td>0.000799</td>\n",
       "      <td>0.642100</td>\n",
       "      <td>0.461758</td>\n",
       "      <td>0.479659</td>\n",
       "      <td>0.459855</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.428473</td>\n",
       "      <td>-0.067577</td>\n",
       "      <td>0.179379</td>\n",
       "      <td>0.214790</td>\n",
       "      <td>0.183249</td>\n",
       "      <td>0.085189</td>\n",
       "      <td>-0.016524</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.039363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <td>-0.007446</td>\n",
       "      <td>0.121139</td>\n",
       "      <td>-0.553088</td>\n",
       "      <td>0.447846</td>\n",
       "      <td>0.134884</td>\n",
       "      <td>-0.021445</td>\n",
       "      <td>-0.320653</td>\n",
       "      <td>-0.418383</td>\n",
       "      <td>-0.539470</td>\n",
       "      <td>-0.446003</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.061211</td>\n",
       "      <td>-0.032126</td>\n",
       "      <td>-0.278113</td>\n",
       "      <td>-0.192502</td>\n",
       "      <td>-0.007196</td>\n",
       "      <td>0.019769</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.003987</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <td>-0.036040</td>\n",
       "      <td>0.061774</td>\n",
       "      <td>-0.016174</td>\n",
       "      <td>0.014674</td>\n",
       "      <td>-0.042677</td>\n",
       "      <td>-0.032991</td>\n",
       "      <td>0.062202</td>\n",
       "      <td>0.014727</td>\n",
       "      <td>0.018272</td>\n",
       "      <td>0.000357</td>\n",
       "      <td>...</td>\n",
       "      <td>0.061211</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.079512</td>\n",
       "      <td>0.080316</td>\n",
       "      <td>0.094751</td>\n",
       "      <td>0.072020</td>\n",
       "      <td>0.008415</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.254258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <td>-0.025387</td>\n",
       "      <td>-0.060510</td>\n",
       "      <td>0.184400</td>\n",
       "      <td>-0.161600</td>\n",
       "      <td>0.038886</td>\n",
       "      <td>0.018826</td>\n",
       "      <td>0.373286</td>\n",
       "      <td>0.010152</td>\n",
       "      <td>0.102912</td>\n",
       "      <td>0.016843</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.032126</td>\n",
       "      <td>-0.079512</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.306526</td>\n",
       "      <td>0.251300</td>\n",
       "      <td>0.292210</td>\n",
       "      <td>-0.027611</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.177019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <td>-0.007517</td>\n",
       "      <td>0.007123</td>\n",
       "      <td>0.335943</td>\n",
       "      <td>-0.205634</td>\n",
       "      <td>-0.191050</td>\n",
       "      <td>0.000129</td>\n",
       "      <td>0.472613</td>\n",
       "      <td>0.215833</td>\n",
       "      <td>0.373769</td>\n",
       "      <td>0.199578</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.278113</td>\n",
       "      <td>0.080316</td>\n",
       "      <td>0.306526</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.403078</td>\n",
       "      <td>0.221533</td>\n",
       "      <td>-0.009419</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.326634</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <td>-0.021614</td>\n",
       "      <td>-0.005930</td>\n",
       "      <td>0.276820</td>\n",
       "      <td>-0.172339</td>\n",
       "      <td>-0.140090</td>\n",
       "      <td>-0.019283</td>\n",
       "      <td>0.354133</td>\n",
       "      <td>0.194748</td>\n",
       "      <td>0.309761</td>\n",
       "      <td>0.260762</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.192502</td>\n",
       "      <td>0.094751</td>\n",
       "      <td>0.251300</td>\n",
       "      <td>0.403078</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.175315</td>\n",
       "      <td>-0.025499</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.293982</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <td>-0.015061</td>\n",
       "      <td>-0.006539</td>\n",
       "      <td>0.087545</td>\n",
       "      <td>-0.081716</td>\n",
       "      <td>-0.015605</td>\n",
       "      <td>-0.001781</td>\n",
       "      <td>0.205907</td>\n",
       "      <td>-0.009773</td>\n",
       "      <td>0.043033</td>\n",
       "      <td>0.002577</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.007196</td>\n",
       "      <td>0.072020</td>\n",
       "      <td>0.292210</td>\n",
       "      <td>0.221533</td>\n",
       "      <td>0.175315</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.011334</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.169293</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Complain</th>\n",
       "      <td>0.033883</td>\n",
       "      <td>-0.030128</td>\n",
       "      <td>-0.027225</td>\n",
       "      <td>0.040207</td>\n",
       "      <td>0.003138</td>\n",
       "      <td>0.013231</td>\n",
       "      <td>-0.039007</td>\n",
       "      <td>-0.005166</td>\n",
       "      <td>-0.023483</td>\n",
       "      <td>-0.020953</td>\n",
       "      <td>...</td>\n",
       "      <td>0.019769</td>\n",
       "      <td>0.008415</td>\n",
       "      <td>-0.027611</td>\n",
       "      <td>-0.009419</td>\n",
       "      <td>-0.025499</td>\n",
       "      <td>-0.011334</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.001707</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Z_CostContact</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Z_Revenue</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Response</th>\n",
       "      <td>-0.021968</td>\n",
       "      <td>0.021325</td>\n",
       "      <td>0.133047</td>\n",
       "      <td>-0.080008</td>\n",
       "      <td>-0.154446</td>\n",
       "      <td>-0.198437</td>\n",
       "      <td>0.247254</td>\n",
       "      <td>0.125289</td>\n",
       "      <td>0.236335</td>\n",
       "      <td>0.111331</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.003987</td>\n",
       "      <td>0.254258</td>\n",
       "      <td>0.177019</td>\n",
       "      <td>0.326634</td>\n",
       "      <td>0.293982</td>\n",
       "      <td>0.169293</td>\n",
       "      <td>-0.001707</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>26 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                           ID  Year_Birth    Income   Kidhome  Teenhome  \\\n",
       "ID                   1.000000    0.000028  0.013095  0.002406 -0.002580   \n",
       "Year_Birth           0.000028    1.000000 -0.161791  0.230176 -0.352111   \n",
       "Income               0.013095   -0.161791  1.000000 -0.428669  0.019133   \n",
       "Kidhome              0.002406    0.230176 -0.428669  1.000000 -0.036133   \n",
       "Teenhome            -0.002580   -0.352111  0.019133 -0.036133  1.000000   \n",
       "Recency             -0.046524   -0.019871 -0.003970  0.008827  0.016198   \n",
       "MntWines            -0.022878   -0.157773  0.578650 -0.496297  0.004846   \n",
       "MntFruits            0.004600   -0.017917  0.430842 -0.372581 -0.176764   \n",
       "MntMeatProducts     -0.004437   -0.030872  0.584633 -0.437129 -0.261160   \n",
       "MntFishProducts     -0.024475   -0.041625  0.438871 -0.387644 -0.204187   \n",
       "MntSweetProducts    -0.007642   -0.018133  0.440744 -0.370673 -0.162475   \n",
       "MntGoldProds        -0.013438   -0.061818  0.325916 -0.349595 -0.021725   \n",
       "NumDealsPurchases   -0.037166   -0.060846 -0.083101  0.221798  0.387741   \n",
       "NumWebPurchases     -0.018924   -0.145040  0.387878 -0.361647  0.155500   \n",
       "NumCatalogPurchases -0.003440   -0.121275  0.589162 -0.502237 -0.110769   \n",
       "NumStorePurchases   -0.014927   -0.128272  0.529362 -0.499683  0.050695   \n",
       "NumWebVisitsMonth   -0.007446    0.121139 -0.553088  0.447846  0.134884   \n",
       "AcceptedCmp3        -0.036040    0.061774 -0.016174  0.014674 -0.042677   \n",
       "AcceptedCmp4        -0.025387   -0.060510  0.184400 -0.161600  0.038886   \n",
       "AcceptedCmp5        -0.007517    0.007123  0.335943 -0.205634 -0.191050   \n",
       "AcceptedCmp1        -0.021614   -0.005930  0.276820 -0.172339 -0.140090   \n",
       "AcceptedCmp2        -0.015061   -0.006539  0.087545 -0.081716 -0.015605   \n",
       "Complain             0.033883   -0.030128 -0.027225  0.040207  0.003138   \n",
       "Z_CostContact             NaN         NaN       NaN       NaN       NaN   \n",
       "Z_Revenue                 NaN         NaN       NaN       NaN       NaN   \n",
       "Response            -0.021968    0.021325  0.133047 -0.080008 -0.154446   \n",
       "\n",
       "                      Recency  MntWines  MntFruits  MntMeatProducts  \\\n",
       "ID                  -0.046524 -0.022878   0.004600        -0.004437   \n",
       "Year_Birth          -0.019871 -0.157773  -0.017917        -0.030872   \n",
       "Income              -0.003970  0.578650   0.430842         0.584633   \n",
       "Kidhome              0.008827 -0.496297  -0.372581        -0.437129   \n",
       "Teenhome             0.016198  0.004846  -0.176764        -0.261160   \n",
       "Recency              1.000000  0.016064  -0.004306         0.023056   \n",
       "MntWines             0.016064  1.000000   0.389637         0.562667   \n",
       "MntFruits           -0.004306  0.389637   1.000000         0.543105   \n",
       "MntMeatProducts      0.023056  0.562667   0.543105         1.000000   \n",
       "MntFishProducts      0.001079  0.399753   0.594804         0.568402   \n",
       "MntSweetProducts     0.022670  0.386581   0.567164         0.523846   \n",
       "MntGoldProds         0.016693  0.387516   0.392995         0.350609   \n",
       "NumDealsPurchases   -0.001098  0.010940  -0.132114        -0.122415   \n",
       "NumWebPurchases     -0.010726  0.542265   0.296735         0.293761   \n",
       "NumCatalogPurchases  0.025110  0.635226   0.487917         0.723827   \n",
       "NumStorePurchases    0.000799  0.642100   0.461758         0.479659   \n",
       "NumWebVisitsMonth   -0.021445 -0.320653  -0.418383        -0.539470   \n",
       "AcceptedCmp3        -0.032991  0.062202   0.014727         0.018272   \n",
       "AcceptedCmp4         0.018826  0.373286   0.010152         0.102912   \n",
       "AcceptedCmp5         0.000129  0.472613   0.215833         0.373769   \n",
       "AcceptedCmp1        -0.019283  0.354133   0.194748         0.309761   \n",
       "AcceptedCmp2        -0.001781  0.205907  -0.009773         0.043033   \n",
       "Complain             0.013231 -0.039007  -0.005166        -0.023483   \n",
       "Z_CostContact             NaN       NaN        NaN              NaN   \n",
       "Z_Revenue                 NaN       NaN        NaN              NaN   \n",
       "Response            -0.198437  0.247254   0.125289         0.236335   \n",
       "\n",
       "                     MntFishProducts  ...  NumWebVisitsMonth  AcceptedCmp3  \\\n",
       "ID                         -0.024475  ...          -0.007446     -0.036040   \n",
       "Year_Birth                 -0.041625  ...           0.121139      0.061774   \n",
       "Income                      0.438871  ...          -0.553088     -0.016174   \n",
       "Kidhome                    -0.387644  ...           0.447846      0.014674   \n",
       "Teenhome                   -0.204187  ...           0.134884     -0.042677   \n",
       "Recency                     0.001079  ...          -0.021445     -0.032991   \n",
       "MntWines                    0.399753  ...          -0.320653      0.062202   \n",
       "MntFruits                   0.594804  ...          -0.418383      0.014727   \n",
       "MntMeatProducts             0.568402  ...          -0.539470      0.018272   \n",
       "MntFishProducts             1.000000  ...          -0.446003      0.000357   \n",
       "MntSweetProducts            0.579870  ...          -0.423294      0.001530   \n",
       "MntGoldProds                0.422875  ...          -0.250719      0.123091   \n",
       "NumDealsPurchases          -0.139361  ...           0.347633     -0.023109   \n",
       "NumWebPurchases             0.293681  ...          -0.055846      0.042176   \n",
       "NumCatalogPurchases         0.534478  ...          -0.520364      0.104730   \n",
       "NumStorePurchases           0.459855  ...          -0.428473     -0.067577   \n",
       "NumWebVisitsMonth          -0.446003  ...           1.000000      0.061211   \n",
       "AcceptedCmp3                0.000357  ...           0.061211      1.000000   \n",
       "AcceptedCmp4                0.016843  ...          -0.032126     -0.079512   \n",
       "AcceptedCmp5                0.199578  ...          -0.278113      0.080316   \n",
       "AcceptedCmp1                0.260762  ...          -0.192502      0.094751   \n",
       "AcceptedCmp2                0.002577  ...          -0.007196      0.072020   \n",
       "Complain                   -0.020953  ...           0.019769      0.008415   \n",
       "Z_CostContact                    NaN  ...                NaN           NaN   \n",
       "Z_Revenue                        NaN  ...                NaN           NaN   \n",
       "Response                    0.111331  ...          -0.003987      0.254258   \n",
       "\n",
       "                     AcceptedCmp4  AcceptedCmp5  AcceptedCmp1  AcceptedCmp2  \\\n",
       "ID                      -0.025387     -0.007517     -0.021614     -0.015061   \n",
       "Year_Birth              -0.060510      0.007123     -0.005930     -0.006539   \n",
       "Income                   0.184400      0.335943      0.276820      0.087545   \n",
       "Kidhome                 -0.161600     -0.205634     -0.172339     -0.081716   \n",
       "Teenhome                 0.038886     -0.191050     -0.140090     -0.015605   \n",
       "Recency                  0.018826      0.000129     -0.019283     -0.001781   \n",
       "MntWines                 0.373286      0.472613      0.354133      0.205907   \n",
       "MntFruits                0.010152      0.215833      0.194748     -0.009773   \n",
       "MntMeatProducts          0.102912      0.373769      0.309761      0.043033   \n",
       "MntFishProducts          0.016843      0.199578      0.260762      0.002577   \n",
       "MntSweetProducts         0.028641      0.259590      0.241818      0.009985   \n",
       "MntGoldProds             0.022268      0.181021      0.166396      0.049990   \n",
       "NumDealsPurchases        0.015594     -0.183248     -0.123244     -0.037695   \n",
       "NumWebPurchases          0.155903      0.138684      0.155143      0.034188   \n",
       "NumCatalogPurchases      0.139247      0.322321      0.308097      0.099852   \n",
       "NumStorePurchases        0.179379      0.214790      0.183249      0.085189   \n",
       "NumWebVisitsMonth       -0.032126     -0.278113     -0.192502     -0.007196   \n",
       "AcceptedCmp3            -0.079512      0.080316      0.094751      0.072020   \n",
       "AcceptedCmp4             1.000000      0.306526      0.251300      0.292210   \n",
       "AcceptedCmp5             0.306526      1.000000      0.403078      0.221533   \n",
       "AcceptedCmp1             0.251300      0.403078      1.000000      0.175315   \n",
       "AcceptedCmp2             0.292210      0.221533      0.175315      1.000000   \n",
       "Complain                -0.027611     -0.009419     -0.025499     -0.011334   \n",
       "Z_CostContact                 NaN           NaN           NaN           NaN   \n",
       "Z_Revenue                     NaN           NaN           NaN           NaN   \n",
       "Response                 0.177019      0.326634      0.293982      0.169293   \n",
       "\n",
       "                     Complain  Z_CostContact  Z_Revenue  Response  \n",
       "ID                   0.033883            NaN        NaN -0.021968  \n",
       "Year_Birth          -0.030128            NaN        NaN  0.021325  \n",
       "Income              -0.027225            NaN        NaN  0.133047  \n",
       "Kidhome              0.040207            NaN        NaN -0.080008  \n",
       "Teenhome             0.003138            NaN        NaN -0.154446  \n",
       "Recency              0.013231            NaN        NaN -0.198437  \n",
       "MntWines            -0.039007            NaN        NaN  0.247254  \n",
       "MntFruits           -0.005166            NaN        NaN  0.125289  \n",
       "MntMeatProducts     -0.023483            NaN        NaN  0.236335  \n",
       "MntFishProducts     -0.020953            NaN        NaN  0.111331  \n",
       "MntSweetProducts    -0.022485            NaN        NaN  0.117372  \n",
       "MntGoldProds        -0.030861            NaN        NaN  0.139850  \n",
       "NumDealsPurchases    0.000420            NaN        NaN  0.002238  \n",
       "NumWebPurchases     -0.016310            NaN        NaN  0.148730  \n",
       "NumCatalogPurchases -0.020453            NaN        NaN  0.220810  \n",
       "NumStorePurchases   -0.016524            NaN        NaN  0.039363  \n",
       "NumWebVisitsMonth    0.019769            NaN        NaN -0.003987  \n",
       "AcceptedCmp3         0.008415            NaN        NaN  0.254258  \n",
       "AcceptedCmp4        -0.027611            NaN        NaN  0.177019  \n",
       "AcceptedCmp5        -0.009419            NaN        NaN  0.326634  \n",
       "AcceptedCmp1        -0.025499            NaN        NaN  0.293982  \n",
       "AcceptedCmp2        -0.011334            NaN        NaN  0.169293  \n",
       "Complain             1.000000            NaN        NaN -0.001707  \n",
       "Z_CostContact             NaN            NaN        NaN       NaN  \n",
       "Z_Revenue                 NaN            NaN        NaN       NaN  \n",
       "Response            -0.001707            NaN        NaN  1.000000  \n",
       "\n",
       "[26 rows x 26 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.corr()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "531d9c70",
   "metadata": {},
   "source": [
    "## Data cleanning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "20f7ffe5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2240 entries, 0 to 2239\n",
      "Data columns (total 29 columns):\n",
      " #   Column               Non-Null Count  Dtype  \n",
      "---  ------               --------------  -----  \n",
      " 0   ID                   2240 non-null   int64  \n",
      " 1   Year_Birth           2240 non-null   int64  \n",
      " 2   Education            2240 non-null   object \n",
      " 3   Marital_Status       2240 non-null   object \n",
      " 4   Income               2216 non-null   float64\n",
      " 5   Kidhome              2240 non-null   int64  \n",
      " 6   Teenhome             2240 non-null   int64  \n",
      " 7   Dt_Customer          2240 non-null   object \n",
      " 8   Recency              2240 non-null   int64  \n",
      " 9   MntWines             2240 non-null   int64  \n",
      " 10  MntFruits            2240 non-null   int64  \n",
      " 11  MntMeatProducts      2240 non-null   int64  \n",
      " 12  MntFishProducts      2240 non-null   int64  \n",
      " 13  MntSweetProducts     2240 non-null   int64  \n",
      " 14  MntGoldProds         2240 non-null   int64  \n",
      " 15  NumDealsPurchases    2240 non-null   int64  \n",
      " 16  NumWebPurchases      2240 non-null   int64  \n",
      " 17  NumCatalogPurchases  2240 non-null   int64  \n",
      " 18  NumStorePurchases    2240 non-null   int64  \n",
      " 19  NumWebVisitsMonth    2240 non-null   int64  \n",
      " 20  AcceptedCmp3         2240 non-null   int64  \n",
      " 21  AcceptedCmp4         2240 non-null   int64  \n",
      " 22  AcceptedCmp5         2240 non-null   int64  \n",
      " 23  AcceptedCmp1         2240 non-null   int64  \n",
      " 24  AcceptedCmp2         2240 non-null   int64  \n",
      " 25  Complain             2240 non-null   int64  \n",
      " 26  Z_CostContact        2240 non-null   int64  \n",
      " 27  Z_Revenue            2240 non-null   int64  \n",
      " 28  Response             2240 non-null   int64  \n",
      "dtypes: float64(1), int64(25), object(3)\n",
      "memory usage: 507.6+ KB\n"
     ]
    }
   ],
   "source": [
    "# The Income column has 24 missing values.\n",
    "# The Dt_Customer column (date of customer's enrollment with the company) was parsed as Object.\n",
    "# We need to encode Education and Marital_Status column in the data frame since it has categorical features.\n",
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "77b9ec45",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ID\n",
      "[    0     1     9 ... 11187 11188 11191]\n",
      "[1 1 1 ... 1 1 1]\n",
      "Year_Birth\n",
      "[1893 1899 1900 1940 1941 1943 1944 1945 1946 1947 1948 1949 1950 1951\n",
      " 1952 1953 1954 1955 1956 1957 1958 1959 1960 1961 1962 1963 1964 1965\n",
      " 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 1979\n",
      " 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993\n",
      " 1994 1995 1996]\n",
      "[ 1  1  1  1  1  7  7  8 16 16 21 30 29 43 52 35 50 49 55 43 53 51 49 36\n",
      " 44 45 42 74 50 44 51 71 77 87 79 74 69 83 89 52 77 53 39 39 45 42 38 32\n",
      " 42 27 29 30 18 15 13  5  3  5  2]\n",
      "Education\n",
      "['2n Cycle' 'Basic' 'Graduation' 'Master' 'PhD']\n",
      "[ 203   54 1127  370  486]\n",
      "Marital_Status\n",
      "['Absurd' 'Alone' 'Divorced' 'Married' 'Single' 'Together' 'Widow' 'YOLO']\n",
      "[  2   3 232 864 480 580  77   2]\n",
      "Income\n",
      "[1730. 2447. 3502. ...   nan   nan   nan]\n",
      "[1 1 1 ... 1 1 1]\n",
      "Kidhome\n",
      "[0 1 2]\n",
      "[1293  899   48]\n",
      "Teenhome\n",
      "[0 1 2]\n",
      "[1158 1030   52]\n",
      "Dt_Customer\n",
      "['01-01-2013' '01-01-2014' '01-02-2013' '01-02-2014' '01-03-2013'\n",
      " '01-03-2014' '01-04-2013' '01-04-2014' '01-05-2013' '01-05-2014'\n",
      " '01-06-2013' '01-07-2013' '01-08-2012' '01-08-2013' '01-09-2012'\n",
      " '01-09-2013' '01-10-2012' '01-10-2013' '01-11-2012' '01-11-2013'\n",
      " '01-12-2012' '01-12-2013' '02-01-2013' '02-01-2014' '02-02-2013'\n",
      " '02-02-2014' '02-03-2013' '02-03-2014' '02-04-2013' '02-04-2014'\n",
      " '02-05-2013' '02-05-2014' '02-06-2013' '02-06-2014' '02-07-2013'\n",
      " '02-08-2012' '02-08-2013' '02-09-2012' '02-09-2013' '02-10-2012'\n",
      " '02-10-2013' '02-11-2012' '02-11-2013' '02-12-2012' '02-12-2013'\n",
      " '03-01-2013' '03-01-2014' '03-02-2013' '03-02-2014' '03-03-2013'\n",
      " '03-03-2014' '03-04-2013' '03-04-2014' '03-05-2013' '03-05-2014'\n",
      " '03-06-2013' '03-06-2014' '03-07-2013' '03-08-2012' '03-08-2013'\n",
      " '03-09-2012' '03-10-2013' '03-11-2012' '03-11-2013' '03-12-2012'\n",
      " '03-12-2013' '04-01-2013' '04-01-2014' '04-02-2013' '04-02-2014'\n",
      " '04-03-2013' '04-03-2014' '04-04-2014' '04-05-2013' '04-05-2014'\n",
      " '04-06-2013' '04-06-2014' '04-07-2013' '04-08-2012' '04-08-2013'\n",
      " '04-09-2012' '04-09-2013' '04-10-2012' '04-10-2013' '04-11-2012'\n",
      " '04-11-2013' '04-12-2012' '04-12-2013' '05-01-2013' '05-01-2014'\n",
      " '05-02-2014' '05-03-2013' '05-03-2014' '05-04-2013' '05-04-2014'\n",
      " '05-05-2013' '05-05-2014' '05-06-2014' '05-07-2013' '05-08-2012'\n",
      " '05-08-2013' '05-09-2012' '05-09-2013' '05-10-2012' '05-10-2013'\n",
      " '05-11-2012' '05-11-2013' '05-12-2012' '05-12-2013' '06-01-2013'\n",
      " '06-01-2014' '06-02-2013' '06-02-2014' '06-03-2013' '06-03-2014'\n",
      " '06-04-2013' '06-04-2014' '06-05-2013' '06-05-2014' '06-06-2013'\n",
      " '06-06-2014' '06-07-2013' '06-08-2012' '06-08-2013' '06-09-2012'\n",
      " '06-09-2013' '06-10-2012' '06-10-2013' '06-11-2012' '06-11-2013'\n",
      " '06-12-2012' '06-12-2013' '07-01-2013' '07-01-2014' '07-02-2013'\n",
      " '07-02-2014' '07-03-2013' '07-03-2014' '07-04-2013' '07-04-2014'\n",
      " '07-05-2013' '07-05-2014' '07-06-2014' '07-07-2013' '07-08-2012'\n",
      " '07-08-2013' '07-09-2012' '07-09-2013' '07-10-2012' '07-11-2012'\n",
      " '07-11-2013' '07-12-2012' '07-12-2013' '08-01-2013' '08-02-2013'\n",
      " '08-02-2014' '08-03-2013' '08-03-2014' '08-04-2013' '08-04-2014'\n",
      " '08-05-2013' '08-05-2014' '08-06-2013' '08-06-2014' '08-07-2013'\n",
      " '08-08-2012' '08-08-2013' '08-09-2012' '08-10-2013' '08-11-2012'\n",
      " '08-11-2013' '08-12-2012' '08-12-2013' '09-01-2013' '09-01-2014'\n",
      " '09-02-2013' '09-02-2014' '09-03-2013' '09-03-2014' '09-04-2013'\n",
      " '09-04-2014' '09-05-2013' '09-05-2014' '09-06-2013' '09-06-2014'\n",
      " '09-07-2013' '09-08-2012' '09-08-2013' '09-09-2012' '09-09-2013'\n",
      " '09-10-2012' '09-10-2013' '09-11-2012' '09-11-2013' '09-12-2012'\n",
      " '09-12-2013' '10-01-2013' '10-01-2014' '10-02-2013' '10-02-2014'\n",
      " '10-03-2013' '10-03-2014' '10-04-2013' '10-04-2014' '10-05-2013'\n",
      " '10-05-2014' '10-06-2013' '10-06-2014' '10-08-2012' '10-08-2013'\n",
      " '10-09-2012' '10-09-2013' '10-10-2012' '10-10-2013' '10-11-2012'\n",
      " '10-11-2013' '10-12-2012' '10-12-2013' '11-01-2013' '11-01-2014'\n",
      " '11-02-2013' '11-02-2014' '11-03-2013' '11-03-2014' '11-04-2013'\n",
      " '11-04-2014' '11-05-2013' '11-05-2014' '11-06-2013' '11-06-2014'\n",
      " '11-07-2013' '11-08-2012' '11-08-2013' '11-09-2012' '11-09-2013'\n",
      " '11-10-2012' '11-10-2013' '11-11-2012' '11-12-2012' '11-12-2013'\n",
      " '12-01-2013' '12-01-2014' '12-02-2013' '12-02-2014' '12-03-2013'\n",
      " '12-03-2014' '12-04-2013' '12-04-2014' '12-05-2013' '12-05-2014'\n",
      " '12-06-2013' '12-06-2014' '12-07-2013' '12-08-2012' '12-08-2013'\n",
      " '12-09-2012' '12-09-2013' '12-10-2012' '12-10-2013' '12-11-2012'\n",
      " '12-11-2013' '12-12-2012' '12-12-2013' '13-01-2013' '13-01-2014'\n",
      " '13-02-2013' '13-02-2014' '13-03-2014' '13-04-2013' '13-04-2014'\n",
      " '13-05-2013' '13-05-2014' '13-06-2013' '13-06-2014' '13-07-2013'\n",
      " '13-08-2012' '13-08-2013' '13-09-2013' '13-10-2012' '13-10-2013'\n",
      " '13-11-2012' '13-11-2013' '13-12-2013' '14-01-2013' '14-01-2014'\n",
      " '14-02-2013' '14-02-2014' '14-03-2013' '14-04-2013' '14-04-2014'\n",
      " '14-05-2013' '14-06-2013' '14-06-2014' '14-07-2013' '14-08-2012'\n",
      " '14-08-2013' '14-09-2012' '14-09-2013' '14-10-2012' '14-10-2013'\n",
      " '14-11-2012' '14-11-2013' '14-12-2012' '14-12-2013' '15-01-2013'\n",
      " '15-01-2014' '15-02-2013' '15-02-2014' '15-03-2013' '15-04-2013'\n",
      " '15-04-2014' '15-05-2013' '15-05-2014' '15-06-2014' '15-07-2013'\n",
      " '15-08-2012' '15-08-2013' '15-09-2012' '15-09-2013' '15-10-2012'\n",
      " '15-10-2013' '15-11-2013' '15-12-2012' '15-12-2013' '16-01-2013'\n",
      " '16-02-2013' '16-02-2014' '16-03-2013' '16-03-2014' '16-04-2013'\n",
      " '16-04-2014' '16-05-2013' '16-05-2014' '16-06-2013' '16-06-2014'\n",
      " '16-07-2013' '16-08-2012' '16-08-2013' '16-09-2013' '16-10-2012'\n",
      " '16-10-2013' '16-11-2012' '16-12-2012' '16-12-2013' '17-01-2013'\n",
      " '17-01-2014' '17-02-2013' '17-02-2014' '17-03-2013' '17-03-2014'\n",
      " '17-04-2013' '17-04-2014' '17-05-2013' '17-05-2014' '17-06-2013'\n",
      " '17-06-2014' '17-07-2013' '17-08-2012' '17-08-2013' '17-09-2012'\n",
      " '17-09-2013' '17-10-2012' '17-10-2013' '17-11-2012' '17-11-2013'\n",
      " '17-12-2012' '17-12-2013' '18-01-2014' '18-02-2013' '18-02-2014'\n",
      " '18-03-2013' '18-03-2014' '18-04-2013' '18-04-2014' '18-05-2013'\n",
      " '18-05-2014' '18-06-2013' '18-06-2014' '18-07-2013' '18-08-2012'\n",
      " '18-08-2013' '18-09-2012' '18-09-2013' '18-10-2012' '18-10-2013'\n",
      " '18-11-2012' '18-11-2013' '18-12-2012' '18-12-2013' '19-01-2013'\n",
      " '19-01-2014' '19-02-2013' '19-02-2014' '19-03-2013' '19-03-2014'\n",
      " '19-04-2013' '19-04-2014' '19-05-2013' '19-05-2014' '19-06-2013'\n",
      " '19-06-2014' '19-07-2013' '19-08-2012' '19-08-2013' '19-09-2012'\n",
      " '19-09-2013' '19-10-2012' '19-10-2013' '19-11-2012' '19-11-2013'\n",
      " '19-12-2012' '19-12-2013' '20-01-2013' '20-02-2013' '20-03-2013'\n",
      " '20-03-2014' '20-04-2013' '20-04-2014' '20-05-2013' '20-06-2013'\n",
      " '20-06-2014' '20-07-2013' '20-08-2012' '20-08-2013' '20-09-2012'\n",
      " '20-09-2013' '20-10-2012' '20-10-2013' '20-11-2012' '20-11-2013'\n",
      " '20-12-2012' '20-12-2013' '21-01-2013' '21-01-2014' '21-02-2013'\n",
      " '21-03-2013' '21-03-2014' '21-04-2013' '21-04-2014' '21-05-2013'\n",
      " '21-06-2013' '21-06-2014' '21-07-2013' '21-08-2012' '21-08-2013'\n",
      " '21-09-2012' '21-09-2013' '21-10-2012' '21-10-2013' '21-11-2012'\n",
      " '21-11-2013' '21-12-2012' '21-12-2013' '22-01-2013' '22-01-2014'\n",
      " '22-02-2013' '22-02-2014' '22-03-2013' '22-03-2014' '22-04-2013'\n",
      " '22-04-2014' '22-05-2013' '22-05-2014' '22-06-2013' '22-06-2014'\n",
      " '22-07-2013' '22-08-2012' '22-08-2013' '22-09-2012' '22-09-2013'\n",
      " '22-10-2012' '22-10-2013' '22-11-2012' '22-11-2013' '22-12-2012'\n",
      " '22-12-2013' '23-01-2013' '23-01-2014' '23-02-2013' '23-02-2014'\n",
      " '23-03-2013' '23-03-2014' '23-04-2013' '23-04-2014' '23-05-2013'\n",
      " '23-05-2014' '23-06-2013' '23-06-2014' '23-07-2013' '23-08-2012'\n",
      " '23-08-2013' '23-09-2012' '23-09-2013' '23-10-2012' '23-10-2013'\n",
      " '23-11-2012' '23-11-2013' '23-12-2012' '23-12-2013' '24-01-2013'\n",
      " '24-01-2014' '24-02-2014' '24-03-2013' '24-03-2014' '24-04-2013'\n",
      " '24-04-2014' '24-05-2013' '24-05-2014' '24-06-2013' '24-06-2014'\n",
      " '24-07-2013' '24-08-2012' '24-08-2013' '24-09-2012' '24-09-2013'\n",
      " '24-10-2012' '24-10-2013' '24-11-2012' '24-12-2012' '24-12-2013'\n",
      " '25-01-2013' '25-01-2014' '25-02-2013' '25-02-2014' '25-03-2013'\n",
      " '25-03-2014' '25-04-2013' '25-04-2014' '25-05-2013' '25-05-2014'\n",
      " '25-06-2013' '25-06-2014' '25-07-2013' '25-08-2012' '25-08-2013'\n",
      " '25-09-2012' '25-09-2013' '25-10-2012' '25-10-2013' '25-11-2012'\n",
      " '25-11-2013' '25-12-2012' '25-12-2013' '26-01-2013' '26-01-2014'\n",
      " '26-02-2013' '26-02-2014' '26-03-2013' '26-03-2014' '26-04-2014'\n",
      " '26-05-2013' '26-05-2014' '26-06-2013' '26-06-2014' '26-07-2013'\n",
      " '26-08-2012' '26-08-2013' '26-09-2012' '26-09-2013' '26-10-2012'\n",
      " '26-10-2013' '26-11-2012' '26-11-2013' '26-12-2012' '26-12-2013'\n",
      " '27-01-2013' '27-01-2014' '27-02-2013' '27-02-2014' '27-03-2013'\n",
      " '27-03-2014' '27-04-2013' '27-04-2014' '27-05-2013' '27-05-2014'\n",
      " '27-06-2013' '27-06-2014' '27-07-2013' '27-08-2012' '27-08-2013'\n",
      " '27-09-2012' '27-09-2013' '27-10-2012' '27-10-2013' '27-11-2012'\n",
      " '27-11-2013' '27-12-2012' '27-12-2013' '28-01-2014' '28-02-2013'\n",
      " '28-02-2014' '28-03-2013' '28-03-2014' '28-04-2013' '28-04-2014'\n",
      " '28-05-2013' '28-05-2014' '28-06-2013' '28-06-2014' '28-07-2013'\n",
      " '28-08-2012' '28-08-2013' '28-09-2012' '28-09-2013' '28-10-2012'\n",
      " '28-10-2013' '28-11-2012' '28-11-2013' '28-12-2012' '28-12-2013'\n",
      " '29-01-2013' '29-01-2014' '29-03-2013' '29-03-2014' '29-04-2013'\n",
      " '29-04-2014' '29-05-2013' '29-05-2014' '29-06-2013' '29-06-2014'\n",
      " '29-07-2013' '29-08-2012' '29-08-2013' '29-09-2012' '29-10-2012'\n",
      " '29-10-2013' '29-11-2012' '29-11-2013' '29-12-2012' '29-12-2013'\n",
      " '30-01-2014' '30-03-2013' '30-03-2014' '30-04-2013' '30-04-2014'\n",
      " '30-05-2013' '30-05-2014' '30-06-2013' '30-07-2012' '30-07-2013'\n",
      " '30-08-2012' '30-08-2013' '30-09-2012' '30-09-2013' '30-10-2012'\n",
      " '30-10-2013' '30-11-2012' '30-11-2013' '30-12-2012' '30-12-2013'\n",
      " '31-01-2013' '31-01-2014' '31-03-2013' '31-03-2014' '31-05-2013'\n",
      " '31-05-2014' '31-07-2012' '31-07-2013' '31-08-2012' '31-08-2013'\n",
      " '31-10-2012' '31-12-2012' '31-12-2013']\n",
      "[ 4  3  3  1  3  9  5  3  3  2  2  3  4  5  1  3  5  3  2  1  4  5  9  3\n",
      "  4  5  1  4  2  1  5  7  2  2  3  3  4  1  2  1  7  2  5  2  3  1  3  2\n",
      "  1  6  3  3  3  3  2  8  2  5  5  2  4  5  8  4  4  1  2  2  2  1  4  3\n",
      "  2  3  4  7  1  6  4  1  4  2  6  7  1  3  2  4  4  2  3  1  3  8  9  3\n",
      "  1  3  5  1  4  1  4  6  2  5  4  4  2  2  1  5  2  2  2  2  3  5  2  3\n",
      "  1  4  3  3  4  3  2  4  2  5  3  2  2  3  2  7  4  2  1  4  3  5  3  3\n",
      "  4  7  6  3  1  5  8  5  5  5  2  1  3  5  4  2  4  4  5  4  4  7  2  6\n",
      "  6  3  1  1  2  2  1  2  3  1  2  1  2  3  1  1  3  3  2  4  3  5  1  3\n",
      "  8  1  2  5  7  4  3  5  5  5  3  1  4  4  4  3  2  1  4  4  5  2  6  3\n",
      "  2  2  5  5  4  3  4  2  3  4  8  8  2  1  3  3  4  3  6  1  4  3  3  4\n",
      "  8  2  5  3  5  5  1  2  4 11  3  1  4  6  1 11  6  5  6  3  2  6  3  6\n",
      "  1  7  4  1  7  6  1  3  5  1  3  2  1  1  6  3  6  3  2  1  2 11  1  2\n",
      "  1  2  1  3  1  4  2  1  6  1  5  4  1  6  1  2  2  4  3  5  2  4  1  4\n",
      "  1  4  2  1  5  2  4  4  2  6  2  2  7  7  4  2  2  2  4  1  2  2  4  3\n",
      "  3  3  5  4  6  2  4  4  6  4  3  5  5  7  2  2  6  2  4  3  2  8  4  3\n",
      "  5  2  4  5  4  1  4  3  5  3  5  5  6  5  3  5  2  3  3  5  1  6  5  5\n",
      "  3  1  1  2  1  4  3  5  2  5  3  1  2  2  5  4  4  5  2  3  1  3  1  2\n",
      "  3  3  4  2  5  7  3  4  3  4  6  5  2  1  3 10  2  3  2  4  2  3  1  3\n",
      "  3  5  2  2  3  5  4  2  4  2  5  2  4  4  1  1  6  2  2  1  2  2  5  4\n",
      "  1  3  1  6  1  7 10  3  5  2  8  3  6  4  3  3  3  3  5  1  5  5  2  2\n",
      "  3  9  3  5  3  8  4  2  3  1  4  3  2  2  2  8  7  2  4  1  3  5  3  4\n",
      "  2  6  1  5  3  2  2  2  1  2  2  1  4  3  5  3  4  5  3  5  1  3  2  2\n",
      "  1  3  2  5  3  3  3  4  3  2  7  2  3  3  4  3  7  2  2  4  2  1  4  3\n",
      "  1  4  2  3  3  3  3  3  1  2  3  1  4  2  4  3  2  4  1  5  1  1  1  4\n",
      "  3  3  3  1  2  3  2  3  1  2  1  4  4  2  2  5  1  2  4  4  4  3  3  1\n",
      "  2  5  4  6  4  8  3  2  4  1  3  1  5  6  3  4  4  6  3  2  5  8  3  2\n",
      "  9  3  4  4  2  5  4  4  7  1  4  2  1  3  1  5  4  3  1  5  1  3  1  1\n",
      "  5  3  2  1  5  5  3  2  1  2 12  8  5  1  3]\n",
      "Recency\n",
      "[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\n",
      " 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47\n",
      " 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71\n",
      " 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95\n",
      " 96 97 98 99]\n",
      "[28 24 28 29 27 15 21 12 25 24 26 26 24 27 19 16 21 20 19 25 21 21 13 28\n",
      " 28 25 21 27 23 29 32 18 21 17 23 17 18 24 25 19 25 15 20 20 11 17 31 19\n",
      " 28 30 22 28 22 20 32 20 37 24 15 14 22 21 19 23 23 30 16 18 25 16 18 29\n",
      " 27 20 26 17 19 25 26 17 28 27 22 22 23 18 26 27 16 20 20 18 30 21 26 19\n",
      " 25 20 22 17]\n",
      "MntWines\n",
      "[   0    1    2    3    4    5    6    7    8    9   10   11   12   13\n",
      "   14   15   16   17   18   19   20   21   22   23   24   25   26   27\n",
      "   28   29   30   31   32   33   34   35   36   37   38   39   40   41\n",
      "   42   43   44   45   46   47   48   50   51   52   53   54   55   56\n",
      "   57   58   59   60   61   62   63   64   65   66   67   68   69   70\n",
      "   71   72   73   74   75   76   77   78   79   80   81   82   83   84\n",
      "   85   86   87   88   89   90   91   92   93   94   95   96   97   98\n",
      "   99  100  101  102  104  105  106  107  108  109  110  111  112  113\n",
      "  115  116  117  120  121  122  123  124  125  127  128  129  130  131\n",
      "  132  133  134  135  136  138  139  140  141  143  144  145  146  151\n",
      "  152  153  154  155  156  157  158  159  160  161  162  163  164  165\n",
      "  166  167  168  169  170  171  172  173  174  175  176  177  178  179\n",
      "  180  181  182  183  184  185  186  187  188  189  191  192  194  196\n",
      "  197  198  199  200  201  202  203  204  205  206  207  208  209  210\n",
      "  211  212  213  215  216  217  218  219  220  221  223  224  225  226\n",
      "  227  228  229  230  231  233  234  235  236  238  239  240  241  243\n",
      "  244  245  247  248  249  251  252  254  255  256  258  260  261  262\n",
      "  263  264  265  266  267  268  269  270  272  273  274  275  277  279\n",
      "  280  281  283  284  285  288  290  291  292  293  294  295  296  297\n",
      "  298  299  301  302  303  304  305  306  307  308  309  311  312  313\n",
      "  314  315  316  317  318  320  321  322  324  325  327  328  329  330\n",
      "  331  332  333  335  336  338  340  341  342  344  345  346  347  349\n",
      "  350  351  352  353  354  355  356  357  358  359  362  364  365  366\n",
      "  367  368  369  370  371  372  373  374  375  376  377  378  379  380\n",
      "  381  382  383  384  386  387  388  389  390  391  392  393  395  397\n",
      "  398  399  400  402  403  404  406  407  408  410  411  412  415  416\n",
      "  418  420  421  422  423  424  425  426  428  430  431  432  433  434\n",
      "  437  438  440  441  443  444  445  446  447  448  450  451  452  453\n",
      "  454  456  457  458  459  460  462  463  464  465  466  471  473  476\n",
      "  478  479  480  482  483  488  489  490  491  492  493  494  495  496\n",
      "  499  502  503  504  505  507  508  509  510  512  513  514  515  516\n",
      "  517  518  519  520  521  522  523  524  525  526  527  529  530  531\n",
      "  532  533  534  536  537  538  539  543  544  545  546  547  548  551\n",
      "  553  554  555  556  557  558  559  560  561  562  563  565  570  571\n",
      "  572  574  575  576  577  580  581  582  583  584  586  587  588  593\n",
      "  594  595  597  598  600  603  604  605  606  610  611  612  613  614\n",
      "  615  618  619  620  621  622  623  625  626  627  629  630  631  635\n",
      "  637  639  641  642  647  650  652  653  654  656  658  664  666  667\n",
      "  670  671  673  674  675  676  680  684  686  688  689  690  691  693\n",
      "  702  703  704  707  708  709  710  711  712  713  714  717  721  722\n",
      "  724  726  728  729  731  733  734  735  736  737  738  739  741  742\n",
      "  743  746  747  749  750  751  752  753  754  755  756  757  758  760\n",
      "  763  768  769  770  771  774  777  778  779  783  784  787  789  790\n",
      "  792  794  795  796  797  799  800  801  806  811  812  815  816  817\n",
      "  819  820  822  823  824  825  826  829  830  833  835  836  840  846\n",
      "  847  848  852  853  856  860  861  863  864  866  867  871  879  881\n",
      "  882  888  889  890  895  896  897  899  901  908  909  910  912  913\n",
      "  918  919  920  925  928  931  934  938  940  941  944  948  952  953\n",
      "  957  958  960  962  964  965  966  967  968  972  977  979  980  982\n",
      "  983  984  986  992  995  997 1000 1001 1003 1004 1006 1009 1012 1013\n",
      " 1016 1017 1020 1023 1032 1035 1039 1043 1045 1047 1048 1050 1060 1063\n",
      " 1067 1073 1074 1076 1083 1090 1092 1099 1103 1111 1115 1121 1126 1132\n",
      " 1142 1148 1149 1156 1166 1168 1170 1171 1181 1184 1193 1200 1205 1206\n",
      " 1215 1218 1224 1230 1239 1241 1245 1248 1252 1253 1259 1276 1279 1285\n",
      " 1288 1296 1298 1302 1308 1311 1315 1324 1332 1349 1379 1394 1396 1449\n",
      " 1459 1462 1478 1486 1492 1493]\n",
      "[13 37 42 30 33 40 37 22 30 28 24 23 25 14 24 22 17  9 18 21 11  6 16 18\n",
      " 12 14 10 11 10 14 16  9  8  6 10 10  4  8  8  8  8  4  6  6  4  7  8  2\n",
      "  6  4  7  3  6  3  3 10  4  1  2  1  1  6  6  3  4  2  6  9  3  6  5  2\n",
      "  6  1  2  4  3  2  3  5  5  1  1  4  5  4  3  4  1  3  3  1  1  1  2  3\n",
      "  5  3  5  5  1  4  3  2  1  1  2  1  4  3  8  1  1  3  1  2  3  1  4  2\n",
      "  3  2  1  4  2  1  1  1  2  6  1  5  1  2  4  2  3  3  1  2  3  2  5  2\n",
      "  1  2  6  4  2  3  8  5  1  1  2  7  1  1  1  4  6  6  2  1  2  1  2  4\n",
      "  2  1  5  3  4  3  1  2  1  4  2  1  4  2  1  2  5  3  3  4  3  4  2  2\n",
      "  2  2  3  1  1  3  3  3  3  3  1  2  1  1  1  4  1  1  3  2  4  4  4  3\n",
      "  1  3  1  2  4  4  2  3  4  3  3  1  1  1  2  3  3  1  2  1  2  1  1  2\n",
      "  3  2  6  1  3  3  1  2  2  3  2  3  2  1  3  4  1  1  1  1  7  5  1  3\n",
      "  1  3  2  1  2  1  2  1  1  1  1  2  1  1  1  3  1  4  1  2  2  2  1  4\n",
      "  2  1  2  2  1  1  1  2  1  1  3  1  3  1  3  3  2  1  3  3  5  1  2  1\n",
      "  1  1  3  1  2  2  2  1  2  1  2  3  1  1  4  2  1  1  3  4  1  6  2  2\n",
      "  2  2  1  4  2  4  1  2  2  1  1  2  2  3  6  3  2  1  1  1  2  4  2  6\n",
      "  3  4  1  2  1  2  2  1  2  1  2  1  1  1  1  1  1  3  2  2  1  1  2  1\n",
      "  4  1  1  4  2  1  2  1  3  3  2  3  3  1  2  1  4  2  2  2  1  1  1  3\n",
      "  1  3  6  2  1  2  1  3  4  2  1  2  1  2  1  2  4  2  3  3  1  2  2  1\n",
      "  2  2  1  1  3  5  1  2  1  1  1  4  2  2  2  2  4  1  1  2  1  1  3  1\n",
      "  2  1  3  2  1  1  1  2  1  4  2  1  1  1  3  3  2  3  1  3  3  1  1  2\n",
      "  1  1  1  1  1  2  1  6  1  1  2  4  1  1  2  1  3  2  3  1  1  1  1  2\n",
      "  1  2  1  5  1  1  1  3  1  2  2  1  3  6  1  1  2  2  1  2  2  1  1  5\n",
      "  1  2  1  1  1  1  1  3  3  1  1  2  1  1  1  1  3  2  1  1  1  3  1  4\n",
      "  1  2  4  1  3  1  2  1  2  1  1  1  1  1  2  1  3  1  3  1  2  1  1  1\n",
      "  1  1  2  1  1  1  1  1  1  3  2  4  1  1  2  1  1  1  3  2  1  1  1  1\n",
      "  4  1  2  2  1  1  1  1  1  1  1  1  1  2  2  2  1  1  1  2  1  1  1  2\n",
      "  1  2  1  1  1  1  1  1  1  1  3  1  2  1  2  1  1  1  1  1  1  1  1  1\n",
      "  1  1  4  3  4  2  2  1  1  1  4  2  1  1  1  1  1  2  1  1  1  1  1  2\n",
      "  3  1  3  2  1  2  2  1  1  2  2  1  1  2  2  1  1  1  1  3  4  3  1  3\n",
      "  2  1  1  1  1  2  1  1  1  1  1  1  1  1  1  3  2  1  1  2  2  2  1  1\n",
      "  1  2  2  2  1  1  1  1  2  1  1  2  1  1  2  1  3  2  1  2  1  1  1  3\n",
      "  1  1  1  1  1  1  1  1  1  1  1  3  1  1  1  1  1  1  1  1  1  1  1  1\n",
      "  1  1  1  1  2  1  2  1]\n",
      "MntFruits\n",
      "[  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17\n",
      "  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35\n",
      "  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  53  54\n",
      "  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n",
      "  73  74  75  76  77  79  80  81  82  83  84  85  86  87  88  89  90  91\n",
      "  92  93  96  97  98  99 100 101 102 103 104 105 106 107 108 111 112 114\n",
      " 115 117 120 122 123 124 126 127 129 130 131 132 133 134 137 138 140 142\n",
      " 143 144 147 148 149 151 152 153 154 155 159 160 161 162 163 164 166 168\n",
      " 169 172 174 178 181 183 184 185 189 190 193 194 197 199]\n",
      "[400 162 120 116 104  65  62  67  48  35  42  29  50  17  23  29  26  35\n",
      "  10  29  14  26  18  21  17  12  22  12  25   8  10   9  12  14   9  25\n",
      "   9   6  11   3   8   2  14  11  13   6   5  10  11   3  11  10  12   7\n",
      "   4   3   3   5   7   6  14   2   5   7   3   6   3   4   3   5   7   6\n",
      "   7   3   2   8   2   2  15   6   2   6   4   2   6   1   3   3   2   5\n",
      "   3   4   3   3   4   3   3   1   5   1   3   5   3   8   5   3   4   6\n",
      "   4   2   5   2   2   2   3   2   8   1   1   2   3   5   4   8   1   4\n",
      "   1   2   3   2   1   3   2   4   1   2   2   1   5   4   1   1   1   3\n",
      "   2   5   1   3   1   3   1   2   1   1   2   3   1   2]\n",
      "MntMeatProducts\n",
      "[   0    1    2    3    4    5    6    7    8    9   10   11   12   13\n",
      "   14   15   16   17   18   19   20   21   22   23   24   25   26   27\n",
      "   28   29   30   31   32   33   34   35   36   37   38   39   40   41\n",
      "   42   43   44   45   46   47   48   49   50   51   52   53   54   55\n",
      "   56   57   58   59   60   61   62   63   64   65   66   67   68   69\n",
      "   70   71   72   73   74   75   76   77   78   79   80   81   82   83\n",
      "   84   85   86   87   88   89   90   91   92   93   94   95   96   97\n",
      "   98   99  100  101  102  103  104  106  107  108  109  110  111  112\n",
      "  113  114  115  116  117  118  119  120  121  122  123  124  125  126\n",
      "  127  128  129  130  131  132  133  134  135  136  137  138  139  140\n",
      "  141  142  143  144  145  147  149  151  152  153  154  155  156  157\n",
      "  158  159  160  161  162  163  164  165  166  167  168  169  170  171\n",
      "  172  174  175  176  177  178  179  180  181  182  183  184  185  186\n",
      "  188  189  192  193  194  195  196  197  199  201  202  203  204  205\n",
      "  206  207  208  209  211  212  213  214  215  216  217  218  219  221\n",
      "  222  223  224  226  227  228  230  231  232  233  234  235  237  238\n",
      "  239  240  241  242  243  247  248  249  250  252  253  254  255  256\n",
      "  257  259  260  263  264  265  266  267  269  270  271  272  273  274\n",
      "  275  276  278  279  280  281  282  286  287  288  291  292  293  294\n",
      "  295  297  298  300  303  304  305  309  311  314  315  317  319  320\n",
      "  322  323  324  329  332  333  334  335  337  338  341  342  345  348\n",
      "  349  350  351  352  353  354  356  359  360  363  364  367  368  369\n",
      "  372  373  374  375  376  377  379  380  382  384  385  387  388  389\n",
      "  391  392  395  396  397  398  399  400  401  403  405  407  408  409\n",
      "  410  411  413  414  415  417  419  420  421  422  424  425  426  428\n",
      "  430  431  432  435  441  442  444  445  446  447  449  450  452  454\n",
      "  455  456  459  460  461  462  464  465  466  469  470  471  473  476\n",
      "  480  482  483  487  490  491  493  494  495  497  498  499  500  501\n",
      "  503  505  507  509  510  512  514  518  519  520  522  523  528  530\n",
      "  534  535  536  537  538  540  545  546  547  548  549  550  553  554\n",
      "  555  558  559  560  561  562  565  567  568  569  570  572  573  575\n",
      "  586  590  591  592  594  595  597  599  601  602  603  604  606  607\n",
      "  611  612  613  614  617  622  625  629  631  635  639  640  649  650\n",
      "  651  653  654  655  670  672  673  674  678  685  687  689  690  693\n",
      "  694  697  701  704  706  708  711  713  716  717  724  731  732  733\n",
      "  735  736  740  742  746  747  749  750  751  753  754  756  757  758\n",
      "  761  768  774  779  780  785  786  790  792  797  801  804  812  813\n",
      "  815  816  818  827  832  835  838  842  843  845  849  850  853  860\n",
      "  864  873  883  890  898  899  913  915  921  925  929  932  935  936\n",
      "  940  946  951  961  968  974  981  984 1582 1607 1622 1725]\n",
      "[ 1 14 30 40 30 50 43 53 46 38 40 49 35 30 27 30 36 22 25 26 16 27 17 17\n",
      " 23 15 16 16 13 14 16 11  7 10  6  9  3  8  9 10  6  4  5  8 12  9  9  7\n",
      "  8  6  8  5  8  7  8  2 12  9  3  9  7  7  4  3 10  6  7  5 12 12  5  8\n",
      "  3  7  6  4  9  3  5  4  5  3  6  8  4  3  5  5  5  4  5  4  9  4  2  1\n",
      "  4  5  4  5 10  6  6  4  4  9  7  7  4  3  2  5  4  4  7  1  2  6  5  2\n",
      "  1  2  3  8  9  1  5  5  4  2  3  4 11  8  2  3  8  1  1  4  5  8  3  3\n",
      "  1  2  2  3  3  3  4  2  3  2  1  3  3  6  2  1  1  3  1  2  6  2  3  7\n",
      "  3  1  1  1  4  4  4  4  2  1  3  3  1  2  1  4  1  1  2  2  3  1  3  1\n",
      "  1  1  6  1  5  3  1  1  1  1  2  3  6  4 10  3  1  1  1  4  2  2  1  1\n",
      "  4  1  3  1  1  2  1  3  6  2  2  3  2  1  1  6  3  2  5  3  2  1  2  6\n",
      "  1  1  1  6  1  3  1  3  2  2  1  1  1  2  3  3  1  1  3  1  3  2  2  5\n",
      "  1  1  1  1  1  4  2  1  3  5  3  1  1  1  2  1  4  3  2  1  1  1  1  2\n",
      "  2  1  1  1  4  3  1  4  1  3  2  1  4  2  1  2  2  2  2  1  1  1  2  1\n",
      "  2  2  2  1  1  3  2  2  1  3  2  1  2  4  1  3  2  5  1  2  1  1  2  1\n",
      "  1  1  3  4  3  3  1  4  1  2  2  1  1  3  5  2  2  1  1  1  1  3  2  6\n",
      "  3  1  1  1  2  1  3  1  1  1  2  1  1  1  1  1  1  1  3  2  1  1  1  1\n",
      "  1  1  1  1  1  2  4  1  1  2  1  1  1  1  2  1  1  3  1  1  1  1  2  1\n",
      "  2  3  2  1  1  2  1  1  2  1  4  1  1  1  1  1  1  1  2  1  2  1  1  1\n",
      "  4  1  1  2  1  2  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1\n",
      "  1  1  1  1  1  1  1  2  1  1  1  2  1  1  1  1  2  3  1  1  1  1  1  1\n",
      "  3  1  2  1  1  2  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1\n",
      "  1  3  1  1  2  1  1  2  1  2  2  1  1  1  3  1  3  1  2  2  2  2  1  2\n",
      "  1  1  1  1  1  1  1  1  1  1  1  2  1  3  1  1  1  1  1  1  2  1  1  1\n",
      "  1  1  1  1  1  2]\n",
      "MntFishProducts\n",
      "[  0   1   2   3   4   5   6   7   8  10  11  12  13  15  16  17  19  20\n",
      "  21  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39\n",
      "  40  41  42  43  44  45  46  47  48  49  50  51  52  54  55  56  58  59\n",
      "  60  61  62  63  64  65  67  68  69  71  72  73  75  76  77  78  80  81\n",
      "  82  84  85  86  89  90  91  93  94  95  97  98  99 101 102 103 104 106\n",
      " 108 110 111 112 114 115 116 119 120 121 123 124 125 127 128 129 130 132\n",
      " 133 134 136 137 138 140 141 142 145 146 147 149 150 151 153 156 158 159\n",
      " 160 162 164 166 167 168 169 171 172 173 175 177 179 180 181 182 184 185\n",
      " 186 188 189 192 193 194 197 198 199 201 202 205 207 208 210 212 216 218\n",
      " 219 220 223 224 225 227 229 231 232 234 237 240 242 246 247 250 253 254\n",
      " 258 259]\n",
      "[384  10 156 130 108   1  82  66  58  55  46  47  48  38  35  27  36  35\n",
      "  22  27  11  18   7   5  19  20  13   2  17  16  16   2   8  10  14  16\n",
      "   6   6  11  11   2   8  12   4   2   8  15   5  11   6  11   5  10   6\n",
      "   9   1   8  11   5  15   5   2  14   9   5   5  12   6   4   6  13   1\n",
      "   5   9   4   6   4   5   6   7   8   4   6   3  10   3   4   2  14   7\n",
      "   2   6   5   2   1   2   5   7   5   3   5   2   3   2   1   2   4   3\n",
      "   5   4   2   4   6   2   2   1   6   3   2   5  10   6   3   2   2   2\n",
      "   7   1   2   1   1   7   2   1   4   3   3   2   5   5   1   3   2   2\n",
      "   3   3   1   2   2   1   3   1   3   2   3   3   2   2   5   2   3   1\n",
      "   4   4   1   4   1   2   1   1   1   2   2   2   1   1   1   3   1   1\n",
      "   3   1]\n",
      "MntSweetProducts\n",
      "[  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17\n",
      "  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35\n",
      "  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  53  54\n",
      "  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n",
      "  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  91\n",
      "  92  93  94  95  96  97  98  99 100 101 102 103 105 106 107 108 109 110\n",
      " 111 112 113 114 115 116 118 120 121 122 123 124 125 126 127 128 129 130\n",
      " 132 133 134 136 137 138 139 141 142 143 144 145 146 147 148 149 150 151\n",
      " 152 153 156 157 160 161 162 163 165 166 167 169 172 173 174 175 176 178\n",
      " 179 182 185 187 188 189 191 192 194 195 196 197 198 262 263]\n",
      "[419 161 128 101  82  65  64  57  56  42  38  26  45  31  41  28  19  23\n",
      "  13  20  20  24  14  15  24  10  22   9  17  13  23   9  13   9   8  18\n",
      "   6   7  17   4  13   7  10   9  12  10   7   6   9   9   9   6   5  11\n",
      "   5   7   5   8   6   5  10   2   2   4   2   9   4   4   5   4   5   6\n",
      "   2   4   4   7   2   4   1   9   2   4   4   3   2   3   3   3   6   8\n",
      "   7   3   2   4   3   5   6   1   1   3   6   3   4   2   8   3   1   1\n",
      "   1   5   1   2   4   2   5   3   3   3   3   1   3   3   1   1   2   1\n",
      "   1   6   3   1   5   6   1   2   1   4   2   1   1   3   2   2   2   5\n",
      "   3   2   1   1   3   4   1   4   2   1   1   2   3   1   2   1   2   2\n",
      "   1   1   2   1   1   2   1   3   3   1   1   1   1   1   1]\n",
      "MntGoldProds\n",
      "[  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17\n",
      "  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35\n",
      "  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53\n",
      "  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71\n",
      "  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  88  89  90\n",
      "  91  92  93  94  95  96  97  98  99 100 101 102 103 106 107 108 109 110\n",
      " 111 112 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129\n",
      " 130 131 132 133 134 135 137 138 139 140 141 142 143 144 145 146 147 148\n",
      " 149 150 151 152 153 154 155 157 158 159 160 161 162 163 165 166 168 169\n",
      " 170 171 172 173 174 175 176 177 178 180 181 182 183 185 187 190 191 192\n",
      " 195 196 197 198 199 200 203 204 205 207 210 215 216 218 219 223 224 227\n",
      " 229 231 232 233 241 242 245 246 247 248 249 262 291 321 362]\n",
      "[61 73 62 69 70 63 57 54 40 44 49 46 63 30 35 48 31 36 34 22 43 26 22 19\n",
      " 27 16 32 31 23 20 31 15 21 20 24 22 18 16 27 13 20 19 27 17 10 16 10 12\n",
      " 15  9 13  8  7 12 20  5  9 13  9  6  3 10  3  8  9  5 11  4  3  5  7  5\n",
      "  5  6  2  6 12  4  4  6 12  5  5  6  6  4  5  8  9  3  7  7  7  1  6  4\n",
      "  6  2  7  4  3  6  1  5 10  9  4  2  4  3  5  2  3  5  2  3  3  2  3  1\n",
      "  3  6  6  1  2  3  5  4  1  6  5  2  1  2  3  1  4  3  2  4  5  2  4  1\n",
      "  3  2  3  3  6  4  1  1  1  2  1  1  2  3  1  2  3  1  3  1  7  1  5  2\n",
      "  3  1  1  1  1  5  3  2  3  3  6  3  2  3  1  1  1  3  2  1  3  1  2  1\n",
      "  1  2  1  2  3  3  1  1  2  1  6  2  1  1  1  1  1  1  1  1  1]\n",
      "NumDealsPurchases\n",
      "[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 15]\n",
      "[ 46 970 497 297 189  94  61  40  14   8   5   5   4   3   7]\n",
      "NumWebPurchases\n",
      "[ 0  1  2  3  4  5  6  7  8  9 10 11 23 25 27]\n",
      "[ 49 354 373 336 280 220 205 155 102  75  43  44   1   1   2]\n",
      "NumCatalogPurchases\n",
      "[ 0  1  2  3  4  5  6  7  8  9 10 11 22 28]\n",
      "[586 497 276 184 182 140 128  79  55  42  48  19   1   3]\n",
      "NumStorePurchases\n",
      "[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13]\n",
      "[ 15   7 223 490 323 212 178 143 149 106 125  81 105  83]\n",
      "NumWebVisitsMonth\n",
      "[ 0  1  2  3  4  5  6  7  8  9 10 13 14 17 19 20]\n",
      "[ 11 153 202 205 218 281 340 393 342  83   3   1   2   1   2   3]\n",
      "AcceptedCmp3\n",
      "[0 1]\n",
      "[2077  163]\n",
      "AcceptedCmp4\n",
      "[0 1]\n",
      "[2073  167]\n",
      "AcceptedCmp5\n",
      "[0 1]\n",
      "[2077  163]\n",
      "AcceptedCmp1\n",
      "[0 1]\n",
      "[2096  144]\n",
      "AcceptedCmp2\n",
      "[0 1]\n",
      "[2210   30]\n",
      "Complain\n",
      "[0 1]\n",
      "[2219   21]\n",
      "Z_CostContact\n",
      "[3]\n",
      "[2240]\n",
      "Z_Revenue\n",
      "[11]\n",
      "[2240]\n",
      "Response\n",
      "[0 1]\n",
      "[1906  334]\n",
      "ID\n",
      "[    0     1     9 ... 11187 11188 11191]\n",
      "Year_Birth\n",
      "[1893 1899 1900 1940 1941 1943 1944 1945 1946 1947 1948 1949 1950 1951\n",
      " 1952 1953 1954 1955 1956 1957 1958 1959 1960 1961 1962 1963 1964 1965\n",
      " 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 1979\n",
      " 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993\n",
      " 1994 1995 1996]\n",
      "Education\n",
      "['2n Cycle' 'Basic' 'Graduation' 'Master' 'PhD']\n",
      "Marital_Status\n",
      "['Absurd' 'Alone' 'Divorced' 'Married' 'Single' 'Together' 'Widow' 'YOLO']\n",
      "Income\n",
      "[  1730.   2447.   3502. ... 162397. 666666.     nan]\n",
      "Kidhome\n",
      "[0 1 2]\n",
      "Teenhome\n",
      "[0 1 2]\n",
      "Dt_Customer\n",
      "['01-01-2013' '01-01-2014' '01-02-2013' '01-02-2014' '01-03-2013'\n",
      " '01-03-2014' '01-04-2013' '01-04-2014' '01-05-2013' '01-05-2014'\n",
      " '01-06-2013' '01-07-2013' '01-08-2012' '01-08-2013' '01-09-2012'\n",
      " '01-09-2013' '01-10-2012' '01-10-2013' '01-11-2012' '01-11-2013'\n",
      " '01-12-2012' '01-12-2013' '02-01-2013' '02-01-2014' '02-02-2013'\n",
      " '02-02-2014' '02-03-2013' '02-03-2014' '02-04-2013' '02-04-2014'\n",
      " '02-05-2013' '02-05-2014' '02-06-2013' '02-06-2014' '02-07-2013'\n",
      " '02-08-2012' '02-08-2013' '02-09-2012' '02-09-2013' '02-10-2012'\n",
      " '02-10-2013' '02-11-2012' '02-11-2013' '02-12-2012' '02-12-2013'\n",
      " '03-01-2013' '03-01-2014' '03-02-2013' '03-02-2014' '03-03-2013'\n",
      " '03-03-2014' '03-04-2013' '03-04-2014' '03-05-2013' '03-05-2014'\n",
      " '03-06-2013' '03-06-2014' '03-07-2013' '03-08-2012' '03-08-2013'\n",
      " '03-09-2012' '03-10-2013' '03-11-2012' '03-11-2013' '03-12-2012'\n",
      " '03-12-2013' '04-01-2013' '04-01-2014' '04-02-2013' '04-02-2014'\n",
      " '04-03-2013' '04-03-2014' '04-04-2014' '04-05-2013' '04-05-2014'\n",
      " '04-06-2013' '04-06-2014' '04-07-2013' '04-08-2012' '04-08-2013'\n",
      " '04-09-2012' '04-09-2013' '04-10-2012' '04-10-2013' '04-11-2012'\n",
      " '04-11-2013' '04-12-2012' '04-12-2013' '05-01-2013' '05-01-2014'\n",
      " '05-02-2014' '05-03-2013' '05-03-2014' '05-04-2013' '05-04-2014'\n",
      " '05-05-2013' '05-05-2014' '05-06-2014' '05-07-2013' '05-08-2012'\n",
      " '05-08-2013' '05-09-2012' '05-09-2013' '05-10-2012' '05-10-2013'\n",
      " '05-11-2012' '05-11-2013' '05-12-2012' '05-12-2013' '06-01-2013'\n",
      " '06-01-2014' '06-02-2013' '06-02-2014' '06-03-2013' '06-03-2014'\n",
      " '06-04-2013' '06-04-2014' '06-05-2013' '06-05-2014' '06-06-2013'\n",
      " '06-06-2014' '06-07-2013' '06-08-2012' '06-08-2013' '06-09-2012'\n",
      " '06-09-2013' '06-10-2012' '06-10-2013' '06-11-2012' '06-11-2013'\n",
      " '06-12-2012' '06-12-2013' '07-01-2013' '07-01-2014' '07-02-2013'\n",
      " '07-02-2014' '07-03-2013' '07-03-2014' '07-04-2013' '07-04-2014'\n",
      " '07-05-2013' '07-05-2014' '07-06-2014' '07-07-2013' '07-08-2012'\n",
      " '07-08-2013' '07-09-2012' '07-09-2013' '07-10-2012' '07-11-2012'\n",
      " '07-11-2013' '07-12-2012' '07-12-2013' '08-01-2013' '08-02-2013'\n",
      " '08-02-2014' '08-03-2013' '08-03-2014' '08-04-2013' '08-04-2014'\n",
      " '08-05-2013' '08-05-2014' '08-06-2013' '08-06-2014' '08-07-2013'\n",
      " '08-08-2012' '08-08-2013' '08-09-2012' '08-10-2013' '08-11-2012'\n",
      " '08-11-2013' '08-12-2012' '08-12-2013' '09-01-2013' '09-01-2014'\n",
      " '09-02-2013' '09-02-2014' '09-03-2013' '09-03-2014' '09-04-2013'\n",
      " '09-04-2014' '09-05-2013' '09-05-2014' '09-06-2013' '09-06-2014'\n",
      " '09-07-2013' '09-08-2012' '09-08-2013' '09-09-2012' '09-09-2013'\n",
      " '09-10-2012' '09-10-2013' '09-11-2012' '09-11-2013' '09-12-2012'\n",
      " '09-12-2013' '10-01-2013' '10-01-2014' '10-02-2013' '10-02-2014'\n",
      " '10-03-2013' '10-03-2014' '10-04-2013' '10-04-2014' '10-05-2013'\n",
      " '10-05-2014' '10-06-2013' '10-06-2014' '10-08-2012' '10-08-2013'\n",
      " '10-09-2012' '10-09-2013' '10-10-2012' '10-10-2013' '10-11-2012'\n",
      " '10-11-2013' '10-12-2012' '10-12-2013' '11-01-2013' '11-01-2014'\n",
      " '11-02-2013' '11-02-2014' '11-03-2013' '11-03-2014' '11-04-2013'\n",
      " '11-04-2014' '11-05-2013' '11-05-2014' '11-06-2013' '11-06-2014'\n",
      " '11-07-2013' '11-08-2012' '11-08-2013' '11-09-2012' '11-09-2013'\n",
      " '11-10-2012' '11-10-2013' '11-11-2012' '11-12-2012' '11-12-2013'\n",
      " '12-01-2013' '12-01-2014' '12-02-2013' '12-02-2014' '12-03-2013'\n",
      " '12-03-2014' '12-04-2013' '12-04-2014' '12-05-2013' '12-05-2014'\n",
      " '12-06-2013' '12-06-2014' '12-07-2013' '12-08-2012' '12-08-2013'\n",
      " '12-09-2012' '12-09-2013' '12-10-2012' '12-10-2013' '12-11-2012'\n",
      " '12-11-2013' '12-12-2012' '12-12-2013' '13-01-2013' '13-01-2014'\n",
      " '13-02-2013' '13-02-2014' '13-03-2014' '13-04-2013' '13-04-2014'\n",
      " '13-05-2013' '13-05-2014' '13-06-2013' '13-06-2014' '13-07-2013'\n",
      " '13-08-2012' '13-08-2013' '13-09-2013' '13-10-2012' '13-10-2013'\n",
      " '13-11-2012' '13-11-2013' '13-12-2013' '14-01-2013' '14-01-2014'\n",
      " '14-02-2013' '14-02-2014' '14-03-2013' '14-04-2013' '14-04-2014'\n",
      " '14-05-2013' '14-06-2013' '14-06-2014' '14-07-2013' '14-08-2012'\n",
      " '14-08-2013' '14-09-2012' '14-09-2013' '14-10-2012' '14-10-2013'\n",
      " '14-11-2012' '14-11-2013' '14-12-2012' '14-12-2013' '15-01-2013'\n",
      " '15-01-2014' '15-02-2013' '15-02-2014' '15-03-2013' '15-04-2013'\n",
      " '15-04-2014' '15-05-2013' '15-05-2014' '15-06-2014' '15-07-2013'\n",
      " '15-08-2012' '15-08-2013' '15-09-2012' '15-09-2013' '15-10-2012'\n",
      " '15-10-2013' '15-11-2013' '15-12-2012' '15-12-2013' '16-01-2013'\n",
      " '16-02-2013' '16-02-2014' '16-03-2013' '16-03-2014' '16-04-2013'\n",
      " '16-04-2014' '16-05-2013' '16-05-2014' '16-06-2013' '16-06-2014'\n",
      " '16-07-2013' '16-08-2012' '16-08-2013' '16-09-2013' '16-10-2012'\n",
      " '16-10-2013' '16-11-2012' '16-12-2012' '16-12-2013' '17-01-2013'\n",
      " '17-01-2014' '17-02-2013' '17-02-2014' '17-03-2013' '17-03-2014'\n",
      " '17-04-2013' '17-04-2014' '17-05-2013' '17-05-2014' '17-06-2013'\n",
      " '17-06-2014' '17-07-2013' '17-08-2012' '17-08-2013' '17-09-2012'\n",
      " '17-09-2013' '17-10-2012' '17-10-2013' '17-11-2012' '17-11-2013'\n",
      " '17-12-2012' '17-12-2013' '18-01-2014' '18-02-2013' '18-02-2014'\n",
      " '18-03-2013' '18-03-2014' '18-04-2013' '18-04-2014' '18-05-2013'\n",
      " '18-05-2014' '18-06-2013' '18-06-2014' '18-07-2013' '18-08-2012'\n",
      " '18-08-2013' '18-09-2012' '18-09-2013' '18-10-2012' '18-10-2013'\n",
      " '18-11-2012' '18-11-2013' '18-12-2012' '18-12-2013' '19-01-2013'\n",
      " '19-01-2014' '19-02-2013' '19-02-2014' '19-03-2013' '19-03-2014'\n",
      " '19-04-2013' '19-04-2014' '19-05-2013' '19-05-2014' '19-06-2013'\n",
      " '19-06-2014' '19-07-2013' '19-08-2012' '19-08-2013' '19-09-2012'\n",
      " '19-09-2013' '19-10-2012' '19-10-2013' '19-11-2012' '19-11-2013'\n",
      " '19-12-2012' '19-12-2013' '20-01-2013' '20-02-2013' '20-03-2013'\n",
      " '20-03-2014' '20-04-2013' '20-04-2014' '20-05-2013' '20-06-2013'\n",
      " '20-06-2014' '20-07-2013' '20-08-2012' '20-08-2013' '20-09-2012'\n",
      " '20-09-2013' '20-10-2012' '20-10-2013' '20-11-2012' '20-11-2013'\n",
      " '20-12-2012' '20-12-2013' '21-01-2013' '21-01-2014' '21-02-2013'\n",
      " '21-03-2013' '21-03-2014' '21-04-2013' '21-04-2014' '21-05-2013'\n",
      " '21-06-2013' '21-06-2014' '21-07-2013' '21-08-2012' '21-08-2013'\n",
      " '21-09-2012' '21-09-2013' '21-10-2012' '21-10-2013' '21-11-2012'\n",
      " '21-11-2013' '21-12-2012' '21-12-2013' '22-01-2013' '22-01-2014'\n",
      " '22-02-2013' '22-02-2014' '22-03-2013' '22-03-2014' '22-04-2013'\n",
      " '22-04-2014' '22-05-2013' '22-05-2014' '22-06-2013' '22-06-2014'\n",
      " '22-07-2013' '22-08-2012' '22-08-2013' '22-09-2012' '22-09-2013'\n",
      " '22-10-2012' '22-10-2013' '22-11-2012' '22-11-2013' '22-12-2012'\n",
      " '22-12-2013' '23-01-2013' '23-01-2014' '23-02-2013' '23-02-2014'\n",
      " '23-03-2013' '23-03-2014' '23-04-2013' '23-04-2014' '23-05-2013'\n",
      " '23-05-2014' '23-06-2013' '23-06-2014' '23-07-2013' '23-08-2012'\n",
      " '23-08-2013' '23-09-2012' '23-09-2013' '23-10-2012' '23-10-2013'\n",
      " '23-11-2012' '23-11-2013' '23-12-2012' '23-12-2013' '24-01-2013'\n",
      " '24-01-2014' '24-02-2014' '24-03-2013' '24-03-2014' '24-04-2013'\n",
      " '24-04-2014' '24-05-2013' '24-05-2014' '24-06-2013' '24-06-2014'\n",
      " '24-07-2013' '24-08-2012' '24-08-2013' '24-09-2012' '24-09-2013'\n",
      " '24-10-2012' '24-10-2013' '24-11-2012' '24-12-2012' '24-12-2013'\n",
      " '25-01-2013' '25-01-2014' '25-02-2013' '25-02-2014' '25-03-2013'\n",
      " '25-03-2014' '25-04-2013' '25-04-2014' '25-05-2013' '25-05-2014'\n",
      " '25-06-2013' '25-06-2014' '25-07-2013' '25-08-2012' '25-08-2013'\n",
      " '25-09-2012' '25-09-2013' '25-10-2012' '25-10-2013' '25-11-2012'\n",
      " '25-11-2013' '25-12-2012' '25-12-2013' '26-01-2013' '26-01-2014'\n",
      " '26-02-2013' '26-02-2014' '26-03-2013' '26-03-2014' '26-04-2014'\n",
      " '26-05-2013' '26-05-2014' '26-06-2013' '26-06-2014' '26-07-2013'\n",
      " '26-08-2012' '26-08-2013' '26-09-2012' '26-09-2013' '26-10-2012'\n",
      " '26-10-2013' '26-11-2012' '26-11-2013' '26-12-2012' '26-12-2013'\n",
      " '27-01-2013' '27-01-2014' '27-02-2013' '27-02-2014' '27-03-2013'\n",
      " '27-03-2014' '27-04-2013' '27-04-2014' '27-05-2013' '27-05-2014'\n",
      " '27-06-2013' '27-06-2014' '27-07-2013' '27-08-2012' '27-08-2013'\n",
      " '27-09-2012' '27-09-2013' '27-10-2012' '27-10-2013' '27-11-2012'\n",
      " '27-11-2013' '27-12-2012' '27-12-2013' '28-01-2014' '28-02-2013'\n",
      " '28-02-2014' '28-03-2013' '28-03-2014' '28-04-2013' '28-04-2014'\n",
      " '28-05-2013' '28-05-2014' '28-06-2013' '28-06-2014' '28-07-2013'\n",
      " '28-08-2012' '28-08-2013' '28-09-2012' '28-09-2013' '28-10-2012'\n",
      " '28-10-2013' '28-11-2012' '28-11-2013' '28-12-2012' '28-12-2013'\n",
      " '29-01-2013' '29-01-2014' '29-03-2013' '29-03-2014' '29-04-2013'\n",
      " '29-04-2014' '29-05-2013' '29-05-2014' '29-06-2013' '29-06-2014'\n",
      " '29-07-2013' '29-08-2012' '29-08-2013' '29-09-2012' '29-10-2012'\n",
      " '29-10-2013' '29-11-2012' '29-11-2013' '29-12-2012' '29-12-2013'\n",
      " '30-01-2014' '30-03-2013' '30-03-2014' '30-04-2013' '30-04-2014'\n",
      " '30-05-2013' '30-05-2014' '30-06-2013' '30-07-2012' '30-07-2013'\n",
      " '30-08-2012' '30-08-2013' '30-09-2012' '30-09-2013' '30-10-2012'\n",
      " '30-10-2013' '30-11-2012' '30-11-2013' '30-12-2012' '30-12-2013'\n",
      " '31-01-2013' '31-01-2014' '31-03-2013' '31-03-2014' '31-05-2013'\n",
      " '31-05-2014' '31-07-2012' '31-07-2013' '31-08-2012' '31-08-2013'\n",
      " '31-10-2012' '31-12-2012' '31-12-2013']\n",
      "Recency\n",
      "[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\n",
      " 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47\n",
      " 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71\n",
      " 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95\n",
      " 96 97 98 99]\n",
      "MntWines\n",
      "[   0    1    2    3    4    5    6    7    8    9   10   11   12   13\n",
      "   14   15   16   17   18   19   20   21   22   23   24   25   26   27\n",
      "   28   29   30   31   32   33   34   35   36   37   38   39   40   41\n",
      "   42   43   44   45   46   47   48   50   51   52   53   54   55   56\n",
      "   57   58   59   60   61   62   63   64   65   66   67   68   69   70\n",
      "   71   72   73   74   75   76   77   78   79   80   81   82   83   84\n",
      "   85   86   87   88   89   90   91   92   93   94   95   96   97   98\n",
      "   99  100  101  102  104  105  106  107  108  109  110  111  112  113\n",
      "  115  116  117  120  121  122  123  124  125  127  128  129  130  131\n",
      "  132  133  134  135  136  138  139  140  141  143  144  145  146  151\n",
      "  152  153  154  155  156  157  158  159  160  161  162  163  164  165\n",
      "  166  167  168  169  170  171  172  173  174  175  176  177  178  179\n",
      "  180  181  182  183  184  185  186  187  188  189  191  192  194  196\n",
      "  197  198  199  200  201  202  203  204  205  206  207  208  209  210\n",
      "  211  212  213  215  216  217  218  219  220  221  223  224  225  226\n",
      "  227  228  229  230  231  233  234  235  236  238  239  240  241  243\n",
      "  244  245  247  248  249  251  252  254  255  256  258  260  261  262\n",
      "  263  264  265  266  267  268  269  270  272  273  274  275  277  279\n",
      "  280  281  283  284  285  288  290  291  292  293  294  295  296  297\n",
      "  298  299  301  302  303  304  305  306  307  308  309  311  312  313\n",
      "  314  315  316  317  318  320  321  322  324  325  327  328  329  330\n",
      "  331  332  333  335  336  338  340  341  342  344  345  346  347  349\n",
      "  350  351  352  353  354  355  356  357  358  359  362  364  365  366\n",
      "  367  368  369  370  371  372  373  374  375  376  377  378  379  380\n",
      "  381  382  383  384  386  387  388  389  390  391  392  393  395  397\n",
      "  398  399  400  402  403  404  406  407  408  410  411  412  415  416\n",
      "  418  420  421  422  423  424  425  426  428  430  431  432  433  434\n",
      "  437  438  440  441  443  444  445  446  447  448  450  451  452  453\n",
      "  454  456  457  458  459  460  462  463  464  465  466  471  473  476\n",
      "  478  479  480  482  483  488  489  490  491  492  493  494  495  496\n",
      "  499  502  503  504  505  507  508  509  510  512  513  514  515  516\n",
      "  517  518  519  520  521  522  523  524  525  526  527  529  530  531\n",
      "  532  533  534  536  537  538  539  543  544  545  546  547  548  551\n",
      "  553  554  555  556  557  558  559  560  561  562  563  565  570  571\n",
      "  572  574  575  576  577  580  581  582  583  584  586  587  588  593\n",
      "  594  595  597  598  600  603  604  605  606  610  611  612  613  614\n",
      "  615  618  619  620  621  622  623  625  626  627  629  630  631  635\n",
      "  637  639  641  642  647  650  652  653  654  656  658  664  666  667\n",
      "  670  671  673  674  675  676  680  684  686  688  689  690  691  693\n",
      "  702  703  704  707  708  709  710  711  712  713  714  717  721  722\n",
      "  724  726  728  729  731  733  734  735  736  737  738  739  741  742\n",
      "  743  746  747  749  750  751  752  753  754  755  756  757  758  760\n",
      "  763  768  769  770  771  774  777  778  779  783  784  787  789  790\n",
      "  792  794  795  796  797  799  800  801  806  811  812  815  816  817\n",
      "  819  820  822  823  824  825  826  829  830  833  835  836  840  846\n",
      "  847  848  852  853  856  860  861  863  864  866  867  871  879  881\n",
      "  882  888  889  890  895  896  897  899  901  908  909  910  912  913\n",
      "  918  919  920  925  928  931  934  938  940  941  944  948  952  953\n",
      "  957  958  960  962  964  965  966  967  968  972  977  979  980  982\n",
      "  983  984  986  992  995  997 1000 1001 1003 1004 1006 1009 1012 1013\n",
      " 1016 1017 1020 1023 1032 1035 1039 1043 1045 1047 1048 1050 1060 1063\n",
      " 1067 1073 1074 1076 1083 1090 1092 1099 1103 1111 1115 1121 1126 1132\n",
      " 1142 1148 1149 1156 1166 1168 1170 1171 1181 1184 1193 1200 1205 1206\n",
      " 1215 1218 1224 1230 1239 1241 1245 1248 1252 1253 1259 1276 1279 1285\n",
      " 1288 1296 1298 1302 1308 1311 1315 1324 1332 1349 1379 1394 1396 1449\n",
      " 1459 1462 1478 1486 1492 1493]\n",
      "MntFruits\n",
      "[  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17\n",
      "  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35\n",
      "  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  53  54\n",
      "  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n",
      "  73  74  75  76  77  79  80  81  82  83  84  85  86  87  88  89  90  91\n",
      "  92  93  96  97  98  99 100 101 102 103 104 105 106 107 108 111 112 114\n",
      " 115 117 120 122 123 124 126 127 129 130 131 132 133 134 137 138 140 142\n",
      " 143 144 147 148 149 151 152 153 154 155 159 160 161 162 163 164 166 168\n",
      " 169 172 174 178 181 183 184 185 189 190 193 194 197 199]\n",
      "MntMeatProducts\n",
      "[   0    1    2    3    4    5    6    7    8    9   10   11   12   13\n",
      "   14   15   16   17   18   19   20   21   22   23   24   25   26   27\n",
      "   28   29   30   31   32   33   34   35   36   37   38   39   40   41\n",
      "   42   43   44   45   46   47   48   49   50   51   52   53   54   55\n",
      "   56   57   58   59   60   61   62   63   64   65   66   67   68   69\n",
      "   70   71   72   73   74   75   76   77   78   79   80   81   82   83\n",
      "   84   85   86   87   88   89   90   91   92   93   94   95   96   97\n",
      "   98   99  100  101  102  103  104  106  107  108  109  110  111  112\n",
      "  113  114  115  116  117  118  119  120  121  122  123  124  125  126\n",
      "  127  128  129  130  131  132  133  134  135  136  137  138  139  140\n",
      "  141  142  143  144  145  147  149  151  152  153  154  155  156  157\n",
      "  158  159  160  161  162  163  164  165  166  167  168  169  170  171\n",
      "  172  174  175  176  177  178  179  180  181  182  183  184  185  186\n",
      "  188  189  192  193  194  195  196  197  199  201  202  203  204  205\n",
      "  206  207  208  209  211  212  213  214  215  216  217  218  219  221\n",
      "  222  223  224  226  227  228  230  231  232  233  234  235  237  238\n",
      "  239  240  241  242  243  247  248  249  250  252  253  254  255  256\n",
      "  257  259  260  263  264  265  266  267  269  270  271  272  273  274\n",
      "  275  276  278  279  280  281  282  286  287  288  291  292  293  294\n",
      "  295  297  298  300  303  304  305  309  311  314  315  317  319  320\n",
      "  322  323  324  329  332  333  334  335  337  338  341  342  345  348\n",
      "  349  350  351  352  353  354  356  359  360  363  364  367  368  369\n",
      "  372  373  374  375  376  377  379  380  382  384  385  387  388  389\n",
      "  391  392  395  396  397  398  399  400  401  403  405  407  408  409\n",
      "  410  411  413  414  415  417  419  420  421  422  424  425  426  428\n",
      "  430  431  432  435  441  442  444  445  446  447  449  450  452  454\n",
      "  455  456  459  460  461  462  464  465  466  469  470  471  473  476\n",
      "  480  482  483  487  490  491  493  494  495  497  498  499  500  501\n",
      "  503  505  507  509  510  512  514  518  519  520  522  523  528  530\n",
      "  534  535  536  537  538  540  545  546  547  548  549  550  553  554\n",
      "  555  558  559  560  561  562  565  567  568  569  570  572  573  575\n",
      "  586  590  591  592  594  595  597  599  601  602  603  604  606  607\n",
      "  611  612  613  614  617  622  625  629  631  635  639  640  649  650\n",
      "  651  653  654  655  670  672  673  674  678  685  687  689  690  693\n",
      "  694  697  701  704  706  708  711  713  716  717  724  731  732  733\n",
      "  735  736  740  742  746  747  749  750  751  753  754  756  757  758\n",
      "  761  768  774  779  780  785  786  790  792  797  801  804  812  813\n",
      "  815  816  818  827  832  835  838  842  843  845  849  850  853  860\n",
      "  864  873  883  890  898  899  913  915  921  925  929  932  935  936\n",
      "  940  946  951  961  968  974  981  984 1582 1607 1622 1725]\n",
      "MntFishProducts\n",
      "[  0   1   2   3   4   5   6   7   8  10  11  12  13  15  16  17  19  20\n",
      "  21  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39\n",
      "  40  41  42  43  44  45  46  47  48  49  50  51  52  54  55  56  58  59\n",
      "  60  61  62  63  64  65  67  68  69  71  72  73  75  76  77  78  80  81\n",
      "  82  84  85  86  89  90  91  93  94  95  97  98  99 101 102 103 104 106\n",
      " 108 110 111 112 114 115 116 119 120 121 123 124 125 127 128 129 130 132\n",
      " 133 134 136 137 138 140 141 142 145 146 147 149 150 151 153 156 158 159\n",
      " 160 162 164 166 167 168 169 171 172 173 175 177 179 180 181 182 184 185\n",
      " 186 188 189 192 193 194 197 198 199 201 202 205 207 208 210 212 216 218\n",
      " 219 220 223 224 225 227 229 231 232 234 237 240 242 246 247 250 253 254\n",
      " 258 259]\n",
      "MntSweetProducts\n",
      "[  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17\n",
      "  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35\n",
      "  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  53  54\n",
      "  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n",
      "  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  91\n",
      "  92  93  94  95  96  97  98  99 100 101 102 103 105 106 107 108 109 110\n",
      " 111 112 113 114 115 116 118 120 121 122 123 124 125 126 127 128 129 130\n",
      " 132 133 134 136 137 138 139 141 142 143 144 145 146 147 148 149 150 151\n",
      " 152 153 156 157 160 161 162 163 165 166 167 169 172 173 174 175 176 178\n",
      " 179 182 185 187 188 189 191 192 194 195 196 197 198 262 263]\n",
      "MntGoldProds\n",
      "[  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17\n",
      "  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35\n",
      "  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53\n",
      "  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71\n",
      "  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  88  89  90\n",
      "  91  92  93  94  95  96  97  98  99 100 101 102 103 106 107 108 109 110\n",
      " 111 112 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129\n",
      " 130 131 132 133 134 135 137 138 139 140 141 142 143 144 145 146 147 148\n",
      " 149 150 151 152 153 154 155 157 158 159 160 161 162 163 165 166 168 169\n",
      " 170 171 172 173 174 175 176 177 178 180 181 182 183 185 187 190 191 192\n",
      " 195 196 197 198 199 200 203 204 205 207 210 215 216 218 219 223 224 227\n",
      " 229 231 232 233 241 242 245 246 247 248 249 262 291 321 362]\n",
      "NumDealsPurchases\n",
      "[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 15]\n",
      "NumWebPurchases\n",
      "[ 0  1  2  3  4  5  6  7  8  9 10 11 23 25 27]\n",
      "NumCatalogPurchases\n",
      "[ 0  1  2  3  4  5  6  7  8  9 10 11 22 28]\n",
      "NumStorePurchases\n",
      "[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13]\n",
      "NumWebVisitsMonth\n",
      "[ 0  1  2  3  4  5  6  7  8  9 10 13 14 17 19 20]\n",
      "AcceptedCmp3\n",
      "[0 1]\n",
      "AcceptedCmp4\n",
      "[0 1]\n",
      "AcceptedCmp5\n",
      "[0 1]\n",
      "AcceptedCmp1\n",
      "[0 1]\n",
      "AcceptedCmp2\n",
      "[0 1]\n",
      "Complain\n",
      "[0 1]\n",
      "Z_CostContact\n",
      "[3]\n",
      "Z_Revenue\n",
      "[11]\n",
      "Response\n",
      "[0 1]\n"
     ]
    }
   ],
   "source": [
    "#Extracting the uniq_data for each Variables \n",
    "#We will be focus looking at \"Response\" column. \n",
    "\n",
    "for uniq_data in data:\n",
    "    print(uniq_data)\n",
    "    values, counts = np.unique(data[uniq_data], return_counts=True)\n",
    "    print(values)\n",
    "    print(counts)\n",
    "    \n",
    "for uniq_data in data.columns:\n",
    "    print(uniq_data)\n",
    "    data[uniq_data].unique()\n",
    "    print(np.sort(data[uniq_data].unique()))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6e5d158d",
   "metadata": {},
   "source": [
    "### Eliminate NULL values "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "b6c408f8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The shape of the dataset after removing null values is :  (2216, 29)\n"
     ]
    }
   ],
   "source": [
    "data = data.dropna()\n",
    "print(\"The shape of the dataset after removing null values is : \", data.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd4c3048",
   "metadata": {},
   "source": [
    "### Create Age Column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "fd581118",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    64\n",
       "1    67\n",
       "2    56\n",
       "3    37\n",
       "4    40\n",
       "Name: Age, dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['Age'] = 2021 - data['Year_Birth']\n",
    "data['Age'].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d724b70b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "45     89\n",
       "50     86\n",
       "46     83\n",
       "49     78\n",
       "43     76\n",
       "51     75\n",
       "56     74\n",
       "48     72\n",
       "52     70\n",
       "47     69\n",
       "65     55\n",
       "42     53\n",
       "69     52\n",
       "63     52\n",
       "44     52\n",
       "53     51\n",
       "55     50\n",
       "62     50\n",
       "61     49\n",
       "67     49\n",
       "66     48\n",
       "54     44\n",
       "58     44\n",
       "59     44\n",
       "39     44\n",
       "70     42\n",
       "35     41\n",
       "38     41\n",
       "57     41\n",
       "64     41\n",
       "41     39\n",
       "40     38\n",
       "37     38\n",
       "68     35\n",
       "60     35\n",
       "36     32\n",
       "72     30\n",
       "33     29\n",
       "32     29\n",
       "71     29\n",
       "34     27\n",
       "73     21\n",
       "31     18\n",
       "75     16\n",
       "74     16\n",
       "30     15\n",
       "29     13\n",
       "76      8\n",
       "77      7\n",
       "78      6\n",
       "26      5\n",
       "28      5\n",
       "27      3\n",
       "25      2\n",
       "81      1\n",
       "128     1\n",
       "122     1\n",
       "80      1\n",
       "121     1\n",
       "Name: Age, dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['Age'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a78b1121",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Year_Birth</th>\n",
       "      <th>Education</th>\n",
       "      <th>Marital_Status</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Dt_Customer</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>...</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Z_CostContact</th>\n",
       "      <th>Z_Revenue</th>\n",
       "      <th>Response</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5524</td>\n",
       "      <td>1957</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Single</td>\n",
       "      <td>58138.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>04-09-2012</td>\n",
       "      <td>58</td>\n",
       "      <td>635</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2174</td>\n",
       "      <td>1954</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Single</td>\n",
       "      <td>46344.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>08-03-2014</td>\n",
       "      <td>38</td>\n",
       "      <td>11</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4141</td>\n",
       "      <td>1965</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Together</td>\n",
       "      <td>71613.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>21-08-2013</td>\n",
       "      <td>26</td>\n",
       "      <td>426</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6182</td>\n",
       "      <td>1984</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Together</td>\n",
       "      <td>26646.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>10-02-2014</td>\n",
       "      <td>26</td>\n",
       "      <td>11</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5324</td>\n",
       "      <td>1981</td>\n",
       "      <td>PhD</td>\n",
       "      <td>Married</td>\n",
       "      <td>58293.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>19-01-2014</td>\n",
       "      <td>94</td>\n",
       "      <td>173</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     ID  Year_Birth   Education Marital_Status   Income  Kidhome  Teenhome  \\\n",
       "0  5524        1957  Graduation         Single  58138.0        0         0   \n",
       "1  2174        1954  Graduation         Single  46344.0        1         1   \n",
       "2  4141        1965  Graduation       Together  71613.0        0         0   \n",
       "3  6182        1984  Graduation       Together  26646.0        1         0   \n",
       "4  5324        1981         PhD        Married  58293.0        1         0   \n",
       "\n",
       "  Dt_Customer  Recency  MntWines  ...  AcceptedCmp3  AcceptedCmp4  \\\n",
       "0  04-09-2012       58       635  ...             0             0   \n",
       "1  08-03-2014       38        11  ...             0             0   \n",
       "2  21-08-2013       26       426  ...             0             0   \n",
       "3  10-02-2014       26        11  ...             0             0   \n",
       "4  19-01-2014       94       173  ...             0             0   \n",
       "\n",
       "   AcceptedCmp5  AcceptedCmp1  AcceptedCmp2  Complain  Z_CostContact  \\\n",
       "0             0             0             0         0              3   \n",
       "1             0             0             0         0              3   \n",
       "2             0             0             0         0              3   \n",
       "3             0             0             0         0              3   \n",
       "4             0             0             0         0              3   \n",
       "\n",
       "   Z_Revenue  Response  Age  \n",
       "0         11         1   64  \n",
       "1         11         0   67  \n",
       "2         11         0   56  \n",
       "3         11         0   37  \n",
       "4         11         0   40  \n",
       "\n",
       "[5 rows x 30 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "ab8a8921",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Year_Birth</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>MntFruits</th>\n",
       "      <th>MntMeatProducts</th>\n",
       "      <th>MntFishProducts</th>\n",
       "      <th>...</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Z_CostContact</th>\n",
       "      <th>Z_Revenue</th>\n",
       "      <th>Response</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.0</td>\n",
       "      <td>2216.0</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>5588.353339</td>\n",
       "      <td>1968.820397</td>\n",
       "      <td>52247.251354</td>\n",
       "      <td>0.441787</td>\n",
       "      <td>0.505415</td>\n",
       "      <td>49.012635</td>\n",
       "      <td>305.091606</td>\n",
       "      <td>26.356047</td>\n",
       "      <td>166.995939</td>\n",
       "      <td>37.637635</td>\n",
       "      <td>...</td>\n",
       "      <td>0.073556</td>\n",
       "      <td>0.074007</td>\n",
       "      <td>0.073105</td>\n",
       "      <td>0.064079</td>\n",
       "      <td>0.013538</td>\n",
       "      <td>0.009477</td>\n",
       "      <td>3.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.150271</td>\n",
       "      <td>52.179603</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3249.376275</td>\n",
       "      <td>11.985554</td>\n",
       "      <td>25173.076661</td>\n",
       "      <td>0.536896</td>\n",
       "      <td>0.544181</td>\n",
       "      <td>28.948352</td>\n",
       "      <td>337.327920</td>\n",
       "      <td>39.793917</td>\n",
       "      <td>224.283273</td>\n",
       "      <td>54.752082</td>\n",
       "      <td>...</td>\n",
       "      <td>0.261106</td>\n",
       "      <td>0.261842</td>\n",
       "      <td>0.260367</td>\n",
       "      <td>0.244950</td>\n",
       "      <td>0.115588</td>\n",
       "      <td>0.096907</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.357417</td>\n",
       "      <td>11.985554</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1893.000000</td>\n",
       "      <td>1730.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>25.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2814.750000</td>\n",
       "      <td>1959.000000</td>\n",
       "      <td>35303.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>44.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5458.500000</td>\n",
       "      <td>1970.000000</td>\n",
       "      <td>51381.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>49.000000</td>\n",
       "      <td>174.500000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>51.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>8421.750000</td>\n",
       "      <td>1977.000000</td>\n",
       "      <td>68522.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>505.000000</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>232.250000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>62.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>11191.000000</td>\n",
       "      <td>1996.000000</td>\n",
       "      <td>666666.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>1493.000000</td>\n",
       "      <td>199.000000</td>\n",
       "      <td>1725.000000</td>\n",
       "      <td>259.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>128.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                 ID   Year_Birth         Income      Kidhome     Teenhome  \\\n",
       "count   2216.000000  2216.000000    2216.000000  2216.000000  2216.000000   \n",
       "mean    5588.353339  1968.820397   52247.251354     0.441787     0.505415   \n",
       "std     3249.376275    11.985554   25173.076661     0.536896     0.544181   \n",
       "min        0.000000  1893.000000    1730.000000     0.000000     0.000000   \n",
       "25%     2814.750000  1959.000000   35303.000000     0.000000     0.000000   \n",
       "50%     5458.500000  1970.000000   51381.500000     0.000000     0.000000   \n",
       "75%     8421.750000  1977.000000   68522.000000     1.000000     1.000000   \n",
       "max    11191.000000  1996.000000  666666.000000     2.000000     2.000000   \n",
       "\n",
       "           Recency     MntWines    MntFruits  MntMeatProducts  \\\n",
       "count  2216.000000  2216.000000  2216.000000      2216.000000   \n",
       "mean     49.012635   305.091606    26.356047       166.995939   \n",
       "std      28.948352   337.327920    39.793917       224.283273   \n",
       "min       0.000000     0.000000     0.000000         0.000000   \n",
       "25%      24.000000    24.000000     2.000000        16.000000   \n",
       "50%      49.000000   174.500000     8.000000        68.000000   \n",
       "75%      74.000000   505.000000    33.000000       232.250000   \n",
       "max      99.000000  1493.000000   199.000000      1725.000000   \n",
       "\n",
       "       MntFishProducts  ...  AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  \\\n",
       "count      2216.000000  ...   2216.000000   2216.000000   2216.000000   \n",
       "mean         37.637635  ...      0.073556      0.074007      0.073105   \n",
       "std          54.752082  ...      0.261106      0.261842      0.260367   \n",
       "min           0.000000  ...      0.000000      0.000000      0.000000   \n",
       "25%           3.000000  ...      0.000000      0.000000      0.000000   \n",
       "50%          12.000000  ...      0.000000      0.000000      0.000000   \n",
       "75%          50.000000  ...      0.000000      0.000000      0.000000   \n",
       "max         259.000000  ...      1.000000      1.000000      1.000000   \n",
       "\n",
       "       AcceptedCmp1  AcceptedCmp2     Complain  Z_CostContact  Z_Revenue  \\\n",
       "count   2216.000000   2216.000000  2216.000000         2216.0     2216.0   \n",
       "mean       0.064079      0.013538     0.009477            3.0       11.0   \n",
       "std        0.244950      0.115588     0.096907            0.0        0.0   \n",
       "min        0.000000      0.000000     0.000000            3.0       11.0   \n",
       "25%        0.000000      0.000000     0.000000            3.0       11.0   \n",
       "50%        0.000000      0.000000     0.000000            3.0       11.0   \n",
       "75%        0.000000      0.000000     0.000000            3.0       11.0   \n",
       "max        1.000000      1.000000     1.000000            3.0       11.0   \n",
       "\n",
       "          Response          Age  \n",
       "count  2216.000000  2216.000000  \n",
       "mean      0.150271    52.179603  \n",
       "std       0.357417    11.985554  \n",
       "min       0.000000    25.000000  \n",
       "25%       0.000000    44.000000  \n",
       "50%       0.000000    51.000000  \n",
       "75%       0.000000    62.000000  \n",
       "max       1.000000   128.000000  \n",
       "\n",
       "[8 rows x 27 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c3fa5258",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "128"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.Age.max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "18ee4c2c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "25"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.Age.min()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "911b013b",
   "metadata": {},
   "source": [
    "### No. of Years Customer enroll with Company"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "f13dcc08",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       9\n",
       "1       7\n",
       "2       8\n",
       "3       7\n",
       "4       7\n",
       "       ..\n",
       "2235    8\n",
       "2236    7\n",
       "2237    7\n",
       "2238    7\n",
       "2239    9\n",
       "Name: Years_Enroll_with_Company, Length: 2216, dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['Years_Enroll_with_Company']= 2021- pd.to_datetime(data['Dt_Customer']).dt.year\n",
    "data['Years_Enroll_with_Company']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "704946bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "8    1173\n",
       "7     553\n",
       "9     490\n",
       "Name: Years_Enroll_with_Company, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['Years_Enroll_with_Company'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "ad7e08e1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "9"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.Years_Enroll_with_Company.max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "718b92e0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.Years_Enroll_with_Company.min()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40ec6e85",
   "metadata": {},
   "source": [
    "### Parsing OBJECT as DATETIME"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "e1450f5d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data type of Dt_Customer column before parsing :  object\n",
      "Data type of Dt_Customer column after parsing :  datetime64[ns]\n",
      "0   2012-04-09\n",
      "1   2014-08-03\n",
      "2   2013-08-21\n",
      "3   2014-10-02\n",
      "4   2014-01-19\n",
      "Name: Dt_Customer, dtype: datetime64[ns]\n"
     ]
    }
   ],
   "source": [
    "print(\"Data type of Dt_Customer column before parsing : \", data[\"Dt_Customer\"].dtypes)\n",
    "data[\"Dt_Customer\"] = pd.to_datetime(data[\"Dt_Customer\"])\n",
    "print(\"Data type of Dt_Customer column after parsing : \", data[\"Dt_Customer\"].dtypes)\n",
    "print(data[\"Dt_Customer\"].head())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e1cd8b0",
   "metadata": {},
   "source": [
    "### Encode 'Education' & 'Marital_Status' Column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "9fd9dc9a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Graduation    1116\n",
       "PhD            481\n",
       "Master         365\n",
       "2n Cycle       200\n",
       "Basic           54\n",
       "Name: Education, dtype: int64"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['Education'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "8e792ffc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Graduation', 'PhD', 'Master', 'Basic', '2n Cycle'], dtype=object)"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.Education.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "f16b9cdd",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['Education'].\\\n",
    "replace({'Graduation' : 1, 'PhD' : 2, 'Master' : 3, 'Basic' : 4, '2n Cycle' : 5},\n",
    "        inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "ec740222",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    1116\n",
       "2     481\n",
       "3     365\n",
       "5     200\n",
       "4      54\n",
       "Name: Education, dtype: int64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['Education'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "2c3636ec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Married     857\n",
       "Together    573\n",
       "Single      471\n",
       "Divorced    232\n",
       "Widow        76\n",
       "Alone         3\n",
       "Absurd        2\n",
       "YOLO          2\n",
       "Name: Marital_Status, dtype: int64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['Marital_Status'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "2ab50836",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Single', 'Together', 'Married', 'Divorced', 'Widow', 'Alone',\n",
       "       'Absurd', 'YOLO'], dtype=object)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.Marital_Status.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "0b6257b8",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['Marital_Status'].\\\n",
    "replace({'Single' : 0, 'Together' : 1, 'Married' : 2, 'Divorced' : 3, 'Widow' : 4, 'Alone' : 5,\n",
    "       'Absurd' : 6, 'YOLO' : 7},\n",
    "       inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "bc00d07d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2    857\n",
       "1    573\n",
       "0    471\n",
       "3    232\n",
       "4     76\n",
       "5      3\n",
       "6      2\n",
       "7      2\n",
       "Name: Marital_Status, dtype: int64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['Marital_Status'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "f3d42e70",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Year_Birth</th>\n",
       "      <th>Education</th>\n",
       "      <th>Marital_Status</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Dt_Customer</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>...</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Z_CostContact</th>\n",
       "      <th>Z_Revenue</th>\n",
       "      <th>Response</th>\n",
       "      <th>Age</th>\n",
       "      <th>Years_Enroll_with_Company</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5524</td>\n",
       "      <td>1957</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>58138.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2012-04-09</td>\n",
       "      <td>58</td>\n",
       "      <td>635</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>64</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2174</td>\n",
       "      <td>1954</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>46344.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2014-08-03</td>\n",
       "      <td>38</td>\n",
       "      <td>11</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>67</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4141</td>\n",
       "      <td>1965</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>71613.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2013-08-21</td>\n",
       "      <td>26</td>\n",
       "      <td>426</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>56</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6182</td>\n",
       "      <td>1984</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>26646.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2014-10-02</td>\n",
       "      <td>26</td>\n",
       "      <td>11</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>37</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5324</td>\n",
       "      <td>1981</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>58293.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2014-01-19</td>\n",
       "      <td>94</td>\n",
       "      <td>173</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>40</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     ID  Year_Birth  Education  Marital_Status   Income  Kidhome  Teenhome  \\\n",
       "0  5524        1957          1               0  58138.0        0         0   \n",
       "1  2174        1954          1               0  46344.0        1         1   \n",
       "2  4141        1965          1               1  71613.0        0         0   \n",
       "3  6182        1984          1               1  26646.0        1         0   \n",
       "4  5324        1981          2               2  58293.0        1         0   \n",
       "\n",
       "  Dt_Customer  Recency  MntWines  ...  AcceptedCmp4  AcceptedCmp5  \\\n",
       "0  2012-04-09       58       635  ...             0             0   \n",
       "1  2014-08-03       38        11  ...             0             0   \n",
       "2  2013-08-21       26       426  ...             0             0   \n",
       "3  2014-10-02       26        11  ...             0             0   \n",
       "4  2014-01-19       94       173  ...             0             0   \n",
       "\n",
       "   AcceptedCmp1  AcceptedCmp2  Complain  Z_CostContact  Z_Revenue  Response  \\\n",
       "0             0             0         0              3         11         1   \n",
       "1             0             0         0              3         11         0   \n",
       "2             0             0         0              3         11         0   \n",
       "3             0             0         0              3         11         0   \n",
       "4             0             0         0              3         11         0   \n",
       "\n",
       "   Age  Years_Enroll_with_Company  \n",
       "0   64                          9  \n",
       "1   67                          7  \n",
       "2   56                          8  \n",
       "3   37                          7  \n",
       "4   40                          7  \n",
       "\n",
       "[5 rows x 31 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b97657d9",
   "metadata": {},
   "source": [
    "## Drop Features: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "a59670ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID                                    int64\n",
       "Year_Birth                            int64\n",
       "Education                             int64\n",
       "Marital_Status                        int64\n",
       "Income                              float64\n",
       "Kidhome                               int64\n",
       "Teenhome                              int64\n",
       "Dt_Customer                  datetime64[ns]\n",
       "Recency                               int64\n",
       "MntWines                              int64\n",
       "MntFruits                             int64\n",
       "MntMeatProducts                       int64\n",
       "MntFishProducts                       int64\n",
       "MntSweetProducts                      int64\n",
       "MntGoldProds                          int64\n",
       "NumDealsPurchases                     int64\n",
       "NumWebPurchases                       int64\n",
       "NumCatalogPurchases                   int64\n",
       "NumStorePurchases                     int64\n",
       "NumWebVisitsMonth                     int64\n",
       "AcceptedCmp3                          int64\n",
       "AcceptedCmp4                          int64\n",
       "AcceptedCmp5                          int64\n",
       "AcceptedCmp1                          int64\n",
       "AcceptedCmp2                          int64\n",
       "Complain                              int64\n",
       "Z_CostContact                         int64\n",
       "Z_Revenue                             int64\n",
       "Response                              int64\n",
       "Age                                   int64\n",
       "Years_Enroll_with_Company             int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "267248bb",
   "metadata": {},
   "outputs": [],
   "source": [
    "data1 = data.drop(columns=['Dt_Customer','ID','Year_Birth', 'Z_CostContact', 'Z_Revenue'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "19327fea",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Education</th>\n",
       "      <th>Marital_Status</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>MntFruits</th>\n",
       "      <th>MntMeatProducts</th>\n",
       "      <th>MntFishProducts</th>\n",
       "      <th>...</th>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Response</th>\n",
       "      <th>Age</th>\n",
       "      <th>Years_Enroll_with_Company</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>58138.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>635</td>\n",
       "      <td>88</td>\n",
       "      <td>546</td>\n",
       "      <td>172</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>64</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>46344.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>38</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>67</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>71613.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>26</td>\n",
       "      <td>426</td>\n",
       "      <td>49</td>\n",
       "      <td>127</td>\n",
       "      <td>111</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>56</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>26646.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>26</td>\n",
       "      <td>11</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>10</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>37</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>58293.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>94</td>\n",
       "      <td>173</td>\n",
       "      <td>43</td>\n",
       "      <td>118</td>\n",
       "      <td>46</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>40</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Education  Marital_Status   Income  Kidhome  Teenhome  Recency  MntWines  \\\n",
       "0          1               0  58138.0        0         0       58       635   \n",
       "1          1               0  46344.0        1         1       38        11   \n",
       "2          1               1  71613.0        0         0       26       426   \n",
       "3          1               1  26646.0        1         0       26        11   \n",
       "4          2               2  58293.0        1         0       94       173   \n",
       "\n",
       "   MntFruits  MntMeatProducts  MntFishProducts  ...  NumWebVisitsMonth  \\\n",
       "0         88              546              172  ...                  7   \n",
       "1          1                6                2  ...                  5   \n",
       "2         49              127              111  ...                  4   \n",
       "3          4               20               10  ...                  6   \n",
       "4         43              118               46  ...                  5   \n",
       "\n",
       "   AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  AcceptedCmp1  AcceptedCmp2  \\\n",
       "0             0             0             0             0             0   \n",
       "1             0             0             0             0             0   \n",
       "2             0             0             0             0             0   \n",
       "3             0             0             0             0             0   \n",
       "4             0             0             0             0             0   \n",
       "\n",
       "   Complain  Response  Age  Years_Enroll_with_Company  \n",
       "0         0         1   64                          9  \n",
       "1         0         0   67                          7  \n",
       "2         0         0   56                          8  \n",
       "3         0         0   37                          7  \n",
       "4         0         0   40                          7  \n",
       "\n",
       "[5 rows x 26 columns]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "7975fc98",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 2216 entries, 0 to 2239\n",
      "Data columns (total 26 columns):\n",
      " #   Column                     Non-Null Count  Dtype  \n",
      "---  ------                     --------------  -----  \n",
      " 0   Education                  2216 non-null   int64  \n",
      " 1   Marital_Status             2216 non-null   int64  \n",
      " 2   Income                     2216 non-null   float64\n",
      " 3   Kidhome                    2216 non-null   int64  \n",
      " 4   Teenhome                   2216 non-null   int64  \n",
      " 5   Recency                    2216 non-null   int64  \n",
      " 6   MntWines                   2216 non-null   int64  \n",
      " 7   MntFruits                  2216 non-null   int64  \n",
      " 8   MntMeatProducts            2216 non-null   int64  \n",
      " 9   MntFishProducts            2216 non-null   int64  \n",
      " 10  MntSweetProducts           2216 non-null   int64  \n",
      " 11  MntGoldProds               2216 non-null   int64  \n",
      " 12  NumDealsPurchases          2216 non-null   int64  \n",
      " 13  NumWebPurchases            2216 non-null   int64  \n",
      " 14  NumCatalogPurchases        2216 non-null   int64  \n",
      " 15  NumStorePurchases          2216 non-null   int64  \n",
      " 16  NumWebVisitsMonth          2216 non-null   int64  \n",
      " 17  AcceptedCmp3               2216 non-null   int64  \n",
      " 18  AcceptedCmp4               2216 non-null   int64  \n",
      " 19  AcceptedCmp5               2216 non-null   int64  \n",
      " 20  AcceptedCmp1               2216 non-null   int64  \n",
      " 21  AcceptedCmp2               2216 non-null   int64  \n",
      " 22  Complain                   2216 non-null   int64  \n",
      " 23  Response                   2216 non-null   int64  \n",
      " 24  Age                        2216 non-null   int64  \n",
      " 25  Years_Enroll_with_Company  2216 non-null   int64  \n",
      "dtypes: float64(1), int64(25)\n",
      "memory usage: 467.4 KB\n"
     ]
    }
   ],
   "source": [
    "data1.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "bea592ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Education</th>\n",
       "      <th>Marital_Status</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>MntFruits</th>\n",
       "      <th>MntMeatProducts</th>\n",
       "      <th>MntFishProducts</th>\n",
       "      <th>...</th>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Response</th>\n",
       "      <th>Age</th>\n",
       "      <th>Years_Enroll_with_Company</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "      <td>2216.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.980596</td>\n",
       "      <td>1.501805</td>\n",
       "      <td>52247.251354</td>\n",
       "      <td>0.441787</td>\n",
       "      <td>0.505415</td>\n",
       "      <td>49.012635</td>\n",
       "      <td>305.091606</td>\n",
       "      <td>26.356047</td>\n",
       "      <td>166.995939</td>\n",
       "      <td>37.637635</td>\n",
       "      <td>...</td>\n",
       "      <td>5.319043</td>\n",
       "      <td>0.073556</td>\n",
       "      <td>0.074007</td>\n",
       "      <td>0.073105</td>\n",
       "      <td>0.064079</td>\n",
       "      <td>0.013538</td>\n",
       "      <td>0.009477</td>\n",
       "      <td>0.150271</td>\n",
       "      <td>52.179603</td>\n",
       "      <td>7.971570</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.256346</td>\n",
       "      <td>1.073378</td>\n",
       "      <td>25173.076661</td>\n",
       "      <td>0.536896</td>\n",
       "      <td>0.544181</td>\n",
       "      <td>28.948352</td>\n",
       "      <td>337.327920</td>\n",
       "      <td>39.793917</td>\n",
       "      <td>224.283273</td>\n",
       "      <td>54.752082</td>\n",
       "      <td>...</td>\n",
       "      <td>2.425359</td>\n",
       "      <td>0.261106</td>\n",
       "      <td>0.261842</td>\n",
       "      <td>0.260367</td>\n",
       "      <td>0.244950</td>\n",
       "      <td>0.115588</td>\n",
       "      <td>0.096907</td>\n",
       "      <td>0.357417</td>\n",
       "      <td>11.985554</td>\n",
       "      <td>0.685618</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1730.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>7.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>35303.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>51381.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>49.000000</td>\n",
       "      <td>174.500000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>68522.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>505.000000</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>232.250000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>62.000000</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>5.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>666666.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>1493.000000</td>\n",
       "      <td>199.000000</td>\n",
       "      <td>1725.000000</td>\n",
       "      <td>259.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>128.000000</td>\n",
       "      <td>9.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Education  Marital_Status         Income      Kidhome     Teenhome  \\\n",
       "count  2216.000000     2216.000000    2216.000000  2216.000000  2216.000000   \n",
       "mean      1.980596        1.501805   52247.251354     0.441787     0.505415   \n",
       "std       1.256346        1.073378   25173.076661     0.536896     0.544181   \n",
       "min       1.000000        0.000000    1730.000000     0.000000     0.000000   \n",
       "25%       1.000000        1.000000   35303.000000     0.000000     0.000000   \n",
       "50%       1.000000        2.000000   51381.500000     0.000000     0.000000   \n",
       "75%       3.000000        2.000000   68522.000000     1.000000     1.000000   \n",
       "max       5.000000        7.000000  666666.000000     2.000000     2.000000   \n",
       "\n",
       "           Recency     MntWines    MntFruits  MntMeatProducts  \\\n",
       "count  2216.000000  2216.000000  2216.000000      2216.000000   \n",
       "mean     49.012635   305.091606    26.356047       166.995939   \n",
       "std      28.948352   337.327920    39.793917       224.283273   \n",
       "min       0.000000     0.000000     0.000000         0.000000   \n",
       "25%      24.000000    24.000000     2.000000        16.000000   \n",
       "50%      49.000000   174.500000     8.000000        68.000000   \n",
       "75%      74.000000   505.000000    33.000000       232.250000   \n",
       "max      99.000000  1493.000000   199.000000      1725.000000   \n",
       "\n",
       "       MntFishProducts  ...  NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  \\\n",
       "count      2216.000000  ...        2216.000000   2216.000000   2216.000000   \n",
       "mean         37.637635  ...           5.319043      0.073556      0.074007   \n",
       "std          54.752082  ...           2.425359      0.261106      0.261842   \n",
       "min           0.000000  ...           0.000000      0.000000      0.000000   \n",
       "25%           3.000000  ...           3.000000      0.000000      0.000000   \n",
       "50%          12.000000  ...           6.000000      0.000000      0.000000   \n",
       "75%          50.000000  ...           7.000000      0.000000      0.000000   \n",
       "max         259.000000  ...          20.000000      1.000000      1.000000   \n",
       "\n",
       "       AcceptedCmp5  AcceptedCmp1  AcceptedCmp2     Complain     Response  \\\n",
       "count   2216.000000   2216.000000   2216.000000  2216.000000  2216.000000   \n",
       "mean       0.073105      0.064079      0.013538     0.009477     0.150271   \n",
       "std        0.260367      0.244950      0.115588     0.096907     0.357417   \n",
       "min        0.000000      0.000000      0.000000     0.000000     0.000000   \n",
       "25%        0.000000      0.000000      0.000000     0.000000     0.000000   \n",
       "50%        0.000000      0.000000      0.000000     0.000000     0.000000   \n",
       "75%        0.000000      0.000000      0.000000     0.000000     0.000000   \n",
       "max        1.000000      1.000000      1.000000     1.000000     1.000000   \n",
       "\n",
       "               Age  Years_Enroll_with_Company  \n",
       "count  2216.000000                2216.000000  \n",
       "mean     52.179603                   7.971570  \n",
       "std      11.985554                   0.685618  \n",
       "min      25.000000                   7.000000  \n",
       "25%      44.000000                   8.000000  \n",
       "50%      51.000000                   8.000000  \n",
       "75%      62.000000                   8.000000  \n",
       "max     128.000000                   9.000000  \n",
       "\n",
       "[8 rows x 26 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "d4ac7caa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Education</th>\n",
       "      <th>Marital_Status</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>MntFruits</th>\n",
       "      <th>MntMeatProducts</th>\n",
       "      <th>MntFishProducts</th>\n",
       "      <th>...</th>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Response</th>\n",
       "      <th>Age</th>\n",
       "      <th>Years_Enroll_with_Company</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Education</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.001815</td>\n",
       "      <td>-0.092809</td>\n",
       "      <td>0.031455</td>\n",
       "      <td>-0.050363</td>\n",
       "      <td>-0.024200</td>\n",
       "      <td>-0.066223</td>\n",
       "      <td>-0.060410</td>\n",
       "      <td>-0.083937</td>\n",
       "      <td>-0.030674</td>\n",
       "      <td>...</td>\n",
       "      <td>0.036851</td>\n",
       "      <td>0.008482</td>\n",
       "      <td>-0.024453</td>\n",
       "      <td>-0.035686</td>\n",
       "      <td>-0.025298</td>\n",
       "      <td>-0.023061</td>\n",
       "      <td>0.001511</td>\n",
       "      <td>-0.019644</td>\n",
       "      <td>-0.037935</td>\n",
       "      <td>0.016131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Marital_Status</th>\n",
       "      <td>-0.001815</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.023956</td>\n",
       "      <td>-0.046430</td>\n",
       "      <td>0.098916</td>\n",
       "      <td>-0.018221</td>\n",
       "      <td>0.030631</td>\n",
       "      <td>0.007970</td>\n",
       "      <td>-0.035413</td>\n",
       "      <td>0.000875</td>\n",
       "      <td>...</td>\n",
       "      <td>0.008016</td>\n",
       "      <td>-0.001279</td>\n",
       "      <td>0.022013</td>\n",
       "      <td>0.009220</td>\n",
       "      <td>0.008145</td>\n",
       "      <td>-0.000197</td>\n",
       "      <td>-0.019696</td>\n",
       "      <td>-0.011887</td>\n",
       "      <td>0.139187</td>\n",
       "      <td>0.006511</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Income</th>\n",
       "      <td>-0.092809</td>\n",
       "      <td>0.023956</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.428669</td>\n",
       "      <td>0.019133</td>\n",
       "      <td>-0.003970</td>\n",
       "      <td>0.578650</td>\n",
       "      <td>0.430842</td>\n",
       "      <td>0.584633</td>\n",
       "      <td>0.438871</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.553088</td>\n",
       "      <td>-0.016174</td>\n",
       "      <td>0.184400</td>\n",
       "      <td>0.335943</td>\n",
       "      <td>0.276820</td>\n",
       "      <td>0.087545</td>\n",
       "      <td>-0.027225</td>\n",
       "      <td>0.133047</td>\n",
       "      <td>0.161791</td>\n",
       "      <td>-0.022451</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kidhome</th>\n",
       "      <td>0.031455</td>\n",
       "      <td>-0.046430</td>\n",
       "      <td>-0.428669</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.039869</td>\n",
       "      <td>0.011492</td>\n",
       "      <td>-0.497336</td>\n",
       "      <td>-0.373396</td>\n",
       "      <td>-0.439261</td>\n",
       "      <td>-0.388884</td>\n",
       "      <td>...</td>\n",
       "      <td>0.447477</td>\n",
       "      <td>0.016066</td>\n",
       "      <td>-0.162026</td>\n",
       "      <td>-0.205305</td>\n",
       "      <td>-0.174163</td>\n",
       "      <td>-0.081868</td>\n",
       "      <td>0.040978</td>\n",
       "      <td>-0.077909</td>\n",
       "      <td>-0.233615</td>\n",
       "      <td>-0.052943</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Teenhome</th>\n",
       "      <td>-0.050363</td>\n",
       "      <td>0.098916</td>\n",
       "      <td>0.019133</td>\n",
       "      <td>-0.039869</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.013838</td>\n",
       "      <td>0.003747</td>\n",
       "      <td>-0.176558</td>\n",
       "      <td>-0.261122</td>\n",
       "      <td>-0.205242</td>\n",
       "      <td>...</td>\n",
       "      <td>0.131240</td>\n",
       "      <td>-0.042522</td>\n",
       "      <td>0.038376</td>\n",
       "      <td>-0.190791</td>\n",
       "      <td>-0.144855</td>\n",
       "      <td>-0.015521</td>\n",
       "      <td>0.003307</td>\n",
       "      <td>-0.153901</td>\n",
       "      <td>0.350791</td>\n",
       "      <td>0.009488</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Recency</th>\n",
       "      <td>-0.024200</td>\n",
       "      <td>-0.018221</td>\n",
       "      <td>-0.003970</td>\n",
       "      <td>0.011492</td>\n",
       "      <td>0.013838</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.015721</td>\n",
       "      <td>-0.005844</td>\n",
       "      <td>0.022518</td>\n",
       "      <td>0.000551</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.018564</td>\n",
       "      <td>-0.032257</td>\n",
       "      <td>0.017566</td>\n",
       "      <td>-0.000482</td>\n",
       "      <td>-0.021061</td>\n",
       "      <td>-0.001400</td>\n",
       "      <td>0.013637</td>\n",
       "      <td>-0.199766</td>\n",
       "      <td>0.016295</td>\n",
       "      <td>0.027064</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MntWines</th>\n",
       "      <td>-0.066223</td>\n",
       "      <td>0.030631</td>\n",
       "      <td>0.578650</td>\n",
       "      <td>-0.497336</td>\n",
       "      <td>0.003747</td>\n",
       "      <td>0.015721</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.387024</td>\n",
       "      <td>0.568860</td>\n",
       "      <td>0.397721</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.321978</td>\n",
       "      <td>0.061463</td>\n",
       "      <td>0.373143</td>\n",
       "      <td>0.473550</td>\n",
       "      <td>0.351417</td>\n",
       "      <td>0.206185</td>\n",
       "      <td>-0.039470</td>\n",
       "      <td>0.246299</td>\n",
       "      <td>0.159451</td>\n",
       "      <td>0.154991</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MntFruits</th>\n",
       "      <td>-0.060410</td>\n",
       "      <td>0.007970</td>\n",
       "      <td>0.430842</td>\n",
       "      <td>-0.373396</td>\n",
       "      <td>-0.176558</td>\n",
       "      <td>-0.005844</td>\n",
       "      <td>0.387024</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.547822</td>\n",
       "      <td>0.593431</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.418729</td>\n",
       "      <td>0.014424</td>\n",
       "      <td>0.006396</td>\n",
       "      <td>0.212871</td>\n",
       "      <td>0.191816</td>\n",
       "      <td>-0.009980</td>\n",
       "      <td>-0.005324</td>\n",
       "      <td>0.122443</td>\n",
       "      <td>0.017747</td>\n",
       "      <td>0.054961</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MntMeatProducts</th>\n",
       "      <td>-0.083937</td>\n",
       "      <td>-0.035413</td>\n",
       "      <td>0.584633</td>\n",
       "      <td>-0.439261</td>\n",
       "      <td>-0.261122</td>\n",
       "      <td>0.022518</td>\n",
       "      <td>0.568860</td>\n",
       "      <td>0.547822</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.573574</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.539484</td>\n",
       "      <td>0.018438</td>\n",
       "      <td>0.091618</td>\n",
       "      <td>0.376867</td>\n",
       "      <td>0.313076</td>\n",
       "      <td>0.043521</td>\n",
       "      <td>-0.023782</td>\n",
       "      <td>0.237746</td>\n",
       "      <td>0.033697</td>\n",
       "      <td>0.078562</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MntFishProducts</th>\n",
       "      <td>-0.030674</td>\n",
       "      <td>0.000875</td>\n",
       "      <td>0.438871</td>\n",
       "      <td>-0.388884</td>\n",
       "      <td>-0.205242</td>\n",
       "      <td>0.000551</td>\n",
       "      <td>0.397721</td>\n",
       "      <td>0.593431</td>\n",
       "      <td>0.573574</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.446423</td>\n",
       "      <td>-0.000219</td>\n",
       "      <td>0.016105</td>\n",
       "      <td>0.196277</td>\n",
       "      <td>0.261608</td>\n",
       "      <td>0.002345</td>\n",
       "      <td>-0.021220</td>\n",
       "      <td>0.108145</td>\n",
       "      <td>0.040425</td>\n",
       "      <td>0.067327</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MntSweetProducts</th>\n",
       "      <td>-0.035126</td>\n",
       "      <td>0.016609</td>\n",
       "      <td>0.440744</td>\n",
       "      <td>-0.378026</td>\n",
       "      <td>-0.163056</td>\n",
       "      <td>0.025110</td>\n",
       "      <td>0.390326</td>\n",
       "      <td>0.571606</td>\n",
       "      <td>0.535136</td>\n",
       "      <td>0.583867</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.422371</td>\n",
       "      <td>0.001780</td>\n",
       "      <td>0.029313</td>\n",
       "      <td>0.259230</td>\n",
       "      <td>0.245102</td>\n",
       "      <td>0.010188</td>\n",
       "      <td>-0.022641</td>\n",
       "      <td>0.116170</td>\n",
       "      <td>0.020204</td>\n",
       "      <td>0.073794</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MntGoldProds</th>\n",
       "      <td>-0.065257</td>\n",
       "      <td>0.036639</td>\n",
       "      <td>0.325916</td>\n",
       "      <td>-0.355029</td>\n",
       "      <td>-0.019887</td>\n",
       "      <td>0.017663</td>\n",
       "      <td>0.392731</td>\n",
       "      <td>0.396487</td>\n",
       "      <td>0.359446</td>\n",
       "      <td>0.427142</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.247691</td>\n",
       "      <td>0.124958</td>\n",
       "      <td>0.024015</td>\n",
       "      <td>0.181397</td>\n",
       "      <td>0.170132</td>\n",
       "      <td>0.050734</td>\n",
       "      <td>-0.031133</td>\n",
       "      <td>0.140332</td>\n",
       "      <td>0.064208</td>\n",
       "      <td>0.143728</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NumDealsPurchases</th>\n",
       "      <td>-0.008422</td>\n",
       "      <td>0.053612</td>\n",
       "      <td>-0.083101</td>\n",
       "      <td>0.216913</td>\n",
       "      <td>0.386246</td>\n",
       "      <td>0.002115</td>\n",
       "      <td>0.008886</td>\n",
       "      <td>-0.134512</td>\n",
       "      <td>-0.121308</td>\n",
       "      <td>-0.143241</td>\n",
       "      <td>...</td>\n",
       "      <td>0.346048</td>\n",
       "      <td>-0.023135</td>\n",
       "      <td>0.016077</td>\n",
       "      <td>-0.184253</td>\n",
       "      <td>-0.127374</td>\n",
       "      <td>-0.037981</td>\n",
       "      <td>0.000497</td>\n",
       "      <td>0.003451</td>\n",
       "      <td>0.058668</td>\n",
       "      <td>0.185314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NumWebPurchases</th>\n",
       "      <td>-0.063105</td>\n",
       "      <td>0.057722</td>\n",
       "      <td>0.387878</td>\n",
       "      <td>-0.371977</td>\n",
       "      <td>0.162077</td>\n",
       "      <td>-0.005641</td>\n",
       "      <td>0.553786</td>\n",
       "      <td>0.302039</td>\n",
       "      <td>0.307090</td>\n",
       "      <td>0.299688</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.051226</td>\n",
       "      <td>0.042958</td>\n",
       "      <td>0.162932</td>\n",
       "      <td>0.141189</td>\n",
       "      <td>0.159292</td>\n",
       "      <td>0.034829</td>\n",
       "      <td>-0.016642</td>\n",
       "      <td>0.151431</td>\n",
       "      <td>0.153051</td>\n",
       "      <td>0.169698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NumCatalogPurchases</th>\n",
       "      <td>-0.067180</td>\n",
       "      <td>0.018943</td>\n",
       "      <td>0.589162</td>\n",
       "      <td>-0.504501</td>\n",
       "      <td>-0.112692</td>\n",
       "      <td>0.024081</td>\n",
       "      <td>0.634753</td>\n",
       "      <td>0.486263</td>\n",
       "      <td>0.734127</td>\n",
       "      <td>0.532757</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.522004</td>\n",
       "      <td>0.104345</td>\n",
       "      <td>0.140182</td>\n",
       "      <td>0.322471</td>\n",
       "      <td>0.309026</td>\n",
       "      <td>0.099915</td>\n",
       "      <td>-0.020839</td>\n",
       "      <td>0.219914</td>\n",
       "      <td>0.121764</td>\n",
       "      <td>0.086008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NumStorePurchases</th>\n",
       "      <td>-0.052680</td>\n",
       "      <td>0.028762</td>\n",
       "      <td>0.529362</td>\n",
       "      <td>-0.501349</td>\n",
       "      <td>0.049737</td>\n",
       "      <td>-0.000434</td>\n",
       "      <td>0.640012</td>\n",
       "      <td>0.458491</td>\n",
       "      <td>0.486006</td>\n",
       "      <td>0.457745</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.432398</td>\n",
       "      <td>-0.068913</td>\n",
       "      <td>0.178020</td>\n",
       "      <td>0.212954</td>\n",
       "      <td>0.178743</td>\n",
       "      <td>0.085271</td>\n",
       "      <td>-0.016941</td>\n",
       "      <td>0.036241</td>\n",
       "      <td>0.127891</td>\n",
       "      <td>0.097526</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <td>0.036851</td>\n",
       "      <td>0.008016</td>\n",
       "      <td>-0.553088</td>\n",
       "      <td>0.447477</td>\n",
       "      <td>0.131240</td>\n",
       "      <td>-0.018564</td>\n",
       "      <td>-0.321978</td>\n",
       "      <td>-0.418729</td>\n",
       "      <td>-0.539484</td>\n",
       "      <td>-0.446423</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.061307</td>\n",
       "      <td>-0.028666</td>\n",
       "      <td>-0.277883</td>\n",
       "      <td>-0.194773</td>\n",
       "      <td>-0.007362</td>\n",
       "      <td>0.019785</td>\n",
       "      <td>-0.002209</td>\n",
       "      <td>-0.123904</td>\n",
       "      <td>0.253336</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <td>0.008482</td>\n",
       "      <td>-0.001279</td>\n",
       "      <td>-0.016174</td>\n",
       "      <td>0.016066</td>\n",
       "      <td>-0.042522</td>\n",
       "      <td>-0.032257</td>\n",
       "      <td>0.061463</td>\n",
       "      <td>0.014424</td>\n",
       "      <td>0.018438</td>\n",
       "      <td>-0.000219</td>\n",
       "      <td>...</td>\n",
       "      <td>0.061307</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.079659</td>\n",
       "      <td>0.080248</td>\n",
       "      <td>0.095683</td>\n",
       "      <td>0.071702</td>\n",
       "      <td>0.008124</td>\n",
       "      <td>0.254005</td>\n",
       "      <td>-0.061784</td>\n",
       "      <td>-0.011011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <td>-0.024453</td>\n",
       "      <td>0.022013</td>\n",
       "      <td>0.184400</td>\n",
       "      <td>-0.162026</td>\n",
       "      <td>0.038376</td>\n",
       "      <td>0.017566</td>\n",
       "      <td>0.373143</td>\n",
       "      <td>0.006396</td>\n",
       "      <td>0.091618</td>\n",
       "      <td>0.016105</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.028666</td>\n",
       "      <td>-0.079659</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.311314</td>\n",
       "      <td>0.242782</td>\n",
       "      <td>0.295050</td>\n",
       "      <td>-0.027652</td>\n",
       "      <td>0.180205</td>\n",
       "      <td>0.066109</td>\n",
       "      <td>0.009210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <td>-0.035686</td>\n",
       "      <td>0.009220</td>\n",
       "      <td>0.335943</td>\n",
       "      <td>-0.205305</td>\n",
       "      <td>-0.190791</td>\n",
       "      <td>-0.000482</td>\n",
       "      <td>0.473550</td>\n",
       "      <td>0.212871</td>\n",
       "      <td>0.376867</td>\n",
       "      <td>0.196277</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.277883</td>\n",
       "      <td>0.080248</td>\n",
       "      <td>0.311314</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.407878</td>\n",
       "      <td>0.222121</td>\n",
       "      <td>-0.009576</td>\n",
       "      <td>0.323374</td>\n",
       "      <td>-0.010575</td>\n",
       "      <td>-0.021230</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <td>-0.025298</td>\n",
       "      <td>0.008145</td>\n",
       "      <td>0.276820</td>\n",
       "      <td>-0.174163</td>\n",
       "      <td>-0.144855</td>\n",
       "      <td>-0.021061</td>\n",
       "      <td>0.351417</td>\n",
       "      <td>0.191816</td>\n",
       "      <td>0.313076</td>\n",
       "      <td>0.261608</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.194773</td>\n",
       "      <td>0.095683</td>\n",
       "      <td>0.242782</td>\n",
       "      <td>0.407878</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.176637</td>\n",
       "      <td>-0.025594</td>\n",
       "      <td>0.297345</td>\n",
       "      <td>0.009611</td>\n",
       "      <td>-0.037536</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <td>-0.023061</td>\n",
       "      <td>-0.000197</td>\n",
       "      <td>0.087545</td>\n",
       "      <td>-0.081868</td>\n",
       "      <td>-0.015521</td>\n",
       "      <td>-0.001400</td>\n",
       "      <td>0.206185</td>\n",
       "      <td>-0.009980</td>\n",
       "      <td>0.043521</td>\n",
       "      <td>0.002345</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.007362</td>\n",
       "      <td>0.071702</td>\n",
       "      <td>0.295050</td>\n",
       "      <td>0.222121</td>\n",
       "      <td>0.176637</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.011459</td>\n",
       "      <td>0.169294</td>\n",
       "      <td>0.006717</td>\n",
       "      <td>-0.000838</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Complain</th>\n",
       "      <td>0.001511</td>\n",
       "      <td>-0.019696</td>\n",
       "      <td>-0.027225</td>\n",
       "      <td>0.040978</td>\n",
       "      <td>0.003307</td>\n",
       "      <td>0.013637</td>\n",
       "      <td>-0.039470</td>\n",
       "      <td>-0.005324</td>\n",
       "      <td>-0.023782</td>\n",
       "      <td>-0.021220</td>\n",
       "      <td>...</td>\n",
       "      <td>0.019785</td>\n",
       "      <td>0.008124</td>\n",
       "      <td>-0.027652</td>\n",
       "      <td>-0.009576</td>\n",
       "      <td>-0.025594</td>\n",
       "      <td>-0.011459</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.002029</td>\n",
       "      <td>0.030407</td>\n",
       "      <td>0.024442</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Response</th>\n",
       "      <td>-0.019644</td>\n",
       "      <td>-0.011887</td>\n",
       "      <td>0.133047</td>\n",
       "      <td>-0.077909</td>\n",
       "      <td>-0.153901</td>\n",
       "      <td>-0.199766</td>\n",
       "      <td>0.246299</td>\n",
       "      <td>0.122443</td>\n",
       "      <td>0.237746</td>\n",
       "      <td>0.108145</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.002209</td>\n",
       "      <td>0.254005</td>\n",
       "      <td>0.180205</td>\n",
       "      <td>0.323374</td>\n",
       "      <td>0.297345</td>\n",
       "      <td>0.169294</td>\n",
       "      <td>-0.002029</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.023692</td>\n",
       "      <td>0.172198</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>-0.037935</td>\n",
       "      <td>0.139187</td>\n",
       "      <td>0.161791</td>\n",
       "      <td>-0.233615</td>\n",
       "      <td>0.350791</td>\n",
       "      <td>0.016295</td>\n",
       "      <td>0.159451</td>\n",
       "      <td>0.017747</td>\n",
       "      <td>0.033697</td>\n",
       "      <td>0.040425</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.123904</td>\n",
       "      <td>-0.061784</td>\n",
       "      <td>0.066109</td>\n",
       "      <td>-0.010575</td>\n",
       "      <td>0.009611</td>\n",
       "      <td>0.006717</td>\n",
       "      <td>0.030407</td>\n",
       "      <td>-0.023692</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.027288</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Years_Enroll_with_Company</th>\n",
       "      <td>0.016131</td>\n",
       "      <td>0.006511</td>\n",
       "      <td>-0.022451</td>\n",
       "      <td>-0.052943</td>\n",
       "      <td>0.009488</td>\n",
       "      <td>0.027064</td>\n",
       "      <td>0.154991</td>\n",
       "      <td>0.054961</td>\n",
       "      <td>0.078562</td>\n",
       "      <td>0.067327</td>\n",
       "      <td>...</td>\n",
       "      <td>0.253336</td>\n",
       "      <td>-0.011011</td>\n",
       "      <td>0.009210</td>\n",
       "      <td>-0.021230</td>\n",
       "      <td>-0.037536</td>\n",
       "      <td>-0.000838</td>\n",
       "      <td>0.024442</td>\n",
       "      <td>0.172198</td>\n",
       "      <td>-0.027288</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>26 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                           Education  Marital_Status    Income   Kidhome  \\\n",
       "Education                   1.000000       -0.001815 -0.092809  0.031455   \n",
       "Marital_Status             -0.001815        1.000000  0.023956 -0.046430   \n",
       "Income                     -0.092809        0.023956  1.000000 -0.428669   \n",
       "Kidhome                     0.031455       -0.046430 -0.428669  1.000000   \n",
       "Teenhome                   -0.050363        0.098916  0.019133 -0.039869   \n",
       "Recency                    -0.024200       -0.018221 -0.003970  0.011492   \n",
       "MntWines                   -0.066223        0.030631  0.578650 -0.497336   \n",
       "MntFruits                  -0.060410        0.007970  0.430842 -0.373396   \n",
       "MntMeatProducts            -0.083937       -0.035413  0.584633 -0.439261   \n",
       "MntFishProducts            -0.030674        0.000875  0.438871 -0.388884   \n",
       "MntSweetProducts           -0.035126        0.016609  0.440744 -0.378026   \n",
       "MntGoldProds               -0.065257        0.036639  0.325916 -0.355029   \n",
       "NumDealsPurchases          -0.008422        0.053612 -0.083101  0.216913   \n",
       "NumWebPurchases            -0.063105        0.057722  0.387878 -0.371977   \n",
       "NumCatalogPurchases        -0.067180        0.018943  0.589162 -0.504501   \n",
       "NumStorePurchases          -0.052680        0.028762  0.529362 -0.501349   \n",
       "NumWebVisitsMonth           0.036851        0.008016 -0.553088  0.447477   \n",
       "AcceptedCmp3                0.008482       -0.001279 -0.016174  0.016066   \n",
       "AcceptedCmp4               -0.024453        0.022013  0.184400 -0.162026   \n",
       "AcceptedCmp5               -0.035686        0.009220  0.335943 -0.205305   \n",
       "AcceptedCmp1               -0.025298        0.008145  0.276820 -0.174163   \n",
       "AcceptedCmp2               -0.023061       -0.000197  0.087545 -0.081868   \n",
       "Complain                    0.001511       -0.019696 -0.027225  0.040978   \n",
       "Response                   -0.019644       -0.011887  0.133047 -0.077909   \n",
       "Age                        -0.037935        0.139187  0.161791 -0.233615   \n",
       "Years_Enroll_with_Company   0.016131        0.006511 -0.022451 -0.052943   \n",
       "\n",
       "                           Teenhome   Recency  MntWines  MntFruits  \\\n",
       "Education                 -0.050363 -0.024200 -0.066223  -0.060410   \n",
       "Marital_Status             0.098916 -0.018221  0.030631   0.007970   \n",
       "Income                     0.019133 -0.003970  0.578650   0.430842   \n",
       "Kidhome                   -0.039869  0.011492 -0.497336  -0.373396   \n",
       "Teenhome                   1.000000  0.013838  0.003747  -0.176558   \n",
       "Recency                    0.013838  1.000000  0.015721  -0.005844   \n",
       "MntWines                   0.003747  0.015721  1.000000   0.387024   \n",
       "MntFruits                 -0.176558 -0.005844  0.387024   1.000000   \n",
       "MntMeatProducts           -0.261122  0.022518  0.568860   0.547822   \n",
       "MntFishProducts           -0.205242  0.000551  0.397721   0.593431   \n",
       "MntSweetProducts          -0.163056  0.025110  0.390326   0.571606   \n",
       "MntGoldProds              -0.019887  0.017663  0.392731   0.396487   \n",
       "NumDealsPurchases          0.386246  0.002115  0.008886  -0.134512   \n",
       "NumWebPurchases            0.162077 -0.005641  0.553786   0.302039   \n",
       "NumCatalogPurchases       -0.112692  0.024081  0.634753   0.486263   \n",
       "NumStorePurchases          0.049737 -0.000434  0.640012   0.458491   \n",
       "NumWebVisitsMonth          0.131240 -0.018564 -0.321978  -0.418729   \n",
       "AcceptedCmp3              -0.042522 -0.032257  0.061463   0.014424   \n",
       "AcceptedCmp4               0.038376  0.017566  0.373143   0.006396   \n",
       "AcceptedCmp5              -0.190791 -0.000482  0.473550   0.212871   \n",
       "AcceptedCmp1              -0.144855 -0.021061  0.351417   0.191816   \n",
       "AcceptedCmp2              -0.015521 -0.001400  0.206185  -0.009980   \n",
       "Complain                   0.003307  0.013637 -0.039470  -0.005324   \n",
       "Response                  -0.153901 -0.199766  0.246299   0.122443   \n",
       "Age                        0.350791  0.016295  0.159451   0.017747   \n",
       "Years_Enroll_with_Company  0.009488  0.027064  0.154991   0.054961   \n",
       "\n",
       "                           MntMeatProducts  MntFishProducts  ...  \\\n",
       "Education                        -0.083937        -0.030674  ...   \n",
       "Marital_Status                   -0.035413         0.000875  ...   \n",
       "Income                            0.584633         0.438871  ...   \n",
       "Kidhome                          -0.439261        -0.388884  ...   \n",
       "Teenhome                         -0.261122        -0.205242  ...   \n",
       "Recency                           0.022518         0.000551  ...   \n",
       "MntWines                          0.568860         0.397721  ...   \n",
       "MntFruits                         0.547822         0.593431  ...   \n",
       "MntMeatProducts                   1.000000         0.573574  ...   \n",
       "MntFishProducts                   0.573574         1.000000  ...   \n",
       "MntSweetProducts                  0.535136         0.583867  ...   \n",
       "MntGoldProds                      0.359446         0.427142  ...   \n",
       "NumDealsPurchases                -0.121308        -0.143241  ...   \n",
       "NumWebPurchases                   0.307090         0.299688  ...   \n",
       "NumCatalogPurchases               0.734127         0.532757  ...   \n",
       "NumStorePurchases                 0.486006         0.457745  ...   \n",
       "NumWebVisitsMonth                -0.539484        -0.446423  ...   \n",
       "AcceptedCmp3                      0.018438        -0.000219  ...   \n",
       "AcceptedCmp4                      0.091618         0.016105  ...   \n",
       "AcceptedCmp5                      0.376867         0.196277  ...   \n",
       "AcceptedCmp1                      0.313076         0.261608  ...   \n",
       "AcceptedCmp2                      0.043521         0.002345  ...   \n",
       "Complain                         -0.023782        -0.021220  ...   \n",
       "Response                          0.237746         0.108145  ...   \n",
       "Age                               0.033697         0.040425  ...   \n",
       "Years_Enroll_with_Company         0.078562         0.067327  ...   \n",
       "\n",
       "                           NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  \\\n",
       "Education                           0.036851      0.008482     -0.024453   \n",
       "Marital_Status                      0.008016     -0.001279      0.022013   \n",
       "Income                             -0.553088     -0.016174      0.184400   \n",
       "Kidhome                             0.447477      0.016066     -0.162026   \n",
       "Teenhome                            0.131240     -0.042522      0.038376   \n",
       "Recency                            -0.018564     -0.032257      0.017566   \n",
       "MntWines                           -0.321978      0.061463      0.373143   \n",
       "MntFruits                          -0.418729      0.014424      0.006396   \n",
       "MntMeatProducts                    -0.539484      0.018438      0.091618   \n",
       "MntFishProducts                    -0.446423     -0.000219      0.016105   \n",
       "MntSweetProducts                   -0.422371      0.001780      0.029313   \n",
       "MntGoldProds                       -0.247691      0.124958      0.024015   \n",
       "NumDealsPurchases                   0.346048     -0.023135      0.016077   \n",
       "NumWebPurchases                    -0.051226      0.042958      0.162932   \n",
       "NumCatalogPurchases                -0.522004      0.104345      0.140182   \n",
       "NumStorePurchases                  -0.432398     -0.068913      0.178020   \n",
       "NumWebVisitsMonth                   1.000000      0.061307     -0.028666   \n",
       "AcceptedCmp3                        0.061307      1.000000     -0.079659   \n",
       "AcceptedCmp4                       -0.028666     -0.079659      1.000000   \n",
       "AcceptedCmp5                       -0.277883      0.080248      0.311314   \n",
       "AcceptedCmp1                       -0.194773      0.095683      0.242782   \n",
       "AcceptedCmp2                       -0.007362      0.071702      0.295050   \n",
       "Complain                            0.019785      0.008124     -0.027652   \n",
       "Response                           -0.002209      0.254005      0.180205   \n",
       "Age                                -0.123904     -0.061784      0.066109   \n",
       "Years_Enroll_with_Company           0.253336     -0.011011      0.009210   \n",
       "\n",
       "                           AcceptedCmp5  AcceptedCmp1  AcceptedCmp2  Complain  \\\n",
       "Education                     -0.035686     -0.025298     -0.023061  0.001511   \n",
       "Marital_Status                 0.009220      0.008145     -0.000197 -0.019696   \n",
       "Income                         0.335943      0.276820      0.087545 -0.027225   \n",
       "Kidhome                       -0.205305     -0.174163     -0.081868  0.040978   \n",
       "Teenhome                      -0.190791     -0.144855     -0.015521  0.003307   \n",
       "Recency                       -0.000482     -0.021061     -0.001400  0.013637   \n",
       "MntWines                       0.473550      0.351417      0.206185 -0.039470   \n",
       "MntFruits                      0.212871      0.191816     -0.009980 -0.005324   \n",
       "MntMeatProducts                0.376867      0.313076      0.043521 -0.023782   \n",
       "MntFishProducts                0.196277      0.261608      0.002345 -0.021220   \n",
       "MntSweetProducts               0.259230      0.245102      0.010188 -0.022641   \n",
       "MntGoldProds                   0.181397      0.170132      0.050734 -0.031133   \n",
       "NumDealsPurchases             -0.184253     -0.127374     -0.037981  0.000497   \n",
       "NumWebPurchases                0.141189      0.159292      0.034829 -0.016642   \n",
       "NumCatalogPurchases            0.322471      0.309026      0.099915 -0.020839   \n",
       "NumStorePurchases              0.212954      0.178743      0.085271 -0.016941   \n",
       "NumWebVisitsMonth             -0.277883     -0.194773     -0.007362  0.019785   \n",
       "AcceptedCmp3                   0.080248      0.095683      0.071702  0.008124   \n",
       "AcceptedCmp4                   0.311314      0.242782      0.295050 -0.027652   \n",
       "AcceptedCmp5                   1.000000      0.407878      0.222121 -0.009576   \n",
       "AcceptedCmp1                   0.407878      1.000000      0.176637 -0.025594   \n",
       "AcceptedCmp2                   0.222121      0.176637      1.000000 -0.011459   \n",
       "Complain                      -0.009576     -0.025594     -0.011459  1.000000   \n",
       "Response                       0.323374      0.297345      0.169294 -0.002029   \n",
       "Age                           -0.010575      0.009611      0.006717  0.030407   \n",
       "Years_Enroll_with_Company     -0.021230     -0.037536     -0.000838  0.024442   \n",
       "\n",
       "                           Response       Age  Years_Enroll_with_Company  \n",
       "Education                 -0.019644 -0.037935                   0.016131  \n",
       "Marital_Status            -0.011887  0.139187                   0.006511  \n",
       "Income                     0.133047  0.161791                  -0.022451  \n",
       "Kidhome                   -0.077909 -0.233615                  -0.052943  \n",
       "Teenhome                  -0.153901  0.350791                   0.009488  \n",
       "Recency                   -0.199766  0.016295                   0.027064  \n",
       "MntWines                   0.246299  0.159451                   0.154991  \n",
       "MntFruits                  0.122443  0.017747                   0.054961  \n",
       "MntMeatProducts            0.237746  0.033697                   0.078562  \n",
       "MntFishProducts            0.108145  0.040425                   0.067327  \n",
       "MntSweetProducts           0.116170  0.020204                   0.073794  \n",
       "MntGoldProds               0.140332  0.064208                   0.143728  \n",
       "NumDealsPurchases          0.003451  0.058668                   0.185314  \n",
       "NumWebPurchases            0.151431  0.153051                   0.169698  \n",
       "NumCatalogPurchases        0.219914  0.121764                   0.086008  \n",
       "NumStorePurchases          0.036241  0.127891                   0.097526  \n",
       "NumWebVisitsMonth         -0.002209 -0.123904                   0.253336  \n",
       "AcceptedCmp3               0.254005 -0.061784                  -0.011011  \n",
       "AcceptedCmp4               0.180205  0.066109                   0.009210  \n",
       "AcceptedCmp5               0.323374 -0.010575                  -0.021230  \n",
       "AcceptedCmp1               0.297345  0.009611                  -0.037536  \n",
       "AcceptedCmp2               0.169294  0.006717                  -0.000838  \n",
       "Complain                  -0.002029  0.030407                   0.024442  \n",
       "Response                   1.000000 -0.023692                   0.172198  \n",
       "Age                       -0.023692  1.000000                  -0.027288  \n",
       "Years_Enroll_with_Company  0.172198 -0.027288                   1.000000  \n",
       "\n",
       "[26 rows x 26 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "bf549aff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    1883\n",
       "1     333\n",
       "Name: Response, dtype: int64"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1['Response'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "id": "d3185738",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1440 with 28 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplots(7,4, figsize=(20,20))  \n",
    "num=1\n",
    "for feat in data1.columns:\n",
    "    plt.subplot(7,4,num)\n",
    "    plt.hist(x=data1[feat],bins=10)\n",
    "    plt.title(f'{feat}')\n",
    "    num+=1\n",
    "    \n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "f07fbeea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([1883.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,\n",
       "         333.]),\n",
       " array([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist('Response',data=data1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "dc7440a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2       42\n",
       "6       37\n",
       "5       37\n",
       "1       37\n",
       "4       33\n",
       "        ..\n",
       "948      1\n",
       "944      1\n",
       "940      1\n",
       "934      1\n",
       "1493     1\n",
       "Name: MntWines, Length: 776, dtype: int64"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1['MntWines'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "992d6f01",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([1032.,  320.,  229.,  209.,  141.,   98.,   98.,   45.,   31.,\n",
       "          13.]),\n",
       " array([   0. ,  149.3,  298.6,  447.9,  597.2,  746.5,  895.8, 1045.1,\n",
       "        1194.4, 1343.7, 1493. ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist('MntWines',data=data1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "b48629ea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([1452.,  281.,  143.,   94.,   75.,   53.,   46.,   28.,   27.,\n",
       "          17.]),\n",
       " array([  0. ,  19.9,  39.8,  59.7,  79.6,  99.5, 119.4, 139.3, 159.2,\n",
       "        179.1, 199. ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist('MntFruits',data=data1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "94747182",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([1544.,  272.,  192.,  100.,   78.,   26.,    0.,    0.,    0.,\n",
       "           4.]),\n",
       " array([   0. ,  172.5,  345. ,  517.5,  690. ,  862.5, 1035. , 1207.5,\n",
       "        1380. , 1552.5, 1725. ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist('MntMeatProducts',data=data1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "5a01655d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([1424.,  252.,  158.,  104.,   74.,   68.,   50.,   36.,   32.,\n",
       "          18.]),\n",
       " array([  0. ,  25.9,  51.8,  77.7, 103.6, 129.5, 155.4, 181.3, 207.2,\n",
       "        233.1, 259. ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist('MntFishProducts',data=data1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "b9d0d8c8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([1.572e+03, 2.560e+02, 1.300e+02, 9.200e+01, 6.200e+01, 5.500e+01,\n",
       "        3.100e+01, 1.700e+01, 0.000e+00, 1.000e+00]),\n",
       " array([  0. ,  26.2,  52.4,  78.6, 104.8, 131. , 157.2, 183.4, 209.6,\n",
       "        235.8, 262. ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist('MntSweetProducts',data=data1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "6440b8fd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([1.297e+03, 4.270e+02, 1.790e+02, 1.110e+02, 8.400e+01, 6.400e+01,\n",
       "        3.000e+01, 2.100e+01, 1.000e+00, 2.000e+00]),\n",
       " array([  0. ,  32.1,  64.2,  96.3, 128.4, 160.5, 192.6, 224.7, 256.8,\n",
       "        288.9, 321. ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist('MntGoldProds',data=data1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "92c16322",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([1004.,  493.,  481.,   94.,   99.,   14.,   13.,    5.,    6.,\n",
       "           7.]),\n",
       " array([ 0. ,  1.5,  3. ,  4.5,  6. ,  7.5,  9. , 10.5, 12. , 13.5, 15. ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist('NumDealsPurchases',data=data1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "171e31fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Education', 'Marital_Status', 'Income', 'Kidhome', 'Teenhome',\n",
       "       'Recency', 'MntWines', 'MntFruits', 'MntMeatProducts',\n",
       "       'MntFishProducts', 'MntSweetProducts', 'MntGoldProds',\n",
       "       'NumDealsPurchases', 'NumWebPurchases', 'NumCatalogPurchases',\n",
       "       'NumStorePurchases', 'NumWebVisitsMonth', 'AcceptedCmp3',\n",
       "       'AcceptedCmp4', 'AcceptedCmp5', 'AcceptedCmp1', 'AcceptedCmp2',\n",
       "       'Complain', 'Response', 'Age', 'Years_Enroll_with_Company'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "5cb7cc29",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Education</th>\n",
       "      <th>Marital_Status</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>MntFruits</th>\n",
       "      <th>MntMeatProducts</th>\n",
       "      <th>MntFishProducts</th>\n",
       "      <th>...</th>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Response</th>\n",
       "      <th>Age</th>\n",
       "      <th>Years_Enroll_with_Company</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>46344.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>38</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>67</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>26646.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>26</td>\n",
       "      <td>11</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>10</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>37</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>30351.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>47</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>5648.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>68</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>71</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>7500.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>59</td>\n",
       "      <td>6</td>\n",
       "      <td>16</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>...</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2229</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>24434.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>20</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>49</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2230</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>11012.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>82</td>\n",
       "      <td>24</td>\n",
       "      <td>3</td>\n",
       "      <td>26</td>\n",
       "      <td>7</td>\n",
       "      <td>...</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>37</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2232</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>26816.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>50</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2233</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>666666.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>9</td>\n",
       "      <td>14</td>\n",
       "      <td>18</td>\n",
       "      <td>8</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>44</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2234</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>34421.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>81</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>47</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>622 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Education  Marital_Status    Income  Kidhome  Teenhome  Recency  \\\n",
       "1             1               0   46344.0        1         1       38   \n",
       "3             1               1   26646.0        1         0       26   \n",
       "8             2               1   30351.0        1         0       19   \n",
       "9             2               1    5648.0        1         1       68   \n",
       "11            4               2    7500.0        0         0       59   \n",
       "...         ...             ...       ...      ...       ...      ...   \n",
       "2229          1               2   24434.0        2         0        9   \n",
       "2230          1               0   11012.0        1         0       82   \n",
       "2232          1               0   26816.0        0         0       50   \n",
       "2233          1               1  666666.0        1         0       23   \n",
       "2234          1               2   34421.0        1         0       81   \n",
       "\n",
       "      MntWines  MntFruits  MntMeatProducts  MntFishProducts  ...  \\\n",
       "1           11          1                6                2  ...   \n",
       "3           11          4               20               10  ...   \n",
       "8           14          0               24                3  ...   \n",
       "9           28          0                6                1  ...   \n",
       "11           6         16               11               11  ...   \n",
       "...        ...        ...              ...              ...  ...   \n",
       "2229         3          2                8               20  ...   \n",
       "2230        24          3               26                7  ...   \n",
       "2232         5          1                6                3  ...   \n",
       "2233         9         14               18                8  ...   \n",
       "2234         3          3                7                6  ...   \n",
       "\n",
       "      NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  \\\n",
       "1                     5             0             0             0   \n",
       "3                     6             0             0             0   \n",
       "8                     9             0             0             0   \n",
       "9                    20             1             0             0   \n",
       "11                    8             0             0             0   \n",
       "...                 ...           ...           ...           ...   \n",
       "2229                  7             0             0             0   \n",
       "2230                  9             1             0             0   \n",
       "2232                  4             0             0             0   \n",
       "2233                  6             0             0             0   \n",
       "2234                  7             0             0             0   \n",
       "\n",
       "      AcceptedCmp1  AcceptedCmp2  Complain  Response  Age  \\\n",
       "1                0             0         0         0   67   \n",
       "3                0             0         0         0   37   \n",
       "8                0             0         0         1   47   \n",
       "9                0             0         0         0   71   \n",
       "11               0             0         0         0   45   \n",
       "...            ...           ...       ...       ...  ...   \n",
       "2229             0             0         0         0   49   \n",
       "2230             0             0         0         0   37   \n",
       "2232             0             0         0         0   35   \n",
       "2233             0             0         0         0   44   \n",
       "2234             0             0         0         0   47   \n",
       "\n",
       "      Years_Enroll_with_Company  \n",
       "1                             7  \n",
       "3                             7  \n",
       "8                             8  \n",
       "9                             7  \n",
       "11                            9  \n",
       "...                         ...  \n",
       "2229                          7  \n",
       "2230                          8  \n",
       "2232                          9  \n",
       "2233                          8  \n",
       "2234                          8  \n",
       "\n",
       "[622 rows x 26 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.loc[data1['MntWines']<30,:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "5c756120",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Education</th>\n",
       "      <th>Marital_Status</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>MntFruits</th>\n",
       "      <th>MntMeatProducts</th>\n",
       "      <th>MntFishProducts</th>\n",
       "      <th>...</th>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Response</th>\n",
       "      <th>Age</th>\n",
       "      <th>Years_Enroll_with_Company</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2447.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>42</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1725</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>42</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>7500.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>46</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>25721.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>75</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>50</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>40246.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>68</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>44</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>26326.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2208</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>14918.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>52</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>15</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2215</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>36807.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>88</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>67</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2222</th>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>7500.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>42</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2229</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>24434.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>20</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>49</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2234</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>34421.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>81</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>47</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>130 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Education  Marital_Status   Income  Kidhome  Teenhome  Recency  \\\n",
       "21            1               2   2447.0        1         0       42   \n",
       "44            3               2   7500.0        1         0       19   \n",
       "65            1               2  25721.0        1         0       75   \n",
       "75            1               3  40246.0        1         0       68   \n",
       "78            5               1  26326.0        0         0       12   \n",
       "...         ...             ...      ...      ...       ...      ...   \n",
       "2208          4               1  14918.0        0         1       52   \n",
       "2215          1               1  36807.0        1         1       88   \n",
       "2222          5               1   7500.0        1         0        7   \n",
       "2229          1               2  24434.0        2         0        9   \n",
       "2234          1               2  34421.0        1         0       81   \n",
       "\n",
       "      MntWines  MntFruits  MntMeatProducts  MntFishProducts  ...  \\\n",
       "21           1          1             1725                1  ...   \n",
       "44           3          1               10                3  ...   \n",
       "65           1          3                6                3  ...   \n",
       "75           2          1                6                2  ...   \n",
       "78           1          0                5                0  ...   \n",
       "...        ...        ...              ...              ...  ...   \n",
       "2208         3          3                3               15  ...   \n",
       "2215         4          2                5                0  ...   \n",
       "2222         2          8               11                3  ...   \n",
       "2229         3          2                8               20  ...   \n",
       "2234         3          3                7                6  ...   \n",
       "\n",
       "      NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  \\\n",
       "21                    1             0             0             0   \n",
       "44                    5             0             0             0   \n",
       "65                    7             0             0             0   \n",
       "75                    6             0             0             0   \n",
       "78                    3             0             0             0   \n",
       "...                 ...           ...           ...           ...   \n",
       "2208                  6             0             0             0   \n",
       "2215                  6             0             0             0   \n",
       "2222                  7             0             0             0   \n",
       "2229                  7             0             0             0   \n",
       "2234                  7             0             0             0   \n",
       "\n",
       "      AcceptedCmp1  AcceptedCmp2  Complain  Response  Age  \\\n",
       "21               0             0         0         0   42   \n",
       "44               0             0         0         0   46   \n",
       "65               0             0         0         1   50   \n",
       "75               0             0         0         0   44   \n",
       "78               0             0         1         0   45   \n",
       "...            ...           ...       ...       ...  ...   \n",
       "2208             0             0         0         0   58   \n",
       "2215             0             0         0         0   67   \n",
       "2222             0             0         0         0   42   \n",
       "2229             0             0         0         0   49   \n",
       "2234             0             0         0         0   47   \n",
       "\n",
       "      Years_Enroll_with_Company  \n",
       "21                            8  \n",
       "44                            8  \n",
       "65                            8  \n",
       "75                            9  \n",
       "78                            8  \n",
       "...                         ...  \n",
       "2208                          9  \n",
       "2215                          9  \n",
       "2222                          8  \n",
       "2229                          7  \n",
       "2234                          8  \n",
       "\n",
       "[130 rows x 26 columns]"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.loc[(data1['MntWines']<5)&(data1['MntFruits']<10),:]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "02c76581",
   "metadata": {},
   "source": [
    "# Set Tartget Variable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "35b3ec52",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       1\n",
       "1       0\n",
       "2       0\n",
       "3       0\n",
       "4       0\n",
       "       ..\n",
       "2235    0\n",
       "2236    0\n",
       "2237    0\n",
       "2238    0\n",
       "2239    1\n",
       "Name: Response, Length: 2216, dtype: int64"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Target Variable\n",
    "# y= target variable \n",
    "#Target Variable is Response, becasue we are predicting Response.\n",
    "\n",
    "y = data1['Response']\n",
    "y"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "463e5da6",
   "metadata": {},
   "source": [
    "# Set Predictor Variables based on correlation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "0b4b5c04",
   "metadata": {},
   "outputs": [],
   "source": [
    "feat = [x for x in data1.columns if x != 'Response']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "5245bcb1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Education</th>\n",
       "      <th>Marital_Status</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>MntFruits</th>\n",
       "      <th>MntMeatProducts</th>\n",
       "      <th>MntFishProducts</th>\n",
       "      <th>...</th>\n",
       "      <th>NumStorePurchases</th>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Age</th>\n",
       "      <th>Years_Enroll_with_Company</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>58138.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>635</td>\n",
       "      <td>88</td>\n",
       "      <td>546</td>\n",
       "      <td>172</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>64</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>46344.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>38</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>67</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>71613.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>26</td>\n",
       "      <td>426</td>\n",
       "      <td>49</td>\n",
       "      <td>127</td>\n",
       "      <td>111</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>56</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>26646.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>26</td>\n",
       "      <td>11</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>10</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>37</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>58293.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>94</td>\n",
       "      <td>173</td>\n",
       "      <td>43</td>\n",
       "      <td>118</td>\n",
       "      <td>46</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>40</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2235</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>61223.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>46</td>\n",
       "      <td>709</td>\n",
       "      <td>43</td>\n",
       "      <td>182</td>\n",
       "      <td>42</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>54</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2236</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>64014.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>56</td>\n",
       "      <td>406</td>\n",
       "      <td>0</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>75</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2237</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>56981.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>91</td>\n",
       "      <td>908</td>\n",
       "      <td>48</td>\n",
       "      <td>217</td>\n",
       "      <td>32</td>\n",
       "      <td>...</td>\n",
       "      <td>13</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>40</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2238</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>69245.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>428</td>\n",
       "      <td>30</td>\n",
       "      <td>214</td>\n",
       "      <td>80</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>65</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2239</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>52869.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>84</td>\n",
       "      <td>3</td>\n",
       "      <td>61</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>67</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2216 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Education  Marital_Status   Income  Kidhome  Teenhome  Recency  \\\n",
       "0             1               0  58138.0        0         0       58   \n",
       "1             1               0  46344.0        1         1       38   \n",
       "2             1               1  71613.0        0         0       26   \n",
       "3             1               1  26646.0        1         0       26   \n",
       "4             2               2  58293.0        1         0       94   \n",
       "...         ...             ...      ...      ...       ...      ...   \n",
       "2235          1               2  61223.0        0         1       46   \n",
       "2236          2               1  64014.0        2         1       56   \n",
       "2237          1               3  56981.0        0         0       91   \n",
       "2238          3               1  69245.0        0         1        8   \n",
       "2239          2               2  52869.0        1         1       40   \n",
       "\n",
       "      MntWines  MntFruits  MntMeatProducts  MntFishProducts  ...  \\\n",
       "0          635         88              546              172  ...   \n",
       "1           11          1                6                2  ...   \n",
       "2          426         49              127              111  ...   \n",
       "3           11          4               20               10  ...   \n",
       "4          173         43              118               46  ...   \n",
       "...        ...        ...              ...              ...  ...   \n",
       "2235       709         43              182               42  ...   \n",
       "2236       406          0               30                0  ...   \n",
       "2237       908         48              217               32  ...   \n",
       "2238       428         30              214               80  ...   \n",
       "2239        84          3               61                2  ...   \n",
       "\n",
       "      NumStorePurchases  NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  \\\n",
       "0                     4                  7             0             0   \n",
       "1                     2                  5             0             0   \n",
       "2                    10                  4             0             0   \n",
       "3                     4                  6             0             0   \n",
       "4                     6                  5             0             0   \n",
       "...                 ...                ...           ...           ...   \n",
       "2235                  4                  5             0             0   \n",
       "2236                  5                  7             0             0   \n",
       "2237                 13                  6             0             1   \n",
       "2238                 10                  3             0             0   \n",
       "2239                  4                  7             0             0   \n",
       "\n",
       "      AcceptedCmp5  AcceptedCmp1  AcceptedCmp2  Complain  Age  \\\n",
       "0                0             0             0         0   64   \n",
       "1                0             0             0         0   67   \n",
       "2                0             0             0         0   56   \n",
       "3                0             0             0         0   37   \n",
       "4                0             0             0         0   40   \n",
       "...            ...           ...           ...       ...  ...   \n",
       "2235             0             0             0         0   54   \n",
       "2236             0             1             0         0   75   \n",
       "2237             0             0             0         0   40   \n",
       "2238             0             0             0         0   65   \n",
       "2239             0             0             0         0   67   \n",
       "\n",
       "      Years_Enroll_with_Company  \n",
       "0                             9  \n",
       "1                             7  \n",
       "2                             8  \n",
       "3                             7  \n",
       "4                             7  \n",
       "...                         ...  \n",
       "2235                          8  \n",
       "2236                          7  \n",
       "2237                          7  \n",
       "2238                          7  \n",
       "2239                          9  \n",
       "\n",
       "[2216 rows x 25 columns]"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# highest correlation with the quality \n",
    "x = data[feat]\n",
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "5fd0ecd0",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.20, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "17cf67a9",
   "metadata": {},
   "outputs": [],
   "source": [
    "logreg = LogisticRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "0e637593",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/anna_hj/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logreg.fit(x,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "5a74f77f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-1.61787322e-03, -8.81902960e-04, -1.46658981e-05,\n",
       "         4.28401422e-04, -1.70012541e-03, -2.37145609e-02,\n",
       "         1.86824470e-03, -1.23688732e-04,  2.11514169e-03,\n",
       "        -2.30977776e-03,  1.22665325e-03,  2.82313601e-03,\n",
       "         1.23799880e-04,  2.66416205e-03,  4.08149555e-03,\n",
       "        -1.26096486e-02,  2.84236955e-03,  1.97659083e-03,\n",
       "         1.04416929e-03,  1.67488217e-03,  1.63372084e-03,\n",
       "         5.02257863e-04,  3.10106779e-05, -2.07788139e-02,\n",
       "        -1.20486656e-03]])"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logreg.coef_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "dc3e0546",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-0.00051171])"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logreg.intercept_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "8392fa40",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8569494584837545"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#R-score\n",
    "logreg.score(x,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "1f38288d",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/anna_hj/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logreg.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "22d51497",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8626126126126126"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logreg.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d95d2c86",
   "metadata": {},
   "source": [
    "### Adjusted $R^2$ formula\n",
    "$$Adjusted \\; R^2 = 1 - { (1 - R^2) (n - 1)  \\over n - k - 1 }$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "7b009594",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Flag intermediate output\n",
    "show_steps = True   # for testing/debugging"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "4d85096d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Education', 'Marital_Status', 'Income', 'Kidhome', 'Teenhome',\n",
       "       'Recency', 'MntWines', 'MntFruits', 'MntMeatProducts',\n",
       "       'MntFishProducts', 'MntSweetProducts', 'MntGoldProds',\n",
       "       'NumDealsPurchases', 'NumWebPurchases', 'NumCatalogPurchases',\n",
       "       'NumStorePurchases', 'NumWebVisitsMonth', 'AcceptedCmp3',\n",
       "       'AcceptedCmp4', 'AcceptedCmp5', 'AcceptedCmp1', 'AcceptedCmp2',\n",
       "       'Complain', 'Response', 'Age', 'Years_Enroll_with_Company'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "2ec633c9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "(Step) Excluded = Complain, Age, MntFruits, MntSweetProducts, NumWebPurchases, NumDealsPurchases, Recency, AcceptedCmp3, AcceptedCmp5, Years_Enroll_with_Company, Kidhome, Teenhome, MntFishProducts, NumCatalogPurchases, AcceptedCmp4, MntMeatProducts, NumStorePurchases, Education, MntWines, Marital_Status, AcceptedCmp2, AcceptedCmp1, MntGoldProds, NumWebVisitsMonth, Income\n",
      "(Step) Trying Complain...\n",
      "(Step) - Features = Complain\n",
      "(Step) - scoring: This = 0.860; Best = 0.000\n",
      "(Step) - New Best!   : Feature = Complain; scoring = 0.860\n",
      "(Step) Trying Age...\n",
      "(Step) - Features = Age\n",
      "(Step) - scoring: This = 0.860; Best = 0.860\n",
      "(Step) Trying MntFruits...\n",
      "(Step) - Features = MntFruits\n",
      "(Step) - scoring: This = 0.860; Best = 0.860\n",
      "(Step) Trying MntSweetProducts...\n",
      "(Step) - Features = MntSweetProducts\n",
      "(Step) - scoring: This = 0.860; Best = 0.860\n",
      "(Step) Trying NumWebPurchases...\n",
      "(Step) - Features = NumWebPurchases\n",
      "(Step) - scoring: This = 0.860; Best = 0.860\n",
      "(Step) Trying NumDealsPurchases...\n",
      "(Step) - Features = NumDealsPurchases\n",
      "(Step) - scoring: This = 0.860; Best = 0.860\n",
      "(Step) Trying Recency...\n",
      "(Step) - Features = Recency\n",
      "(Step) - scoring: This = 0.860; Best = 0.860\n",
      "(Step) Trying AcceptedCmp3...\n",
      "(Step) - Features = AcceptedCmp3\n",
      "(Step) - scoring: This = 0.860; Best = 0.860\n",
      "(Step) Trying AcceptedCmp5...\n",
      "(Step) - Features = AcceptedCmp5\n",
      "(Step) - scoring: This = 0.863; Best = 0.860\n",
      "(Step) - New Best!   : Feature = AcceptedCmp5; scoring = 0.863\n",
      "(Step) Trying Years_Enroll_with_Company...\n",
      "(Step) - Features = Years_Enroll_with_Company\n",
      "(Step) - scoring: This = 0.860; Best = 0.863\n",
      "(Step) Trying Kidhome...\n",
      "(Step) - Features = Kidhome\n",
      "(Step) - scoring: This = 0.860; Best = 0.863\n",
      "(Step) Trying Teenhome...\n",
      "(Step) - Features = Teenhome\n",
      "(Step) - scoring: This = 0.860; Best = 0.863\n",
      "(Step) Trying MntFishProducts...\n",
      "(Step) - Features = MntFishProducts\n",
      "(Step) - scoring: This = 0.860; Best = 0.863\n",
      "(Step) Trying NumCatalogPurchases...\n",
      "(Step) - Features = NumCatalogPurchases\n",
      "(Step) - scoring: This = 0.858; Best = 0.863\n",
      "(Step) Trying AcceptedCmp4...\n",
      "(Step) - Features = AcceptedCmp4\n",
      "(Step) - scoring: This = 0.860; Best = 0.863\n",
      "(Step) Trying MntMeatProducts...\n",
      "(Step) - Features = MntMeatProducts\n",
      "(Step) - scoring: This = 0.856; Best = 0.863\n",
      "(Step) Trying NumStorePurchases...\n",
      "(Step) - Features = NumStorePurchases\n",
      "(Step) - scoring: This = 0.860; Best = 0.863\n",
      "(Step) Trying Education...\n",
      "(Step) - Features = Education\n",
      "(Step) - scoring: This = 0.860; Best = 0.863\n",
      "(Step) Trying MntWines...\n",
      "(Step) - Features = MntWines\n",
      "(Step) - scoring: This = 0.863; Best = 0.863\n",
      "(Step) Trying Marital_Status...\n",
      "(Step) - Features = Marital_Status\n",
      "(Step) - scoring: This = 0.860; Best = 0.863\n",
      "(Step) Trying AcceptedCmp2...\n",
      "(Step) - Features = AcceptedCmp2\n",
      "(Step) - scoring: This = 0.858; Best = 0.863\n",
      "(Step) Trying AcceptedCmp1...\n",
      "(Step) - Features = AcceptedCmp1\n",
      "(Step) - scoring: This = 0.847; Best = 0.863\n",
      "(Step) Trying MntGoldProds...\n",
      "(Step) - Features = MntGoldProds\n",
      "(Step) - scoring: This = 0.860; Best = 0.863\n",
      "(Step) Trying NumWebVisitsMonth...\n",
      "(Step) - Features = NumWebVisitsMonth\n",
      "(Step) - scoring: This = 0.860; Best = 0.863\n",
      "(Step) Trying Income...\n",
      "(Step) - Features = Income\n",
      "(Step) - scoring: This = 0.860; Best = 0.863\n",
      "Added feature AcceptedCmp5 with scoring = 0.863\n",
      "\n",
      "(Step) Excluded = Complain, Age, MntFruits, MntSweetProducts, NumWebPurchases, NumDealsPurchases, Recency, AcceptedCmp3, Years_Enroll_with_Company, Kidhome, Teenhome, MntFishProducts, NumCatalogPurchases, AcceptedCmp4, MntMeatProducts, NumStorePurchases, Education, MntWines, Marital_Status, AcceptedCmp2, AcceptedCmp1, MntGoldProds, NumWebVisitsMonth, Income\n",
      "(Step) Trying Complain...\n",
      "(Step) - Features = AcceptedCmp5, Complain\n",
      "(Step) - scoring: This = 0.863; Best = 0.863\n",
      "(Step) Trying Age...\n",
      "(Step) - Features = AcceptedCmp5, Age\n",
      "(Step) - scoring: This = 0.863; Best = 0.863\n",
      "(Step) Trying MntFruits...\n",
      "(Step) - Features = AcceptedCmp5, MntFruits\n",
      "(Step) - scoring: This = 0.865; Best = 0.863\n",
      "(Step) - New Best!   : Feature = MntFruits; scoring = 0.865\n",
      "(Step) Trying MntSweetProducts...\n",
      "(Step) - Features = AcceptedCmp5, MntSweetProducts\n",
      "(Step) - scoring: This = 0.863; Best = 0.865\n",
      "(Step) Trying NumWebPurchases...\n",
      "(Step) - Features = AcceptedCmp5, NumWebPurchases\n",
      "(Step) - scoring: This = 0.860; Best = 0.865\n",
      "(Step) Trying NumDealsPurchases...\n",
      "(Step) - Features = AcceptedCmp5, NumDealsPurchases\n",
      "(Step) - scoring: This = 0.863; Best = 0.865\n",
      "(Step) Trying Recency...\n",
      "(Step) - Features = AcceptedCmp5, Recency\n",
      "(Step) - scoring: This = 0.863; Best = 0.865\n",
      "(Step) Trying AcceptedCmp3...\n",
      "(Step) - Features = AcceptedCmp5, AcceptedCmp3\n",
      "(Step) - scoring: This = 0.860; Best = 0.865\n",
      "(Step) Trying Years_Enroll_with_Company...\n",
      "(Step) - Features = AcceptedCmp5, Years_Enroll_with_Company\n",
      "(Step) - scoring: This = 0.867; Best = 0.865\n",
      "(Step) - New Best!   : Feature = Years_Enroll_with_Company; scoring = 0.867\n",
      "(Step) Trying Kidhome...\n",
      "(Step) - Features = AcceptedCmp5, Kidhome\n",
      "(Step) - scoring: This = 0.863; Best = 0.867\n",
      "(Step) Trying Teenhome...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome\n",
      "(Step) - scoring: This = 0.872; Best = 0.867\n",
      "(Step) - New Best!   : Feature = Teenhome; scoring = 0.872\n",
      "(Step) Trying MntFishProducts...\n",
      "(Step) - Features = AcceptedCmp5, MntFishProducts\n",
      "(Step) - scoring: This = 0.860; Best = 0.872\n",
      "(Step) Trying NumCatalogPurchases...\n",
      "(Step) - Features = AcceptedCmp5, NumCatalogPurchases\n",
      "(Step) - scoring: This = 0.860; Best = 0.872\n",
      "(Step) Trying AcceptedCmp4...\n",
      "(Step) - Features = AcceptedCmp5, AcceptedCmp4\n",
      "(Step) - scoring: This = 0.872; Best = 0.872\n",
      "(Step) Trying MntMeatProducts...\n",
      "(Step) - Features = AcceptedCmp5, MntMeatProducts\n",
      "(Step) - scoring: This = 0.863; Best = 0.872\n",
      "(Step) Trying NumStorePurchases...\n",
      "(Step) - Features = AcceptedCmp5, NumStorePurchases\n",
      "(Step) - scoring: This = 0.863; Best = 0.872\n",
      "(Step) Trying Education...\n",
      "(Step) - Features = AcceptedCmp5, Education\n",
      "(Step) - scoring: This = 0.863; Best = 0.872\n",
      "(Step) Trying MntWines...\n",
      "(Step) - Features = AcceptedCmp5, MntWines\n",
      "(Step) - scoring: This = 0.863; Best = 0.872\n",
      "(Step) Trying Marital_Status...\n",
      "(Step) - Features = AcceptedCmp5, Marital_Status\n",
      "(Step) - scoring: This = 0.863; Best = 0.872\n",
      "(Step) Trying AcceptedCmp2...\n",
      "(Step) - Features = AcceptedCmp5, AcceptedCmp2\n",
      "(Step) - scoring: This = 0.863; Best = 0.872\n",
      "(Step) Trying AcceptedCmp1...\n",
      "(Step) - Features = AcceptedCmp5, AcceptedCmp1\n",
      "(Step) - scoring: This = 0.867; Best = 0.872\n",
      "(Step) Trying MntGoldProds...\n",
      "(Step) - Features = AcceptedCmp5, MntGoldProds\n",
      "(Step) - scoring: This = 0.863; Best = 0.872\n",
      "(Step) Trying NumWebVisitsMonth...\n",
      "(Step) - Features = AcceptedCmp5, NumWebVisitsMonth\n",
      "(Step) - scoring: This = 0.860; Best = 0.872\n",
      "(Step) Trying Income...\n",
      "(Step) - Features = AcceptedCmp5, Income\n",
      "(Step) - scoring: This = 0.860; Best = 0.872\n",
      "Added feature Teenhome with scoring = 0.872\n",
      "\n",
      "(Step) Excluded = Complain, Age, MntFruits, MntSweetProducts, NumWebPurchases, NumDealsPurchases, Recency, AcceptedCmp3, Years_Enroll_with_Company, Kidhome, MntFishProducts, NumCatalogPurchases, AcceptedCmp4, MntMeatProducts, NumStorePurchases, Education, MntWines, Marital_Status, AcceptedCmp2, AcceptedCmp1, MntGoldProds, NumWebVisitsMonth, Income\n",
      "(Step) Trying Complain...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, Complain\n",
      "(Step) - scoring: This = 0.872; Best = 0.872\n",
      "(Step) Trying Age...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, Age\n",
      "(Step) - scoring: This = 0.872; Best = 0.872\n",
      "(Step) Trying MntFruits...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, MntFruits\n",
      "(Step) - scoring: This = 0.872; Best = 0.872\n",
      "(Step) Trying MntSweetProducts...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, MntSweetProducts\n",
      "(Step) - scoring: This = 0.869; Best = 0.872\n",
      "(Step) Trying NumWebPurchases...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, NumWebPurchases\n",
      "(Step) - scoring: This = 0.865; Best = 0.872\n",
      "(Step) Trying NumDealsPurchases...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, NumDealsPurchases\n",
      "(Step) - scoring: This = 0.869; Best = 0.872\n",
      "(Step) Trying Recency...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, Recency\n",
      "(Step) - scoring: This = 0.869; Best = 0.872\n",
      "(Step) Trying AcceptedCmp3...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, AcceptedCmp3\n",
      "(Step) - scoring: This = 0.872; Best = 0.872\n",
      "(Step) Trying Years_Enroll_with_Company...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, Years_Enroll_with_Company\n",
      "(Step) - scoring: This = 0.872; Best = 0.872\n",
      "(Step) Trying Kidhome...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, Kidhome\n",
      "(Step) - scoring: This = 0.872; Best = 0.872\n",
      "(Step) Trying MntFishProducts...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, MntFishProducts\n",
      "(Step) - scoring: This = 0.865; Best = 0.872\n",
      "(Step) Trying NumCatalogPurchases...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, NumCatalogPurchases\n",
      "(Step) - scoring: This = 0.865; Best = 0.872\n",
      "(Step) Trying AcceptedCmp4...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, AcceptedCmp4\n",
      "(Step) - scoring: This = 0.867; Best = 0.872\n",
      "(Step) Trying MntMeatProducts...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, MntMeatProducts\n",
      "(Step) - scoring: This = 0.867; Best = 0.872\n",
      "(Step) Trying NumStorePurchases...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, NumStorePurchases\n",
      "(Step) - scoring: This = 0.872; Best = 0.872\n",
      "(Step) Trying Education...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, Education\n",
      "(Step) - scoring: This = 0.872; Best = 0.872\n",
      "(Step) Trying MntWines...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, MntWines\n",
      "(Step) - scoring: This = 0.865; Best = 0.872\n",
      "(Step) Trying Marital_Status...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, Marital_Status\n",
      "(Step) - scoring: This = 0.872; Best = 0.872\n",
      "(Step) Trying AcceptedCmp2...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, AcceptedCmp2\n",
      "(Step) - scoring: This = 0.872; Best = 0.872\n",
      "(Step) Trying AcceptedCmp1...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, AcceptedCmp1\n",
      "(Step) - scoring: This = 0.867; Best = 0.872\n",
      "(Step) Trying MntGoldProds...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, MntGoldProds\n",
      "(Step) - scoring: This = 0.869; Best = 0.872\n",
      "(Step) Trying NumWebVisitsMonth...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, NumWebVisitsMonth\n",
      "(Step) - scoring: This = 0.867; Best = 0.872\n",
      "(Step) Trying Income...\n",
      "(Step) - Features = AcceptedCmp5, Teenhome, Income\n",
      "(Step) - scoring: This = 0.860; Best = 0.872\n",
      "\n",
      "Resulting features:\n",
      "AcceptedCmp5, Teenhome\n"
     ]
    }
   ],
   "source": [
    "## Use Forward Feature Selection to pick a good model\n",
    "\n",
    "# start with no predictors\n",
    "included = []\n",
    "# keep track of model and parameters\n",
    "best = {'feature': '', 'scoring': 0}\n",
    "# create a model object to hold the modelling parameters\n",
    "model = LogisticRegression() # create a model for Linear Regression\n",
    "# get the number of cases in the test data\n",
    "n = X_test.shape[0]\n",
    "\n",
    "while True:\n",
    "    changed = False\n",
    "    \n",
    "    if show_steps:\n",
    "        print('') \n",
    "\n",
    "    # list the features to be evaluated\n",
    "    excluded = list(set(x.columns) - set(included))\n",
    "    \n",
    "    if show_steps:\n",
    "        print('(Step) Excluded = %s' % ', '.join(excluded))  \n",
    "\n",
    "    # for each remaining feature to be evaluated\n",
    "    for new_column in excluded:\n",
    "        \n",
    "        if show_steps:\n",
    "            print('(Step) Trying %s...' % new_column)\n",
    "            print('(Step) - Features = %s' % ', '.join(included + [new_column]))\n",
    "\n",
    "        # fit the model with the Training data\n",
    "        fit = model.fit(X_train[included + [new_column]], y_train) # fit a model; consider which predictors should be included\n",
    "        # calculate the score (R^2 for Regression)\n",
    "        scoring = model.score(X_test[included + [new_column]],y_test) # calculate the score\n",
    "        \n",
    "        \n",
    "        if show_steps:\n",
    "            print('(Step) - scoring: This = %.3f; Best = %.3f' % \n",
    "                  (scoring, best['scoring']))\n",
    "\n",
    "        # if model improves\n",
    "        if scoring > best['scoring']:\n",
    "            # record new parameters\n",
    "            best = {'feature': new_column, 'scoring': scoring }\n",
    "            # flag that found a better model\n",
    "            changed = True\n",
    "            if show_steps:\n",
    "                print('(Step) - New Best!   : Feature = %s; scoring = %.3f' % \n",
    "                      (best['feature'], best['scoring']))\n",
    "    # END for\n",
    "\n",
    "    # if found a better model after testing all remaining features\n",
    "    if changed:\n",
    "        # update control details\n",
    "        included.append(best['feature'])\n",
    "        excluded = list(set(excluded) - set(best['feature']))\n",
    "        print('Added feature %-4s with scoring = %.3f' % \n",
    "              (best['feature'], best['scoring']))\n",
    "    else:\n",
    "        # terminate if no better model\n",
    "        break\n",
    "\n",
    "print('')\n",
    "print('Resulting features:')\n",
    "print(', '.join(included))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "8d17e0c7",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/anna_hj/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/anna_hj/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/anna_hj/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/anna_hj/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n",
      "/Users/anna_hj/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([0.84234234, 0.86004515, 0.83747178, 0.86230248, 0.86455982])"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#from sklearn.model_selection import cross_val_score\n",
    "#Cross-Validation\n",
    "cross_val_score(model, x, y)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "746cfbe6",
   "metadata": {},
   "source": [
    "## 1. Logistic Regression Model"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4effdae7",
   "metadata": {},
   "source": [
    "Use Logistic Regression and examine accuracy score, confusion matrix, classification report for that model.\n",
    "\n",
    "- Define Target, Predictors\n",
    "- Train-Test Split\n",
    "- Evaluate Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "942c3f5d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Education', 'Marital_Status', 'Income', 'Kidhome', 'Teenhome',\n",
       "       'Recency', 'MntWines', 'MntFruits', 'MntMeatProducts',\n",
       "       'MntFishProducts', 'MntSweetProducts', 'MntGoldProds',\n",
       "       'NumDealsPurchases', 'NumWebPurchases', 'NumCatalogPurchases',\n",
       "       'NumStorePurchases', 'NumWebVisitsMonth', 'AcceptedCmp3',\n",
       "       'AcceptedCmp4', 'AcceptedCmp5', 'AcceptedCmp1', 'AcceptedCmp2',\n",
       "       'Complain', 'Response', 'Age', 'Years_Enroll_with_Company'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "3aeff1dc",
   "metadata": {},
   "outputs": [],
   "source": [
    "y = data1['Response']\n",
    "x = data1[feat]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "4dfe60d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(x, y, random_state = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "c2079fdb",
   "metadata": {},
   "outputs": [],
   "source": [
    "logreg = LogisticRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "2d53352a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/anna_hj/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logreg.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "e083b91d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-7.58704707e-04, -7.12454679e-04, -2.35868637e-05,\n",
       "         1.08041510e-04, -4.47264630e-04, -2.67588710e-02,\n",
       "         1.96197283e-03, -2.51537787e-03,  2.67892423e-03,\n",
       "        -1.79579105e-03,  1.65954346e-03,  3.03807879e-03,\n",
       "         8.72469446e-05,  7.28784920e-04,  9.94836551e-04,\n",
       "        -3.61013381e-03,  1.93834025e-04,  5.18266000e-04,\n",
       "         2.94758990e-04,  4.40711729e-04,  4.55273035e-04,\n",
       "         1.40471048e-04,  1.16903658e-05, -1.10687955e-02,\n",
       "        -1.02216648e-03]])"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logreg.coef_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "40379f43",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-0.00022655])"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logreg.intercept_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "72b7c156",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8465703971119134"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logreg.score(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "b8e3e4a2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8664259927797834"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logreg.score(X_test,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "1b3dc6ec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[466  11]\n",
      " [ 63  14]]\n"
     ]
    }
   ],
   "source": [
    "from sklearn import metrics\n",
    "y_pred_class = logreg.predict(X_test)\n",
    "print(metrics.confusion_matrix(y_test, y_pred_class))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "ab87f5b5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[['TN' 'FP']\n",
      " ['FN' 'TP']]\n"
     ]
    }
   ],
   "source": [
    "print(np.asarray([['TN', 'FP'], ['FN', 'TP']]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "0c82f96d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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5kyGDh0KwM0330z//v1R1UzbETZv3szevXtp0aIFAEWKFEmbd/To0dPWu+GGG3jvvffOOC6BkKcTxZEjJ3j88YX8978rAKhR40KqVi3hcVTG5Lzk5GS+/PJLevToATjVTg0aNDhtmcqVKxMfH8/ff//N2rVrGTRoULbbfe655yhatChr1qwB4ODB7HsEbtq0iYULFxIZGUlKSgqffPIJ9957Lz/88AOXXnoppUuX5vbbb+ehhx6iefPmbN++nXbt2rFhw4bTtrNixQpq166dNl29enUWLVpEVFQUCxcu5IknnuCjjz4CYNmyZaxevZrixYvzxBNP0KpVK6ZMmcKhQ4do1KgRbdq0oVSpUnzxxRcUKFCAzZs30717d1asWHFG/C1atODIkSNnvD5ixAjatGlz2mu7du2ifPnygJNsixYtyv79+7nwwowvzp02bRrdunU7LSGMGzeOUaNGcfLkSb766qu01xs2bMiQIUOyO9w5Is8minnzNtO79xx27PibqKgIBg9uzpNPtiB//jx7SEwgncUv/5x0/Phx6tevz7Zt22jQoAHXXXcdQJa/as+m18zChQuZPn162nSxYsWyXeeWW24hMjISgG7duvHss89y7733Mn36dLp165a23dT6eIC///6bI0eOEBsbm/banj17KFmyZNr04cOHufvuu9m8eTMiQmJiYtq86667juLFiwOwYMECZs2axYgRIwCnG/P27du5+OKL6d+/P3FxcURGRrJp06YM41+8eHG27zGV6pn/96yO7/Tp03nnnXdOe61fv37069eP999/n2HDhvHWW28BUKpUKXbv3u13LOcjT54VZ8xYzy23fAg4jdZTpnSlbl27LakJPzExMcTFxXH48GE6derEuHHjeOCBB6hVqxaLFi06bdmtW7dSuHBhYmNjqVWrFj/99FNatU5mMks4vq+l79NfqFChtOdNmzZly5Yt7Nu3j08//TTtF3JKSgrLli0jJibzO0HGxMSctu2nnnqKa6+9lk8++YRt27bRsmXLDPepqnz00UdUq1bttO0NHTqU0qVLs2rVKlJSUihQoECG+z2bEkW5cuXYsWMH5cqVIykpicOHD6clrPRWrVpFUlLSGSW9VLfddhv3339/2nRCQkKWxycn5c5eT+c5xHjnzpfRoMFFvPLKdXz/fU9LEibsFS1alDFjxjBixAgSExO5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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate the prediction values for each of the test observations using predict_proba() function rather than just predict\n",
    "preds = logreg.predict_proba(X_test)[:,1]\n",
    "\n",
    "# Store the false positive rate(fpr), true positive rate (tpr) in vectors for use in the graph\n",
    "fpr, tpr, _ = metrics.roc_curve(y_test, preds)\n",
    "\n",
    "# Store the Area Under the Curve (AUC) so we can annotate our graph with theis metric\n",
    "roc_auc = metrics.auc(fpr, tpr)\n",
    "\n",
    "# Plot the ROC Curve\n",
    "plt.figure()\n",
    "lw = 2\n",
    "plt.plot(fpr, tpr, color='darkorange', lw = lw, label = 'ROC curve (area = %0.2f)' % roc_auc)\n",
    "plt.plot([0, 1], [0, 1], color = 'navy', lw = lw, linestyle = '--')\n",
    "plt.xlim([0.0, 1.0])\n",
    "plt.ylim([0.0, 1.0])\n",
    "plt.xlabel('False Positive Rate')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.title('Receiver operating characteristic example')\n",
    "plt.legend(loc = \"lower right\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "7743e027",
   "metadata": {},
   "outputs": [],
   "source": [
    "y1 = data1['Response']\n",
    "x1 = data1[['Recency']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "514f7384",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(x1, y1, random_state = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "ec8cd7ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "logreg = LogisticRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "54521d5c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logreg.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "23f53f3b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8459687123947052"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logreg.score(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "103d992f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8610108303249098"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logreg.score(X_test,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "80a65d2b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate the prediction values for each of the test observations using predict_proba() function rather than just predict\n",
    "preds = logreg.predict_proba(X_test)[:,1]\n",
    "\n",
    "# Store the false positive rate(fpr), true positive rate (tpr) in vectors for use in the graph\n",
    "fpr, tpr, _ = metrics.roc_curve(y_test, preds)\n",
    "\n",
    "# Store the Area Under the Curve (AUC) so we can annotate our graph with theis metric\n",
    "roc_auc = metrics.auc(fpr, tpr)\n",
    "\n",
    "# Plot the ROC Curve\n",
    "plt.figure()\n",
    "lw = 2\n",
    "plt.plot(fpr, tpr, color='darkorange', lw = lw, label = 'ROC curve (area = %0.2f)' % roc_auc)\n",
    "plt.plot([0, 1], [0, 1], color = 'navy', lw = lw, linestyle = '--')\n",
    "plt.xlim([0.0, 1.0])\n",
    "plt.ylim([0.0, 1.0])\n",
    "plt.xlabel('False Positive Rate')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.title('Receiver operating characteristic example')\n",
    "plt.legend(loc = \"lower right\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0290396",
   "metadata": {},
   "source": [
    "# 2. Decision Tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "id": "77f9a7fc",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Split your data\n",
    "x = data1[feat]\n",
    "y = data1['Response']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "id": "3639d5f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(x,y, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "id": "25574d0c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define ML model(s)\n",
    "tree = DecisionTreeClassifier(max_depth=10,random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "id": "e34badb1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeClassifier(max_depth=10, random_state=42)"
      ]
     },
     "execution_count": 168,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Fit model\n",
    "tree.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "id": "d557e209",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8537906137184116"
      ]
     },
     "execution_count": 169,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tree.score(X_test,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "id": "6ddc8b6f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9608904933814681"
      ]
     },
     "execution_count": 166,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Evaluate model against training set\n",
    "tree.score(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "id": "dd4ed2b1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.01782327, 0.02194998, 0.06568674, 0.        , 0.        ,\n",
       "       0.11323365, 0.03387816, 0.02258288, 0.08246473, 0.02426529,\n",
       "       0.03308808, 0.04287298, 0.02677693, 0.0152954 , 0.04383749,\n",
       "       0.00542125, 0.04175659, 0.06378849, 0.00068514, 0.14933166,\n",
       "       0.04237414, 0.01986643, 0.00531881, 0.05601416, 0.07168774])"
      ]
     },
     "execution_count": 170,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tree.feature_importances_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "id": "b1aae04b",
   "metadata": {},
   "outputs": [],
   "source": [
    "params = {\n",
    "    \"max_depth\":range(1,50),\n",
    "    \"criterion\": [\"gini\",\"entropy\"],\n",
    "    \"class_weight\": [None,'balanced']\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "id": "e42f3a42",
   "metadata": {},
   "outputs": [],
   "source": [
    "gs_tree = DecisionTreeClassifier()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "id": "07143ea1",
   "metadata": {},
   "outputs": [],
   "source": [
    "gs = GridSearchCV(estimator=tree,\n",
    "                 param_grid=params)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "id": "23e0ac18",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GridSearchCV(estimator=DecisionTreeClassifier(max_depth=10, random_state=42),\n",
       "             param_grid={'class_weight': [None, 'balanced'],\n",
       "                         'criterion': ['gini', 'entropy'],\n",
       "                         'max_depth': range(1, 50)})"
      ]
     },
     "execution_count": 175,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gs.fit(x,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "id": "cd216ec6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeClassifier(max_depth=3, random_state=42)"
      ]
     },
     "execution_count": 176,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gs.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "id": "5a4997fb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GridSearchCV(estimator=DecisionTreeClassifier(max_depth=10, random_state=42),\n",
       "             param_grid={'class_weight': [None, 'balanced'],\n",
       "                         'criterion': ['gini', 'entropy'],\n",
       "                         'max_depth': range(1, 50)})"
      ]
     },
     "execution_count": 177,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gs.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "id": "fb12426e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Make Predictions and Evaluate the Test Model\n",
    "#NOTE: Do this only after not making any more improvements in the model.\n",
    "#Use the test data to make predictions\n",
    "#For Supervised models:\n",
    "#Check the Test Results with the Test Predictions\n",
    "best_tree = DecisionTreeClassifier(class_weight='balanced', criterion='entropy',\n",
    "                       max_depth=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "id": "8982c3df",
   "metadata": {},
   "outputs": [],
   "source": [
    "best_tree = DecisionTreeClassifier(max_depth=3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "c7e92b41",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeClassifier(max_depth=3)"
      ]
     },
     "execution_count": 180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_tree.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "id": "cb351725",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8754512635379061"
      ]
     },
     "execution_count": 181,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_tree.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "id": "53c4349a",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = best_tree.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "id": "52418752",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.8754512635379061\n",
      "Precision: 0.6785714285714286\n",
      "Recall: 0.24050632911392406\n"
     ]
    }
   ],
   "source": [
    "print('Accuracy:',metrics.accuracy_score(y_test,y_pred))\n",
    "print('Precision:',metrics.precision_score(y_test,y_pred))\n",
    "print('Recall:',metrics.recall_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "id": "c1157391",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate the prediction values for each of the test observations using predict_proba() function rather than just predict\n",
    "preds = best_tree.predict_proba(X_test)[:,1]\n",
    "\n",
    "# Store the false positive rate(fpr), true positive rate (tpr) in vectors for use in the graph\n",
    "fpr, tpr, _ = metrics.roc_curve(y_test, preds)\n",
    "\n",
    "# Store the Area Under the Curve (AUC) so we can annotate our graph with theis metric\n",
    "roc_auc = metrics.auc(fpr, tpr)\n",
    "\n",
    "# Plot the ROC Curve\n",
    "plt.figure()\n",
    "lw = 2\n",
    "plt.plot(fpr, tpr, color='darkorange', lw = lw, label = 'ROC curve (area = %0.2f)' % roc_auc)\n",
    "plt.plot([0, 1], [0, 1], color = 'navy', lw = lw, linestyle = '--')\n",
    "plt.xlim([0.0, 1.0])\n",
    "plt.ylim([0.0, 1.0])\n",
    "plt.xlabel('False Positive Rate')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.title('Receiver operating characteristic example')\n",
    "plt.legend(loc = \"lower right\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "id": "dfaeb25e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.        , 0.        , 0.        , 0.        , 0.        ,\n",
       "       0.17456203, 0.        , 0.        , 0.        , 0.        ,\n",
       "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
       "       0.        , 0.        , 0.18910426, 0.        , 0.44270135,\n",
       "       0.10389855, 0.        , 0.        , 0.        , 0.0897338 ])"
      ]
     },
     "execution_count": 185,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Feature Importance\n",
    "best_tree.feature_importances_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "id": "f0f89522",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Education:0.0\n",
      "Marital_Status:0.0\n",
      "Income:0.0\n",
      "Kidhome:0.0\n",
      "Teenhome:0.0\n",
      "Recency:0.1745620318616284\n",
      "MntWines:0.0\n",
      "MntFruits:0.0\n",
      "MntMeatProducts:0.0\n",
      "MntFishProducts:0.0\n",
      "MntSweetProducts:0.0\n",
      "MntGoldProds:0.0\n",
      "NumDealsPurchases:0.0\n",
      "NumWebPurchases:0.0\n",
      "NumCatalogPurchases:0.0\n",
      "NumStorePurchases:0.0\n",
      "NumWebVisitsMonth:0.0\n",
      "AcceptedCmp3:0.18910426233235098\n",
      "AcceptedCmp4:0.0\n",
      "AcceptedCmp5:0.4427013499667969\n",
      "AcceptedCmp1:0.10389855356107672\n",
      "AcceptedCmp2:0.0\n",
      "Complain:0.0\n",
      "Age:0.0\n",
      "Years_Enroll_with_Company:0.089733802278147\n"
     ]
    }
   ],
   "source": [
    "for name,score in zip(x.columns,best_tree.feature_importances_):\n",
    "    print(f'{name}:{score}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "id": "2465bc24",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Relative Importance')"
      ]
     },
     "execution_count": 188,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "features=x[feat].columns\n",
    "importances = best_tree.feature_importances_\n",
    "indices = np.argsort(importances)\n",
    "plt.figure(1)\n",
    "plt.title('Feature Importances')\n",
    "plt.barh(range(len(indices)),importances[indices],color='b',align='center')\n",
    "plt.yticks(range(len(indices)),features[indices])\n",
    "plt.xlabel('Relative Importance')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "id": "75ec991a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn import tree\n",
    "plt.figure(figsize = (20,10))\n",
    "tree.plot_tree(best_tree, \n",
    "               feature_names=x[feat].columns,\n",
    "               class_names=['0','1'],\n",
    "               filled = True,\n",
    "              fontsize=16);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f4e089d",
   "metadata": {},
   "source": [
    "# 3. Random Forests"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "ded8969c",
   "metadata": {},
   "outputs": [],
   "source": [
    "tree = DecisionTreeClassifier(max_depth=10,random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "554dd5e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Split your data\n",
    "x = data1[feat]\n",
    "y = data1['Response']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "67225a65",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(x,y, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "1f872e31",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define ML model(s)\n",
    "rfor = RandomForestClassifier(max_depth=10, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "d6243a7b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(max_depth=10, random_state=42)"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rfor.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "95114e81",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.957280385078219"
      ]
     },
     "execution_count": 165,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Evaluate model against training set\n",
    "rfor.score(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "66fa6c0b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8772563176895307"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rfor.score(X_test,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "cf7153ff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Education</th>\n",
       "      <th>Marital_Status</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>MntFruits</th>\n",
       "      <th>MntMeatProducts</th>\n",
       "      <th>MntFishProducts</th>\n",
       "      <th>...</th>\n",
       "      <th>NumStorePurchases</th>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Age</th>\n",
       "      <th>Years_Enroll_with_Company</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>58138.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>635</td>\n",
       "      <td>88</td>\n",
       "      <td>546</td>\n",
       "      <td>172</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>64</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Education  Marital_Status   Income  Kidhome  Teenhome  Recency  MntWines  \\\n",
       "0          1               0  58138.0        0         0       58       635   \n",
       "\n",
       "   MntFruits  MntMeatProducts  MntFishProducts  ...  NumStorePurchases  \\\n",
       "0         88              546              172  ...                  4   \n",
       "\n",
       "   NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  AcceptedCmp1  \\\n",
       "0                  7             0             0             0             0   \n",
       "\n",
       "   AcceptedCmp2  Complain  Age  Years_Enroll_with_Company  \n",
       "0             0         0   64                          9  \n",
       "\n",
       "[1 rows x 25 columns]"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "b9d8c7f3",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Finding the best parameters\n",
    "random_forest = RandomForestClassifier()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "1b1d087a",
   "metadata": {},
   "outputs": [],
   "source": [
    "params = {\n",
    "    'n_estimators': [100,110,120,130,140,150],\n",
    "    'criterion':['gini','entropy'],\n",
    "    'max_depth': range(3,5),\n",
    "    'class_weight':['balanced','balanced_subsample',None]\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "8a151699",
   "metadata": {},
   "outputs": [],
   "source": [
    "gs = GridSearchCV(random_forest, param_grid=params,scoring='f1')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "fd4a4c7c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GridSearchCV(estimator=RandomForestClassifier(),\n",
       "             param_grid={'class_weight': ['balanced', 'balanced_subsample',\n",
       "                                          None],\n",
       "                         'criterion': ['gini', 'entropy'],\n",
       "                         'max_depth': range(3, 5),\n",
       "                         'n_estimators': [100, 110, 120, 130, 140, 150]},\n",
       "             scoring='f1')"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gs.fit(x,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "78fc3714",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(class_weight='balanced', criterion='entropy',\n",
       "                       max_depth=4, n_estimators=150)"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gs.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "597af4f0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#from sklearn import metrics\n",
    "best_for = gs.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "3721cb55",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([5.79407638e-03, 1.16592740e-02, 6.13705664e-02, 1.21176333e-03,\n",
       "       2.17050865e-02, 1.18809916e-01, 5.62905361e-02, 1.43315101e-02,\n",
       "       7.75242583e-02, 1.41410068e-02, 1.97789528e-02, 6.64861989e-02,\n",
       "       1.04793443e-02, 2.56140876e-02, 7.63802271e-02, 2.40641870e-02,\n",
       "       3.70470279e-02, 9.09772110e-02, 9.47670205e-03, 1.08401462e-01,\n",
       "       6.80638462e-02, 4.04506644e-03, 9.34471913e-18, 1.06613658e-02,\n",
       "       6.56863269e-02])"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gs.best_estimator_.feature_importances_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "7da79a4e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Education', 'Marital_Status', 'Income', 'Kidhome', 'Teenhome',\n",
       "       'Recency', 'MntWines', 'MntFruits', 'MntMeatProducts',\n",
       "       'MntFishProducts', 'MntSweetProducts', 'MntGoldProds',\n",
       "       'NumDealsPurchases', 'NumWebPurchases', 'NumCatalogPurchases',\n",
       "       'NumStorePurchases', 'NumWebVisitsMonth', 'AcceptedCmp3',\n",
       "       'AcceptedCmp4', 'AcceptedCmp5', 'AcceptedCmp1', 'AcceptedCmp2',\n",
       "       'Complain', 'Age', 'Years_Enroll_with_Company'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "30a3bb3e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Score of Education:0.014807285002616964\n",
      "Score of Marital_Status:0.027878977411802734\n",
      "Score of Income:0.07468727169993919\n",
      "Score of Kidhome:0.005597555016607635\n",
      "Score of Teenhome:0.009825938889346839\n",
      "Score of Recency:0.09702561725572459\n",
      "Score of MntWines:0.06886940967264775\n",
      "Score of MntFruits:0.03742859733876211\n",
      "Score of MntMeatProducts:0.0689237630792086\n",
      "Score of MntFishProducts:0.038013511781554904\n",
      "Score of MntSweetProducts:0.04160104506622568\n",
      "Score of MntGoldProds:0.05293223422800304\n",
      "Score of NumDealsPurchases:0.026839172400766012\n",
      "Score of NumWebPurchases:0.029187176644865264\n",
      "Score of NumCatalogPurchases:0.04859813188565526\n",
      "Score of NumStorePurchases:0.039372725377844045\n",
      "Score of NumWebVisitsMonth:0.04486849069800995\n",
      "Score of AcceptedCmp3:0.05097241746017055\n",
      "Score of AcceptedCmp4:0.010026625082206045\n",
      "Score of AcceptedCmp5:0.0588312561370268\n",
      "Score of AcceptedCmp1:0.048788044020380276\n",
      "Score of AcceptedCmp2:0.01852294171919148\n",
      "Score of Complain:0.0016099971047014937\n",
      "Score of Age:0.04527024486479205\n",
      "Score of Years_Enroll_with_Company:0.03952157016195067\n"
     ]
    }
   ],
   "source": [
    "for name, score in zip(x.columns,rfor.feature_importances_):\n",
    "    print(f'Score of {name}:{score}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "2ee009a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Relative Importance')"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "features=x[feat].columns\n",
    "importances = best_for.feature_importances_\n",
    "indices = np.argsort(importances)\n",
    "plt.figure(1)\n",
    "plt.title('Feature Importances')\n",
    "plt.barh(range(len(indices)),importances[indices],color='b',align='center')\n",
    "plt.yticks(range(len(indices)),features[indices])\n",
    "plt.xlabel('Relative Importance')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "867504f7",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = best_for.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "0f602b4c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0,\n",
       "       0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0,\n",
       "       0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1,\n",
       "       0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0,\n",
       "       0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0,\n",
       "       0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n",
       "       0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,\n",
       "       0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,\n",
       "       0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n",
       "       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0,\n",
       "       0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0,\n",
       "       0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1,\n",
       "       1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0,\n",
       "       1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n",
       "       0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1,\n",
       "       0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0,\n",
       "       0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1,\n",
       "       0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1,\n",
       "       1, 0, 0, 0])"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "056b78c2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.8501805054151624\n",
      "Precision: 0.48484848484848486\n",
      "Recall: 0.810126582278481\n"
     ]
    }
   ],
   "source": [
    "print('Accuracy:',metrics.accuracy_score(y_test,y_pred))\n",
    "print('Precision:',metrics.precision_score(y_test,y_pred))\n",
    "print('Recall:',metrics.recall_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "f9d54b8c",
   "metadata": {},
   "outputs": [],
   "source": [
    "cf_matrix = metrics.confusion_matrix(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "ff58857e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (7,7))\n",
    "group_names = ['True Neg','False Pos','False Neg','True Pos']\n",
    "group_counts = ['{0:0.0f}'.format(value) for value in cf_matrix.flatten()]\n",
    "group_percentages = ['{0:.2%}'.format(value) for value in cf_matrix.flatten()/np.sum(cf_matrix)]\n",
    "labels = [f'{v1}\\n{v2}\\n{v3}'for v1, v2,v3 in zip (group_names,group_counts,group_percentages)]\n",
    "labels = np.asarray(labels).reshape(2,2)\n",
    "sns.heatmap(cf_matrix,annot=labels,fmt='',cmap='RdGy')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "02897544",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate the prediction values for each of the test observations using predict_proba() function rather than just predict\n",
    "preds = best_for.predict_proba(X_test)[:,1]\n",
    "\n",
    "# Store the false positive rate(fpr), true positive rate (tpr) in vectors for use in the graph\n",
    "fpr, tpr, _ = metrics.roc_curve(y_test, preds)\n",
    "\n",
    "# Store the Area Under the Curve (AUC) so we can annotate our graph with theis metric\n",
    "roc_auc = metrics.auc(fpr, tpr)\n",
    "\n",
    "# Plot the ROC Curve\n",
    "plt.figure()\n",
    "lw = 2\n",
    "plt.plot(fpr, tpr, color='darkorange', lw = lw, label = 'ROC curve (area = %0.2f)' % roc_auc)\n",
    "plt.plot([0, 1], [0, 1], color = 'navy', lw = lw, linestyle = '--')\n",
    "plt.xlim([0.0, 1.0])\n",
    "plt.ylim([0.0, 1.0])\n",
    "plt.xlabel('False Positive Rate')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.title('Receiver operating characteristic example')\n",
    "plt.legend(loc = \"lower right\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f73808fe",
   "metadata": {},
   "source": [
    "# 4. Naive Bayes\n",
    "## Use Naive Bayes\n",
    "\n",
    "Use Naive Bayes and examine accuracy score, confusion matrix, classification report for that model.\n",
    "\n",
    "- Define Target, Predictors\n",
    "- Train-Test Split\n",
    "- Evaluate Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "c6ab72dc",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.naive_bayes import GaussianNB\n",
    "gnb = GaussianNB()\n",
    "X_train, X_test, y_train, y_test = train_test_split(x, y, random_state = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "5ec8fb9e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GaussianNB()"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gnb.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "eb66c1cd",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = gnb.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "b39479cc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.7888086642599278\n"
     ]
    }
   ],
   "source": [
    "print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "80c454ec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n",
       "       1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0,\n",
       "       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,\n",
       "       0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n",
       "       0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,\n",
       "       0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0,\n",
       "       0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n",
       "       0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n",
       "       0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0,\n",
       "       0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,\n",
       "       0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0,\n",
       "       0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0,\n",
       "       0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n",
       "       1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 1, 0, 0])"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "prediction = gnb.predict(X_test)\n",
    "prediction"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79e150ab",
   "metadata": {},
   "source": [
    "# 5. Support Vector Machine\n",
    "\n",
    "## Use Support Vector Machine\n",
    "\n",
    "Use Support Vector Machine and examine accuracy score, confusion matrix, classification report for that model.\n",
    "\n",
    "- Define Target, Predictors\n",
    "- Train-Test Split\n",
    "- Evaluate Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "7305b5b9",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(x, y, random_state = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "0631c7a2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SVC(C=1000)"
      ]
     },
     "execution_count": 141,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clf = svm.SVC(kernel='rbf', C=1000)\n",
    "clf.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "391e0efa",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Create a svm Classifier\n",
    "clf = svm.SVC(kernel='rbf') # Linear Kernel\n",
    "\n",
    "#Train the model using the training sets\n",
    "clf.fit(X_train, y_train)\n",
    "\n",
    "#Predict the response for test dataset\n",
    "y_pred = clf.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "3feab35b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.8610108303249098\n"
     ]
    }
   ],
   "source": [
    "print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "fce33924",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Precision: 0.0\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/anna_hj/opt/anaconda3/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1245: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n"
     ]
    }
   ],
   "source": [
    "# Model Precision: what percentage of positive tuples are labeled as such?\n",
    "print(\"Precision:\",metrics.precision_score(y_test, y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "b6b63500",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SVC(C=1000, probability=True)"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clf = svm.SVC(kernel='rbf', C=1000, probability=True)\n",
    "clf.fit(X_test, y_test.values.ravel())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "43932894",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1f26cbb6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
